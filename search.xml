<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>《程序化广告——个性化精准投放实用手册》常见问题导读</title>
      <link href="/2018/08/01/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/%E7%A8%8B%E5%BA%8F%E5%8C%96%E5%B9%BF%E5%91%8A-%E4%B8%AA%E6%80%A7%E5%8C%96%E7%B2%BE%E5%87%86%E6%8A%95%E6%94%BE%E5%AE%9E%E7%94%A8%E6%89%8B%E5%86%8C-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E5%AF%BC%E8%AF%BB/"/>
      <url>/2018/08/01/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/%E7%A8%8B%E5%BA%8F%E5%8C%96%E5%B9%BF%E5%91%8A-%E4%B8%AA%E6%80%A7%E5%8C%96%E7%B2%BE%E5%87%86%E6%8A%95%E6%94%BE%E5%AE%9E%E7%94%A8%E6%89%8B%E5%86%8C-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E5%AF%BC%E8%AF%BB/</url>
      <content type="html"><![CDATA[<h4 id="问：与传统广告购买相比，程序化广告有什么优势？"><a href="#问：与传统广告购买相比，程序化广告有什么优势？" class="headerlink" title="问：与传统广告购买相比，程序化广告有什么优势？"></a>问：与传统广告购买相比，程序化广告有什么优势？</h4><p><strong>答： 传统广告购买模式下，广告主需要和总多媒体或者广告代理逐个谈判购买媒体资源；程序化购买模式下，广告主可以通过 <code>DSP</code>、<code>TD</code> 或广告代理来对接 <code>Ad Exchang(ADX)</code> 或 <code>SSP</code>；对于程序化广告，通过 <code>DMP</code> 的数据可以做到精准定向投放，还可以结合 <code>PCP(程序化创意平台)</code> 进行个性化广告制作，实现 “千人千面”；借助 <code>广告验证平台</code> 进行广告验证；还可以满足广告主对 <code>品牌安全</code>，<code>反作弊过滤</code>，<code>广告可见度分析</code>等方面的要求。</strong><br><br><strong>对于广告主，程序化广告无需耗费人力一一对接各个媒体渠道，直接加入交易市场即可；程序化广告的精准投放能减少预算浪费并提升转化率；实时竞价和实时投放是的广告数据的收集、分析和优化过程变动更简单、高效。</strong><br><br><strong>对于媒体，程序化广告无需媒体方好美人力资源和广告主或广告代理逐一谈判、对接，只需要对接交易市场；程序化广告能关注每个广告流的销售，将流量进行分级售卖，提高变现能力；程序化广告能更贴合用户的需求，改善媒体用户的用户体验。</strong><br></p><hr><h4 id="问：开发和运营需方平台有什么门槛？"><a href="#问：开发和运营需方平台有什么门槛？" class="headerlink" title="问：开发和运营需方平台有什么门槛？"></a>问：开发和运营需方平台有什么门槛？</h4><p><strong>答：开发和运营需求方平台有 <code>技术</code>、<code>资金</code>、<code>流量资源</code>、<code>广告主资源</code>等方面的能力</strong><br><br><strong>1. 技术：DSP 需要有一下技术能力</strong><br><br><strong>1.1 参与RTB，实时竞价的能力，保证100ms 内作出响应。</strong><br><br><strong>1.1.1 数据收集能力：及时收集竞价、曝光和点击数据</strong><br><br><strong>1.1.2 数据分析能力：竞价过程中DSP 需要分析大量流量数据数据，分析流量是否符合广告投放需求。</strong><br><br><strong>1.1.3 日志数据处理能力：竞价过程中 DSP 需要出价，DSP 需要对日志进行实时统计和离线统计，然后进行 <code>CTR预估</code>、<code>转化率预估</code>和<code>点击价值预估</code>。</strong><br><br><strong>1.1.4 用户识别能力：精准定向能力来自DSP 的用户识别能力和定向能力，DSP 需要支持Cookie 和移动设备ID映射去识别用户，DSP 需要收集用户行为数据，清晰的刻画用户画像。</strong><br><br><strong>2. 资金：DSP 系统需要足够的资金去维持各项硬件设备；还需要足够的运营资金支撑专业团队以及大客户业务</strong><br><br><strong>3. 流量资源：DSP 需要满足广告主对流量的需求</strong><br><br><strong>4. 广告主资源：DSP 需要有足够的广告主资源保证广告填充率，同时足够的广告预算去满足资金需求</strong><br><br><strong>5. 专业人才：技术人才、运营人才</strong><br><br><strong>5.1 DSP 需要技术人才高效的开发和维护DSP 系统</strong><br><br><strong>5.2 DSP 需要有专业的运营人才在数据分析的基础上，根据经验，及时调整投放过程中的各项决策</strong><br></p><hr><h4 id="问：QPS-是什么意思？流量、竞价请求、QPS-三者之间是什么关系？"><a href="#问：QPS-是什么意思？流量、竞价请求、QPS-三者之间是什么关系？" class="headerlink" title="问：QPS 是什么意思？流量、竞价请求、QPS 三者之间是什么关系？"></a>问：QPS 是什么意思？流量、竞价请求、QPS 三者之间是什么关系？</h4><p><strong>答：QPS(Query Per Second) 是每秒查询率，是对服务器在规定时间内所处理流量多少的衡量标准</strong><br><br><strong>一个竞价请求一般只携带一个竞价请求，但是为了节省网络流量等原因，部分渠道会通过一个竞价请求写到同一页面不同广告位的多个流量</strong><br><br><strong>竞价服务会根据DSP的消耗能力(广告填充率、出价和竞得率)设置固定的QPS阈值，或者根据DSP出价和竞得率自动调整QPS阈值</strong><br><br><strong>DSP 也会在ADX/SSP后台设置它能接收到QPS阈值，防止DSP系统过载</strong><br></p><hr>]]></content>
      
      <categories>
          
          <category> 计算广告 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序化广告 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>《程序化广告——个性化精准投放实用手册》学习笔记</title>
      <link href="/2018/07/29/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/2018-06-21-%E7%A8%8B%E5%BA%8F%E5%8C%96%E5%B9%BF%E5%91%8A-%E4%B8%AA%E6%80%A7%E5%8C%96%E7%B2%BE%E5%87%86%E6%8A%95%E6%94%BE%E5%AE%9E%E7%94%A8%E6%89%8B%E5%86%8C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2018/07/29/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/2018-06-21-%E7%A8%8B%E5%BA%8F%E5%8C%96%E5%B9%BF%E5%91%8A-%E4%B8%AA%E6%80%A7%E5%8C%96%E7%B2%BE%E5%87%86%E6%8A%95%E6%94%BE%E5%AE%9E%E7%94%A8%E6%89%8B%E5%86%8C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h4 id="互联网广告发展史"><a href="#互联网广告发展史" class="headerlink" title="互联网广告发展史"></a>互联网广告发展史</h4><ol><li>启蒙时代：1993 - 1996年<br>直接将纸媒的广告模式迁移到线上，在页面固定位置放置广告位，广告的形式主要是 <code>Banner 广告位</code>，广告的类型主要是合约广告，广告的计费方式从一开始的按时间包断购买的<code>CPT</code> 逐渐发展出按流量购买的 <code>CPM</code>；</li></ol><ol start="2"><li>直销时代：1997 - 2002年<br>直销时代广告的售卖方式还是直接售卖广告位，计费模式还是CPT 或者CPM，广告的形式越来越丰富，出现了<code>弹窗广告</code>、<code>背投广告</code>等广告方式</li></ol><p><em><em>直销时代和启蒙时代有什么本质区别？？？</em></em></p><ol start="3"><li><p>网盟时代：2003 - 2011年<br>越来越多的媒体让广告主投入越来越多的人力去采买广告，<code>Ad Network(ADN)</code> 将多个媒体（或者其他ADN）打包，按照预定标签标识用户，按照用户标签去批量售卖流量；移动端的广告也在这个时期出现，开发者在网站源代码中添加JS 代码实现WAP 端的广告投放，APP 广告通过嵌入 SDK 代码到App 源代码中实现广告投放；</p></li><li><p>程序化广告</p></li></ol><p>市场发展过程中，产生了受众定向，推动展示广告的交易模式进化到按受众购买，受众定向的数据来源于<code>Date Manager Platform(DMP)</code>；广告的参与方此时分为 <code>Ad Exchange(ADX)</code> 和 <code>Damend Side Platform(DSP)</code>，  <code>ADX</code> 也对接其他 <code>ADN</code>； 此时广告的交易模式可以分为：<br>a. PDB(programm Direct Pay, 程序化直接购买)： 担保库存、固定价格、广告主私有<br>b. PD(Preferred Deal, 优先交易)：不保证库存，事先出价（固定价格）、广告主私有<br>c. PA(Private Auction, 私有竞价)：不保证库存，RTB竞价、少量广告主<br>d. OA(Open Auction， 公开竞价)：不保证库存，RTB竞价、公开面对所有广告主</p><h4 id="程序化广告"><a href="#程序化广告" class="headerlink" title="程序化广告"></a>程序化广告</h4><h5 id="程序化广告的定义"><a href="#程序化广告的定义" class="headerlink" title="程序化广告的定义"></a>程序化广告的定义</h5><p>程序化广告是指利用技术手段进行广告交易和管理的一种广告形态。<br>广告主程序化购买媒体资源、利用算法和技术自动实现精准的目标受众定向；<br>媒体程序化售卖跨媒体、跨终端的媒体资源，利用技术实现广告流量的分级</p><ol><li>以人为本的精准广告定向</li><li>媒体资源的自动化、数字化售卖和采购</li></ol><h5 id="程序化广告的价值"><a href="#程序化广告的价值" class="headerlink" title="程序化广告的价值"></a>程序化广告的价值</h5><p>传统广告的购买模式，广告主需要逐一和媒体方谈判购买流量；ADN 通过预定义人群标签，打包售卖媒体资源，提高了媒体购买效率。而程序化广告实现了预定义人群定向到自定义人群精准定向的跨越，还能对广告投放进行 <code>频次控制</code>，避免像同一个广告受众反复投放同一个或一组广告；程序化广告还能借助广告验证平台的投放验证，满足广告主对 <code>品牌安全</code>、<code>反作弊过滤</code>、<code>广告可见度分析</code>等方面的要求。</p><p>广告主角度</p><ol><li>效率提升：提高媒体采购效率；提高广告投放效率</li><li>效果提升：提高广告投放效率；缩短优化周期</li></ol><p>媒体角度</p><ol><li>效率提升：提高媒体资源售卖效率</li><li>效果提升：提高流量利用率和用户体验</li></ol><h5 id="中国程序化广告发展阶段分析"><a href="#中国程序化广告发展阶段分析" class="headerlink" title="中国程序化广告发展阶段分析"></a>中国程序化广告发展阶段分析</h5><ol><li>2010 - 2011年：萌芽期<br>阿里妈妈推出全网的广告交易平台 <code>Tanx</code></li><li>2012 - 2013年：探索期<br>DSP 市场起步阶段；ADX 如雨后春笋</li><li>2014 - 2016年：燥热期<br>DSP、ADX 大量出现; DMP 越来越智能；市场过度膨胀应发了程序化广告的泡沫，行业存在一系列<code>不规则</code>的玩法, 通过各种作弊造价的方式获取广告主预算</li></ol><p>具体作弊玩法介绍参见刘鹏老师讲解：<br><br><a href="https://zhuanlan.zhihu.com/p/24780235" target="_blank" rel="noopener">互联网广告作弊十八般武艺(上)</a><br><br><a href="https://zhuanlan.zhihu.com/p/24780235" target="_blank" rel="noopener">互联网广告作弊十八般武艺(下)</a></p><ol start="4"><li>2017 - 2018年：洗牌期<br>市场过度膨胀之后，行业逐渐回归有序。</li></ol><p>广告主的变化</p><ol><li>透明程序化的诉求：流量、数据环节透明化；财务和合同等流程的规范化、严谨化</li><li>盘活私有数据：广告主自建 DSP、DMP</li><li>更加合理的KPI衡量标准：严格把关广告的流量消耗，杜绝作弊</li></ol><p>媒体的变化</p><ol><li>掌握流量控制权：自建ADX/SSP</li><li>完善广告交易模式：升级PA、PD、PDB 交易模式的技术支持</li><li>广告形式更加丰富：媒体形式越来越多，原生广告、可玩广告、短视频广告等广告形式的出现</li></ol><p><em>可玩广告：游戏类APP短时间试玩游戏的广告形式</em></p><ol start="5"><li>2019 年之后：成熟期<br>市场规模到达瓶颈，程序化广告格局相对稳定。</li></ol><h4 id="广告参与者"><a href="#广告参与者" class="headerlink" title="广告参与者"></a>广告参与者</h4><p><img src="/assets/picture/ads-flow.png" alt="图片" title="程序化广告参与方交互关系"></p><h5 id="需求方"><a href="#需求方" class="headerlink" title="需求方"></a>需求方</h5><h6 id="广告主"><a href="#广告主" class="headerlink" title="广告主"></a>广告主</h6><p>我要投广告，推广我的产品</p><h6 id="广告代理商"><a href="#广告代理商" class="headerlink" title="广告代理商"></a>广告代理商</h6><p>为广告主服务，制作广告，制定并优化广告投放计划；4A广告代理商为大型广告主服务</p><h6 id="需求方平台-Demand-Side-Platform-DSP"><a href="#需求方平台-Demand-Side-Platform-DSP" class="headerlink" title="需求方平台(Demand Side Platform, DSP)"></a>需求方平台(Demand Side Platform, DSP)</h6><ol><li>管理广告及其投放计划</li><li>结合DMP用于用户画像并用来受众定向</li><li>优化投放效果</li><li>数据统计及数据报告</li><li>Cookie Mapping</li><li>参与RTB</li><li>广告审核</li></ol><h6 id="采购交易平台-Trading-Desk-TD"><a href="#采购交易平台-Trading-Desk-TD" class="headerlink" title="采购交易平台(Trading Desk, TD)"></a>采购交易平台(Trading Desk, TD)</h6><p>通过API对接多个DSP，分配投放预算，进行广告投放计划管理</p><h6 id="程序化创意平台-Programmatic-Creative-Platform-PCP-："><a href="#程序化创意平台-Programmatic-Creative-Platform-PCP-：" class="headerlink" title="程序化创意平台(Programmatic Creative Platform, PCP)："></a>程序化创意平台(Programmatic Creative Platform, PCP)：</h6><p>自动生成大量创意并且进行动态创意优化</p><h5 id="供给方"><a href="#供给方" class="headerlink" title="供给方"></a>供给方</h5><h6 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h6><p>包含移动端网站、PC端网站；网站也可以划分为门户网站、垂直网站、社交平台等</p><h6 id="APP"><a href="#APP" class="headerlink" title="APP"></a>APP</h6><p>你手机上的各种各样的APP</p><h6 id="广告网盟-Ad-Network，ADN"><a href="#广告网盟-Ad-Network，ADN" class="headerlink" title="广告网盟(Ad Network，ADN)"></a>广告网盟(Ad Network，ADN)</h6><p>收集用户数据，将多个媒体方（主要是中小媒体）的流量按照人群标签打包售卖</p><h6 id="供给方平台-Supply-Side-Platform-DSP"><a href="#供给方平台-Supply-Side-Platform-DSP" class="headerlink" title="供给方平台(Supply Side Platform, DSP)"></a>供给方平台(Supply Side Platform, DSP)</h6><ol><li>对接媒体，提供广告位管理</li><li>Cookie Mapping</li><li>发起RTB</li><li>广告审核</li></ol><h5 id="广告交易平台-Ad-Exchange-ADX"><a href="#广告交易平台-Ad-Exchange-ADX" class="headerlink" title="广告交易平台(Ad Exchange, ADX)"></a>广告交易平台(Ad Exchange, ADX)</h5><p>对接需求方平台和供应方平台，主导RTB，完成广告交易</p><h5 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h5><h6 id="广告验证平台-Ad-Verification-Platform-AVP-："><a href="#广告验证平台-Ad-Verification-Platform-AVP-：" class="headerlink" title="广告验证平台(Ad Verification Platform, AVP)："></a>广告验证平台(Ad Verification Platform, AVP)：</h6><p>提供品牌安全、反作弊、可视度验证、无效流量验证等功能</p><h6 id="数据管理平台-Data-Management-Platform-DMP"><a href="#数据管理平台-Data-Management-Platform-DMP" class="headerlink" title="数据管理平台(Data Management Platform, DMP)"></a>数据管理平台(Data Management Platform, DMP)</h6><p>收集用户行为数据，建立用户画像，进行人群标签管理再投放</p><h6 id="监测分析平台-Measurement-amp-Analytics-Platform"><a href="#监测分析平台-Measurement-amp-Analytics-Platform" class="headerlink" title="监测分析平台(Measurement &amp; Analytics Platform)"></a>监测分析平台(Measurement &amp; Analytics Platform)</h6><p>收集广告展现、点击、转化数据，同步监控，评估广告投放平台数据的真实性</p><style>th:nth-child(1){     width:13%;}th:nth-child(2){     width:37%;}th:nth-child(3){     width:10%;}th:nth-child(4){     width:10%;}th:nth-child(5){     width:10%;}th:nth-child(6){     width:10%;}th:nth-child(7){     width:10%;}</style><h4 id="广告交易模式"><a href="#广告交易模式" class="headerlink" title="广告交易模式"></a>广告交易模式</h4><table><thead><tr><th>交易模式</th><th>简单说明</th><th>价格</th><th>流量</th><th>工作流程</th><th>订单交易</th><th>主要计费方式</th></tr></thead><tbody><tr><td>Header Bidding<br>(头部竞价)</td><td>通过在媒体页面插入 JS SDK 代码在加载页面的时候，直接对接需求方，针对优质流量直接对Bidder进行竞价请求</td><td>竞价</td><td>不担保</td><td>自动</td><td>否</td><td>CPM</td></tr><tr><td>Programmatic Guaranteed(程序化保量交易)</td><td>HB 之后的流量，双方在合同中约定价格，按照约定的流量 100% 或按照预定的返量比例进行采购；合同涉及的流量、交易价格等需要线下谈判，所以是半自动</td><td>固定价格</td><td>担保</td><td>半自动</td><td>是</td><td>CPM<br>CPC<br>CPT</td></tr><tr><td>Perferred Deals<br>(首选交易)</td><td>双方在合同中按照固定单价不保量优先购买 PDB 之后的流量，但是如果 RTB 价格减去PDB 价格大于一个溢价，RTB 优先</td><td>固定单价</td><td>不担保</td><td>半自动</td><td>是</td><td>CPM,CPC</td></tr><tr><td>Private Auction<br>(私有交易)</td><td>供应方挑选一部分优质需求方，签订合同之后按照 RTB 方式交易PD 之后的流量</td><td>RTB</td><td>不担保</td><td>自动</td><td>是</td><td>CPM</td></tr><tr><td>Open RTB<br>（公开交易）</td><td>供应方在公开交易市场进行实时竞价交易剩余流量</td><td>RTB</td><td>不担保</td><td>自动</td><td>否</td><td>CPM</td></tr></tbody></table><p><img src="/assets/picture/bidding.type.flow.png" alt="图片" title="交易模式及顺序"></p>]]></content>
      
      <categories>
          
          <category> 计算广告 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序化广告 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo-next-github-page</title>
      <link href="/2018/07/29/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/2018-07-29-hexo-next-github-page/"/>
      <url>/2018/07/29/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/2018-07-29-hexo-next-github-page/</url>
      <content type="html"><![CDATA[<h1 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 <code>Hexo</code></h1><p><em>安装 <code>Hexo</code> 的前提你已经安装以下安装程序</em></p><pre><code>1. Node.js2. Git</code></pre><h2 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 <code>Node.js</code></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure><p>或者从 <a href="https://nodejs.org/en/ 官网" target="_blank" rel="noopener">官网</a> 下载安装包，傻瓜式安装</p><h2 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 <code>Git</code></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install git</span><br></pre></td></tr></table></figure><p>或者从 <a href="https://git-scm.com/downloads 官网" target="_blank" rel="noopener">官网</a> 下载安装包，傻瓜式安装</p><h2 id="安装-Hexo-1"><a href="#安装-Hexo-1" class="headerlink" title="安装 Hexo"></a>安装 <code>Hexo</code></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>查看安装版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ hexo -v</span><br><span class="line">hexo-cli: 1.1.0</span><br><span class="line">os: Darwin 16.3.0 darwin x64</span><br><span class="line">http_parser: 2.8.0</span><br><span class="line">node: 10.7.0</span><br><span class="line">v8: 6.7.288.49-node.15</span><br><span class="line">uv: 1.22.0</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">ares: 1.14.0</span><br><span class="line">modules: 64</span><br><span class="line">nghttp2: 1.32.0</span><br><span class="line">napi: 3</span><br><span class="line">openssl: 1.1.0h</span><br><span class="line">icu: 62.1</span><br><span class="line">unicode: 11.0</span><br><span class="line">cldr: 33.1</span><br><span class="line">tz: 2018e</span><br></pre></td></tr></table></figure><h1 id="Hexo-使用简介"><a href="#Hexo-使用简介" class="headerlink" title="Hexo 使用简介"></a><code>Hexo</code> 使用简介</h1><h2 id="初始化-Hexo-文件夹"><a href="#初始化-Hexo-文件夹" class="headerlink" title="初始化 Hexo 文件夹"></a>初始化 <code>Hexo</code> 文件夹</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /path/to/my/blog/source/code  ## 传建一个保存博客源代码的目录</span><br><span class="line">hexo init                           ## 初始化一个 Hexo 文件夹</span><br></pre></td></tr></table></figure><p>然后我们来看看初始化后的 hexo 文件夹</p><pre><code>.├── _config.yml                ## 配置文件├── node_modules               ## npm 依赖文件夹            ├── package-lock.json          ## 根据 package.json 文件生成的版本依赖锁定文件，指定了依赖的确定版本├── package.json               ## 声明 hexo 的所有依赖机器版本，详见 https://docs.npmjs.com/getting-started/using-a-package.json├── scaffolds                  ## 存放模板的文件夹，hexo new &apos;file&apos; 指令创建新文档的时候会使用 scaffolds 中的模板├── source                     ## hexo 源文件└── themes                     ## hexo 使用的主题文件夹存放位置</code></pre><h2 id="创建一个新文档"><a href="#创建一个新文档" class="headerlink" title="创建一个新文档"></a>创建一个新文档</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new 'newfile'</span><br></pre></td></tr></table></figure><pre><code>➜ ... hexo new &apos;new file&apos;INFO  Created: ~/.../source/_posts/new-file.md</code></pre><p>我们可以看到在 source 文件夹下面新建了一个新的 <code>markdown</code> 文件</p><h2 id="生成-Hexo-静态文件"><a href="#生成-Hexo-静态文件" class="headerlink" title="生成 Hexo 静态文件"></a>生成 <code>Hexo</code> 静态文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate ## 可以使用简写指令 [hexo g]</span><br></pre></td></tr></table></figure><p>下面我们可以看到 <code>Hexo</code> 文件夹下多了一个 <code>public</code> 文件夹</p><pre><code>.├── _config.yml├── db.json├── node_modules├── package-lock.json├── package.json├── public                ## 存放生成的静态文件，包含 js、css、html、图片├── scaffolds├── source└── themes</code></pre><h2 id="启动-Hexo-服务"><a href="#启动-Hexo-服务" class="headerlink" title="启动 Hexo 服务"></a>启动 <code>Hexo</code> 服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server    <span class="comment">## 简写指令 hexo s</span></span><br></pre></td></tr></table></figure><p>现在我们可以通过 <code>http://localhost:4000/</code> 来访问我们搭建的网站</p><h2 id="一键部署到-GitHub"><a href="#一键部署到-GitHub" class="headerlink" title="一键部署到 GitHub"></a>一键部署到 GitHub</h2><h3 id="修改-config-yml-文件"><a href="#修改-config-yml-文件" class="headerlink" title="修改 _config.yml 文件"></a>修改 <code>_config.yml</code> 文件</h3><pre><code>deploy:  type: git  repo: &lt;repository url&gt;  branch: [branch]  message: [message]</code></pre><h3 id="安装-hexo-deployer-git"><a href="#安装-hexo-deployer-git" class="headerlink" title="安装 hexo-deployer-git"></a>安装 <code>hexo-deployer-git</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h4 id="安装-hexo-deployer-git-遇到的问题"><a href="#安装-hexo-deployer-git-遇到的问题" class="headerlink" title="安装 hexo-deployer-git 遇到的问题"></a>安装 <code>hexo-deployer-git</code> 遇到的问题</h4><pre><code>&gt; npm install hexo-deployer-git --savenpm WARN deprecated swig@1.4.2: This package is no longer maintained+ hexo-deployer-git@0.3.1added 31 packages from 36 contributors and audited 2296 packages in 10.148sfound 1 low severity vulnerability  run `npm audit fix` to fix them, or `npm audit` for details</code></pre><p>让我们执行 <code>npm audit</code> 指令来查看具体问题</p><p>➜  hexo.test.blog npm audit</p><pre><code>                       === npm audit security report ===┌──────────────────────────────────────────────────────────────────────────────┐│                                Manual Review                                 ││            Some vulnerabilities require your attention to resolve            ││                                                                              ││         Visit https://go.npm.me/audit-guide for additional guidance          │└──────────────────────────────────────────────────────────────────────────────┘┌───────────────┬──────────────────────────────────────────────────────────────┐│ Low           │ Regular Expression Denial of Service                         │├───────────────┼──────────────────────────────────────────────────────────────┤│ Package       │ uglify-js                                                    │├───────────────┼──────────────────────────────────────────────────────────────┤│ Patched in    │ &gt;=2.6.0                                                      │├───────────────┼──────────────────────────────────────────────────────────────┤│ Dependency of │ hexo-deployer-git                                            │├───────────────┼──────────────────────────────────────────────────────────────┤│ Path          │ hexo-deployer-git &gt; swig &gt; uglify-js                         │├───────────────┼──────────────────────────────────────────────────────────────┤│ More info     │ https://nodesecurity.io/advisories/48                        │└───────────────┴──────────────────────────────────────────────────────────────┘found 1 low severity vulnerability in 2296 scanned packages  1 vulnerability requires manual review. See the full report for details.</code></pre><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p>添加淘宝 npm 镜像源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>然后我们可以继续安装 <code>hexo-deployer-git</code> 了</p><h3 id="部署网站"><a href="#部署网站" class="headerlink" title="部署网站"></a>部署网站</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy    ## 简写指令 hexo d</span><br></pre></td></tr></table></figure><p>部署指令将生成 <code>.deploy_git</code> 文件加，我们需要在 <code>.deploy_git</code> 文件中指定远程 git 链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin giturl</span><br></pre></td></tr></table></figure><h2 id="清除缓存和已创建的静态文件"><a href="#清除缓存和已创建的静态文件" class="headerlink" title="清除缓存和已创建的静态文件"></a>清除缓存和已创建的静态文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><h2 id="生成并部署-Hexo-网站"><a href="#生成并部署-Hexo-网站" class="headerlink" title="生成并部署 Hexo 网站"></a>生成并部署 <code>Hexo</code> 网站</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><p>这两个指令是等价的，都是先构建本地静态文件，再部署网站</p><h1 id="使用-NexT-主题"><a href="#使用-NexT-主题" class="headerlink" title="使用 NexT 主题"></a>使用 <code>NexT</code> 主题</h1><h2 id="下载-NexT-主题"><a href="#下载-NexT-主题" class="headerlink" title="下载 NexT 主题"></a>下载 <code>NexT</code> 主题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd your-hexo-site</span><br><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><h2 id="修改站点配置文件"><a href="#修改站点配置文件" class="headerlink" title="修改站点配置文件"></a>修改站点配置文件</h2><p>修改 <code>_config.yml</code> 文件中的 <code>theme</code> 配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span>  <span class="comment"># next 是 themes 文件下主题文件夹的名称，冒号后面必须有空格，这是 yaml 语法</span></span><br></pre></td></tr></table></figure><p>现在你可以执行以下指令去构建静态文件并且部署网站了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>然后你可以访问 <code>http://localhost:4000/</code> 去访问你的博客了</p><p><img src="/assets/picture/next-demo.png" alt="" title="NexT 主题 Demo 图片"></p><h2 id="配置-NexT-主题"><a href="#配置-NexT-主题" class="headerlink" title="配置 NexT 主题"></a>配置 <code>NexT</code> 主题</h2><h3 id="修改菜单栏"><a href="#修改菜单栏" class="headerlink" title="修改菜单栏"></a>修改菜单栏</h3><p>修改</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span>                                                          <span class="string">|  menu:                                                      </span></span><br><span class="line"><span class="string"></span><span class="attr">  home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span>                                              <span class="string">|    home: / || home                        # 主页，默认配置打开</span></span><br><span class="line"><span class="string">  #about: /about/ || user                                      |    #about: /about/ || user                # 关于自己，可以配置</span></span><br><span class="line"><span class="string">  #tags: /tags/ || tags                                        |    tags: /tags/ || tags                   # 标签页，默认配置关闭，需要你打开注释</span></span><br><span class="line"><span class="string">  #categories: /categories/ || th                              |    categories: /categories/ || th         # 分类页，默认配置关闭，需要你打开注释</span></span><br><span class="line"><span class="string"></span><span class="attr">  archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span>                              <span class="string">|    archives: /archives/ || archive        # 归档页，默认配置打开</span></span><br><span class="line"><span class="string">  #schedule: /schedule/ || calendar                            |    #schedule: /schedule/ || calendar</span></span><br><span class="line"><span class="string">  #sitemap: /sitemap.xml || sitemap                            |    #sitemap: /sitemap.xml || sitemap</span></span><br><span class="line"><span class="string">  #commonweal: /404/ || heartbeat                                                                          # 公益404页，默认配置关闭，需要你打开注释</span></span><br></pre></td></tr></table></figure><h4 id="配置标签页"><a href="#配置标签页" class="headerlink" title="配置标签页"></a>配置标签页</h4><ol><li>创建标签页</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">"tags"</span></span><br></pre></td></tr></table></figure><ol start="2"><li><p>修改 themes/next/_config.yml 文件<br>去除 <code>menu.tags</code> 前的 <code>#</code></p></li><li><p>修改标签页标题<br>修改 source/tags/index.md 文件中的 title，写一个你喜欢的标题</p></li></ol><h4 id="配置分类页"><a href="#配置分类页" class="headerlink" title="配置分类页"></a>配置分类页</h4><ol><li>创建标签页</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">"categories"</span></span><br></pre></td></tr></table></figure><ol start="2"><li><p>修改 themes/next/_config.yml 文件<br>去除 <code>menu.categories</code> 前的 <code>#</code></p></li><li><p>修改标签页标题<br>修改 source/categories/index.md 文件中的 title，写一个你喜欢的标题</p></li></ol><h3 id="选择-scheme"><a href="#选择-scheme" class="headerlink" title="选择 scheme"></a>选择 <code>scheme</code></h3><p><code>themes/next/_config.yml</code> 文件中默认主题是 <code>Muse</code>，我选择  <code>Mist</code></p><pre><code># Schemesscheme: Muse          # 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白#scheme: Mist         # Muse 的紧凑版本，整洁有序的单栏外观#scheme: Pisces       # 双栏 Scheme，小家碧玉似的清新#scheme: Gemini</code></pre><h3 id="自定义样式"><a href="#自定义样式" class="headerlink" title="自定义样式"></a>自定义样式</h3><h4 id="修改页面宽度"><a href="#修改页面宽度" class="headerlink" title="修改页面宽度"></a>修改页面宽度</h4><p>编辑主题的 source/css/_variables/custom.styl 文件，新增变量：</p><pre><code>// 当屏幕宽度 &lt; 1600px, 修改成你期望的宽度$content-desktop = 900px// 当视窗超过 1600px 后的宽度$content-desktop-large = 1300px</code></pre><h4 id="生成文章摘要"><a href="#生成文章摘要" class="headerlink" title="生成文章摘要"></a>生成文章摘要</h4><ol><li>在文章中使用 <code>&lt;!-- more --&gt;</code> 手动进行截断，在 <code>&lt;!-- more --&gt;</code> 上方撰写摘要，Hexo 提供的方式 <em>【推荐】</em></li><li>在文章的 <code>front-matter</code> 中添加 <code>description</code>，并提供文章摘录，我选择这种</li></ol><h4 id="修改作者名称、描述、语言、时区"><a href="#修改作者名称、描述、语言、时区" class="headerlink" title="修改作者名称、描述、语言、时区"></a>修改作者名称、描述、语言、时区</h4><p>修改 <code>_config.yml</code> 文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site                                                         |  # Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Ice</span> <span class="string">summer</span> <span class="string">bug's</span> <span class="string">notes</span>                                  <span class="string">|  title: Hexo</span></span><br><span class="line"><span class="string"></span><span class="attr">subtitle:</span>                                                      <span class="string">|  subtitle:</span></span><br><span class="line"><span class="string"></span><span class="attr">description:</span> <span class="string">About</span> <span class="string">technology</span> <span class="string">and</span> <span class="string">about</span> <span class="string">life.</span>                  <span class="string">|  description:</span></span><br><span class="line"><span class="string"></span><span class="attr">keywords:</span>                                                      <span class="string">|  keywords:</span></span><br><span class="line"><span class="string"></span><span class="attr">author:</span> <span class="string">Liam</span> <span class="string">Chen</span>                                              <span class="string">|  author: John Doe</span></span><br><span class="line"><span class="string"></span><span class="attr">language:</span> <span class="string">zh-Hans</span>                                              <span class="string">|  language:</span></span><br><span class="line"><span class="string"></span><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br></pre></td></tr></table></figure><h4 id="修改作者头像"><a href="#修改作者头像" class="headerlink" title="修改作者头像"></a>修改作者头像</h4><p>修改 <code>themes/next/_config.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">avatar:</span> <span class="string">/images/headPicture.png</span></span><br></pre></td></tr></table></figure><h1 id="使用-GitHub-Pages"><a href="#使用-GitHub-Pages" class="headerlink" title="使用 GitHub Pages"></a>使用 <code>GitHub Pages</code></h1><p><code>GitHub Pages</code> 使用教程有很多，这里不做赘述，主要是将 <code>.deploy_git</code> 文件夹托管到 <code>GitHub</code> 上，并设置成 <code>GitHub Pages</code></p><p><code>_config.yml</code> 文件中的 <code>deploy.repo</code> 设置成 github url</p><p>我们还可以再建一个 github repository 来管理 Hexo 文件夹</p>]]></content>
      
      <categories>
          
          <category> GitHub Pages </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> NexT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>etcd 使用入门</title>
      <link href="/2018/05/21/%E6%8A%80%E6%9C%AF/etcd/2018-05-21-etcd%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/"/>
      <url>/2018/05/21/%E6%8A%80%E6%9C%AF/etcd/2018-05-21-etcd%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<h2 id="etcd-使用入门"><a href="#etcd-使用入门" class="headerlink" title="etcd 使用入门"></a>etcd 使用入门</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>介绍 etcd 和 raft协议</p><h3 id="etcd-安装"><a href="#etcd-安装" class="headerlink" title="etcd 安装"></a>etcd 安装</h3><p>etcd 的安装有两种方式</p><ol><li>直接从<a href="&quot;https://github.com/coreos/etcd/releases/&quot;" title="release binary page">官网</a>下载 release 版本的二进制文件</li><li>下载源码手动编译安装</li></ol><p>个人倾向于使用 release 版本安装，下面开始下载安装</p><ol><li><p>找到下载的压缩包，解压</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip etcd-v3.3.8-darwin-amd64.zip</span><br></pre></td></tr></table></figure></li><li><p>将解压的文件夹的移动到安装目录中</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mv /path/to/etcd /usr/<span class="built_in">local</span>/etcd</span><br></pre></td></tr></table></figure></li></ol><p>此时我们可以先看看解压后有什么？</p><pre><code>➜  etcd-v3.3.8-darwin-amd64 lltotal 113064drwxr-xr-x  22 ?  staff   748B  6 16 00:55 Documentation-rw-r--r--   1 ?  staff    38K  6 16 00:55 README-etcdctl.md-rw-r--r--   1 ?  staff   7.1K  6 16 00:55 README.md-rw-r--r--   1 ?  staff   7.7K  6 16 00:55 READMEv2-etcdctl.mddrwx------   3 ?  staff   102B  7 16 23:45 default.etcd-rwxr-xr-x   1 ?  staff    30M  6 16 00:55 etcd-rwxr-xr-x   1 ?  staff    25M  6 16 00:55 etcdctl</code></pre><p>可以看到这里有两个可执行程序: <code>etcd</code> 和 <code>etcdctl</code></p><p><code>etcd</code>: etcd 服务端程序<br><code>etcdctl</code>: etcd 客户端程序</p><ol start="3"><li>启动程序</li></ol><p>3.1 使用默认配置启动程序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./etcd</span><br></pre></td></tr></table></figure><p>3.2 来一个配置文件</p><p><em><em>待补充</em></em></p>]]></content>
      
      <categories>
          
          <category> etcd </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
            <tag> etcd </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>golang GC</title>
      <link href="/2018/05/16/%E6%8A%80%E6%9C%AF/golang/2018-05-16-golang-GC/"/>
      <url>/2018/05/16/%E6%8A%80%E6%9C%AF/golang/2018-05-16-golang-GC/</url>
      <content type="html"><![CDATA[<h3 id="golang-GC-浅谈"><a href="#golang-GC-浅谈" class="headerlink" title="golang GC 浅谈"></a>golang GC 浅谈</h3><p>Garbage collector (GC).</p><pre><code>The GC runs concurrently with mutator threads, is type accurate (aka precise), allows multiple GC thread to run in parallel. It is a concurrent mark and sweep that uses a write barrier.</code></pre><p>golang 的 GC 和工作线程并行运行，<em>?类型准确？</em>，允许多个GC 线程并发运行, 通过 <code>write barrier</code> 实现并发的标记清除。</p><pre><code>It is non-generational and non-compacting. Allocation is done using size segregated per P allocation areas to minimize fragmentation while eliminating locks in the common case.</code></pre><p>golang GC 不分代，不压缩。 golang 在分配内存的时候是预先将内存划分为固定大小的内存块，以尽量减少碎片，同时消除常见情况下的锁定。</p><pre><code>The algorithm decomposes into several steps.This is a high level description of the algorithm being used. For an overview of GC a good place to start is Richard Jones&apos; gchandbook.org.</code></pre><p>gc 算法被分解成多个步骤<br>这里是对 <code>垃圾回收</code> 算法的高度概括，对于 <code>垃圾回收</code> 算法的综述和入门学习的资料是 <code>Richard Jones</code> 的 <a href="http://gchandbook.org" title="gchandbook.org" target="_blank" rel="noopener">gchandbook.org</a></p><pre><code>The algorithm&apos;s intellectual heritage includes Dijkstra&apos;s on-the-fly algorithm, seeEdsger W. Dijkstra, Leslie Lamport, A. J. Martin, C. S. Scholten, and E. F. M. Steffens. 1978.On-the-fly garbage collection: an exercise in cooperation. Commun. ACM 21, 11 (November 1978),966-975.For journal quality proofs that these steps are complete, correct, and terminate seeHudson, R., and Moss, J.E.B. Copying Garbage Collection without stopping the world.Concurrency and Computation: Practice and Experience 15(3-5), 2003.1. GC performs sweep termination.</code></pre><p>gc 执行清除</p><pre><code>a. Stop the world. This causes all Ps to reach a GC safe-point.</code></pre><p><code>SWT</code>(Stop the word)：使所有用户线程到达一个 <code>GC</code> 安全点</p><pre><code>b. Sweep any unswept spans. There will only be unswept spans if this GC cycle was forced before the expected time.2. GC performs the &quot;mark 1&quot; sub-phase. In this sub-phase, Ps areallowed to locally cache parts of the work queue.     a. Prepare for the mark phase by setting gcphase to \_GCmark     (from \_GCoff), enabling the write barrier, enabling mutator     assists, and enqueueing root mark jobs. No objects may be     scanned until all Ps have enabled the write barrier, which is     accomplished using STW.     b. Start the world. From this point, GC work is done by mark     workers started by the scheduler and by assists performed as     part of allocation. The write barrier shades both the     overwritten pointer and the new pointer value for any pointer     writes (see mbarrier.go for details). Newly allocated objects     are immediately marked black.     c. GC performs root marking jobs. This includes scanning all     stacks, shading all globals, and shading any heap pointers in     off-heap runtime data structures. Scanning a stack stops a     goroutine, shades any pointers found on its stack, and then     resumes the goroutine.     d. GC drains the work queue of grey objects, scanning each grey     object to black and shading all pointers found in the object     (which in turn may add those pointers to the work queue).</code></pre><p><code>write barrier</code>: 写屏障</p>]]></content>
      
      <categories>
          
          <category> golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> golang </tag>
            
            <tag> gc </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>重读计算广告</title>
      <link href="/2018/05/14/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/2018-05-14-%E9%87%8D%E8%AF%BB%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/"/>
      <url>/2018/05/14/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/2018-05-14-%E9%87%8D%E8%AF%BB%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/</url>
      <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>看了一遍刘鹏老师的《计算广告》，获益匪浅，但是部分地方还是不够明确，决定重读一番，学习笔记记录如下，如有错漏敬请斧正。</p><h3 id="在线广告"><a href="#在线广告" class="headerlink" title="在线广告"></a>在线广告</h3><p>在线广告开创了以人群为投放目标，以产品为导向的技术型投放模式，得到了广告主的青睐。在线广告开启了大规模自动化的利用数据改善产品和提高收入的先河，提供了一种盈利模式。</p><h4 id="什么是大数据"><a href="#什么是大数据" class="headerlink" title="什么是大数据"></a>什么是大数据</h4><p>如果有的数据处理问题无法通过数据采样的方法来降低温处理的复杂程度，就必须利用一些专门为海量数据处理而设计的计算和存储技术来实现。</p><p>大数据问题的 <code>4V特征</code></p><ol><li>Volume (规模)</li><li>Variety (多样性)</li><li>Velocity (高速)</li><li>Value (价值)</li></ol><p>大数据问题的特征：当数据的采用率的递增叫显著提升解决问题的效果，而且两者基本成正比，这就是典型的大数据问题。</p><h4 id="为什么要学习计算广告"><a href="#为什么要学习计算广告" class="headerlink" title="为什么要学习计算广告"></a>为什么要学习计算广告</h4><p>计算广告作为目前最成熟的得到充分商业化和规模化的大数据应用<br>1） 提供了规模化的将用户行为数据转为可衡量的商业价值的完整产品线和解决方案；<br>2） 孕育和孵化了较为成熟的数据加工和交易产业链，并对其中的<code>用户隐私</code>边界有深入的探讨；<br>3） 由于商业上的限制条件，计算广告的技术和产品逻辑比个性推荐更加复杂周密；</p><h4 id="什么是广告"><a href="#什么是广告" class="headerlink" title="什么是广告"></a>什么是广告</h4><pre><code>广告是由已经确定的`出资人`通过各种`媒介`进行的有关产品（商品、服务和观点）的，通常是有偿的、有组织的、综合的、劝服性的非人员的信息传播活动。                                                                                                    ————《当代广告学》</code></pre><p>这个定义中有两个主动参与方 ———— <code>出资人</code> 和 <code>媒介</code>, 还有一个被动的参与方, 被劝服的广告的观看者。在计算广告中术语分别是：<code>需求方(Demand)</code>(广告主、广告主代理商、其他形式的采买方)、<code>供给方(Supply)</code>(媒体、其他形式的变现平台)、 <code>广告受众(Adversiter)</code></p><p>传统广告主要是电视、报纸广告，在大量投放和优化效果广告的能力显然是缺乏的，只能是宣传品牌形象、提升中长期购买率和利润空间；而在线广告可以实现低成本的投放个性化广告，而且部分数字数字（如搜索、电子商务）可以明确的知道用户的意图，能够很好的优化广告效果。</p><p><em><em>广告的根本目的是<code>广告主</code>通过<code>媒体</code>达到<code>低成本</code>的<code>用户</code>接触</em></em></p><p>这个定义中的 <code>底成本</code> 需要一个评价指标，这就是 ———— <code>投入产出比（Return On Investment, ROI）</code>，即某次广告活动的总产出与总投入的比例。总投入很容易确定，但是总产出无法确定，但是我们我们也可以通过对各个广告渠道的对比，评估广告成本是否令人满意。</p><pre><code>一切付费的信息、产品或服务的传播渠道，都是广告。</code></pre><h4 id="在线广告创意类型"><a href="#在线广告创意类型" class="headerlink" title="在线广告创意类型"></a>在线广告创意类型</h4><blockquote><p>横幅广告</p><p>文字链接广告</p><p>富媒体广告</p><p>视频广告</p><blockquote><p>前插片广告： 视频播放前的</p><p>暂停广告：视频播放中，暂停时播放的广告</p></blockquote><p>社交广告：社交产品中的原生广告</p><p>移动广告</p><p>邮件定向营销广告</p></blockquote><h4 id="在线广告简史"><a href="#在线广告简史" class="headerlink" title="在线广告简史"></a>在线广告简史</h4><p>在线媒体出现并发展到一定的流量规模之后，就在页面上直接插入广告位，这种照搬报纸广告在互联网上展示广告的产品形式称为 <code>展示广告(display advertising)</code> , 而售卖广告的模式是采用合同的方式确定某一广告位在某一时间段为某特定广告主所独占，并且根据双方的要求，确定广告创意和投放策略，称为 <code>合约广告</code>。</p><p>随着在线媒体的流量快速增长以及在线广告逐渐被广告主了解接受，在线媒体提价的行为被接受，但是媒体流量和品牌认知度都相对稳定之后，提价就不再是提高收入的合适方案了。<br>但是很快在线广告不同于传统媒体广告的本质特点就被发现了：<br><em><em>在线广告可以对不同的广告受众展示不同的广告创意</em></em></p><p>这种广告投放的方式就是 <code>定向广告(trageted advertising)</code>。 而要做到这一点，首先要从技术上获取用户的属性标签，例如用户的性别、年龄等标签，这就是<code>受众定向</code>；而且这时候的广告不能再是静态的嵌入到网页中，而是响应前端的实时请求，根据用户标签自动选择并返回合适的广告， 这就是 <code>广告投放(ad serving)</code>。<br>此时广告的售卖方式还是以合同的形式进行，并且在合同中注明媒体需要保证广告的投放量以及投放量未完成时赔偿方案。这种<code>合约广告</code>的交易方式被称为<code>担保式投放（Guaranteed Delivery）</code>, 这种合约还是主要面对品牌广告主，计费方式是<code>按千次展示收费(Cost per Mille, CPM)</code>。</p><p>合约广告有两个技术难点：</p><ol><li>各个合约的目标受众会有交叉覆盖，如何有效的将流量分配到交叉覆盖上；</li><li>在在线环境下实时的完成每一次展示决策；<br>这两个难点的问题称为 <code>在线分配</code>， 可以使用 <code>带约束优化</code> 的数学框架来探索这个问题。</li></ol><p><code>定向投放</code>的目的是供给方为了<code>拆分流量</code>提高营收，但是<em>如果一开始就提供非常精细的定向，反而会造成售卖率下降</em>，品牌广告主都喜欢优质的流量，如果定向十分精确了略差的流量就卖不出去了。</p><p><code>受众定向</code>的产生使得市场发展呈现两个趋势</p><ol><li>定向标签越来越精准；</li><li>广告主的数量不断膨胀；</li></ol><p>上述两个趋势增加了 <code>在线分配</code> 问题的处理难度，降低了流量的变现能力。从业者开始考虑放弃量的保证，供给方只向广告主保证单位流量的成本，对每次展现都基本按照收益最高的原则来决策，这就是 <code>竞价广告</code>。</p><p><code>竞价广告</code> 的产生原因如上，然而现实中它的出现来自于 <code>搜索广告</code>，<code>搜索引擎</code>的关键词就是一个精准的定向，很自然的就采用的竞价的售卖方式<br>将搜索关键词换成浏览页面中的关键词就成了 <code>上下文广告</code>（信息流广告的鼻祖）</p><p>从宏观市场上看 <code>竞价广告</code> 摆脱了 <code>合约广告</code> 中合约的约束，让广告主能够充分竞争；但是微观上的最优方案并不是整个市场的最大收益。竞价机制的发展，诞生了 <code>广义第二高价 (Generalized Second Price, GSP)</code> 竞价理论。</p><p>有了竞价机制和受众定向，不被品牌广告主看好的中小互联网媒体将流量打包给一个组织，组织将媒体资源按照人群或者上下文标签打包售卖，用竞价的方式决定流量分配。这个组织就是 ———— <code>广告网络(ad Network, ADN)</code>。 <code>ADN</code> 采用的计费方式一般是 <code>按点击收费(Cost Per Click, CPC)</code>。最重要的是，ADN 的出现使得不受品牌广告主青睐的比较差流量有了变现的途径。</p><p>ADN 只通过出价接口提供价格约定，那么由谁来保证量呢？这就催生了一种需求方产品；此时流量采买发生了几点变化：</p><ol><li>流量采买更多的面向受众而非媒体或广告位进行采买；</li><li>需求方产品需要通过技术手段保证广告主量的要去，并在此基础上帮助广告主优化效果。</li></ol><p><em>问题：ADN 的竞价流程是什么样的？</em></p><p>AND 定义好定向标签，将流量分类打包出售，而不会去控制每次展示的出价；需求方选择了合适的标签组合并阶段性的调整出价来间接控制效果。而需求方产品对接多个 ADN 或媒体按人群一站式采买广告并优化投入产出比，这就是 <code>交易终端(Trading Desk, TD)</code>。</p><p>ADN 将媒体的广告受众打上了用户标签，然后批量售卖，但这不能满足需求方越来越明确的利益要求。例如：某电商需要通过给它的忠实用户投放广告来推广某产品，此时需求方需要按照自己的人群定义来挑选流量；流量拍卖的过程从广告主预先出价批量购买，变成了每次展示时实时出价，媒体方提供广告展示的页面的上下文页面URL和用户标识等信息给需求方，需求方就可以完成定制化的人群选择和出价，这就是 <code>实时竞价(Real Time Bidding, RTB)</code>。市场诞生了一个聚合大量媒体的剩余流量并且采用实时竞价方式为他们变现的产品形态 ———— <code>广告交易平台（ad Exchange, ADX）</code>。</p><p>通过实时竞价的方式，按照定制化的人群标签购买广告，这样的产品就是<code>需求方平台(Demand Side Platform, DSP)</code>。<code>DSP</code> 需要尽可能准确地估计每次展示带来的期望价值，而因为充分的环境信息使得深入计算和估计成为可能。基于 <code>DSP</code> 的广告采买方式叫作 <code>程序化交易(programmatic trade)</code>, 除了 <code>RTB</code> 外还有 <code>优选(perfered deals)</code> 以及 <code>私有交易市场(Private Market Place, PMP)</code>。</p><p>在在线广告的发展历史上，定向技术和交易形式的进化是一条主线。从固定位置合约交易到受众定向、担保投放，再到竞价交易方式，最后发展成开放的实时竞价交易市场。这一主线的核心驱动力是越来越多的数据源为广告决策提供支持，从而提升广告的效果。广告发展的另外一条主线是产品展现逻辑上的发展：从广告位和内容相对独立，到通过搜索广告认识到内容和广告对立起来未必是好的选择，搜索广告和信息流广告突出的效果就是因为内容的展现和触发逻辑高度一致，因此产生了将内容和广告以某种方式统一决策或排序的广告产品 ———— <code>原生广告</code>。<code>原生广告</code> 的思路在移动设备上很有前景。</p><h4 id="泛广告商业产品"><a href="#泛广告商业产品" class="headerlink" title="泛广告商业产品"></a>泛广告商业产品</h4><p><code>泛广告商业产品</code> 的本质都是 <code>付费推广</code>，这些付费推广模式的表现方式更加多样化，用户的感知程度和参与程度也大不相同，但是产品的销售模式却与狭义的广告基本相同，但这些商业产品本质上也是在线广告。</p><ol><li>团购</li><li>游戏联运</li><li>固定位导航</li><li>返利购买</li></ol><h3 id="计算广告基础"><a href="#计算广告基础" class="headerlink" title="计算广告基础"></a>计算广告基础</h3><p>计算广告的主要特点有 <code>可衡量的效果</code>以及相应的<code>计算优化</code>。</p><p>利润优化问题的概念框架</p><p>广告产品的收入衡量指标,也是计算广告中最核心的可衡量指标 ———— <code>千次展现期望收入(eCPM, excepted Cost Per Mille)</code>。<br><code>eCPM</code> 可分解为 <code>点击率(Click Through Rate, CTR)</code> 和 <code>点击价值</code></p><p>在线广告产品有很多种计费方式，不同的计费方式反映了不同的市场分工; 也就是说供给方和需求方如何分工估计点击率和点击价值，与整个市场的资源优化配置有关。</p><h4 id="广告信息接收过程"><a href="#广告信息接收过程" class="headerlink" title="广告信息接收过程"></a>广告信息接收过程</h4><ol><li>曝光：广告在页面上展示了</li><li>关注： 广告受众关注到了页面上的广告</li><li>理解： 广告受众理解了广告的诉求</li><li>接受： 广告表达的诉求得到广告受众的认同</li><li>保持： 追求长期转化的品牌广告，希望传达的信息给用户留下深刻的印象</li><li>决策： 广告最终带来的实际转化行为，例如购买</li></ol><h4 id="互联网广告的技术特点"><a href="#互联网广告的技术特点" class="headerlink" title="互联网广告的技术特点"></a>互联网广告的技术特点</h4><ol><li>技术和计算导向： 数字媒体的特点使得在线广告可以进行精确的受众定向；“由于在线广告有独特的竞价交易方式，可以对广告效果进行有效的预估和优化”。</li><li>效果的可衡量性： 广告的展示、点击数据直接可以衡量广告的效果</li><li>创意和投放方式的标准化：标准化的驱动力来自于受众定向和程序化购买</li><li>媒体概念的多样化：数字媒体的交互功能越来越丰富多彩，和线下媒体已经有了本质差别。不同在线媒体在转化的链条上位置不一样，有些更接近最后的决策，有些是为了吸引潜在用户。</li><li>数据驱动的投放决策：在线广告是目前最成熟的大数据引用。在线广告投放流程是：广泛收取用户的行为数据和广告反馈数据，利用云计算基础设施给用户打上合适的标签，同样根据数据在多个广告竞争同一次展示是作出决策，再将投放结果的统计数据反馈广告操作人员以调整投放策略。</li></ol><h4 id="计算广告的核心问题"><a href="#计算广告的核心问题" class="headerlink" title="计算广告的核心问题"></a>计算广告的核心问题</h4><pre><code>计算广告的核心问题，是为一系列用户和环境的组合找到最适合的广告投放策略以优化整体广告活动的利润。</code></pre><p>上述问题的公式化</p><p>max E (ri - qi)</p><p>其中 i 表示从第 1 次到第 T 次之间的一次广告展示。优化目标是在这 T 次展示的总收入(r)与总成本(q)的差。</p>]]></content>
      
      <categories>
          
          <category> 计算广告 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算广告 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>golang 基础学习笔记（-）———— 基本语法</title>
      <link href="/2018/03/01/%E6%8A%80%E6%9C%AF/golang/2018-03-01-golang%E5%9F%BA%E7%A1%80/"/>
      <url>/2018/03/01/%E6%8A%80%E6%9C%AF/golang/2018-03-01-golang%E5%9F%BA%E7%A1%80/</url>
      <content type="html"><![CDATA[<a id="more"></a><h2 id="Go-基础语法"><a href="#Go-基础语法" class="headerlink" title="Go 基础语法"></a>Go 基础语法</h2><h3 id="Go-程序的基本构成"><a href="#Go-程序的基本构成" class="headerlink" title="Go 程序的基本构成"></a>Go 程序的基本构成</h3><h4 id="Hello-world"><a href="#Hello-world" class="headerlink" title="Hello world"></a>Hello world</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"hello, world"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Go 程序的基本构成，每个程序都有自己所在的 <code>package</code>,  <code>包</code>这个概念类似于其他编程语言的<code>命名空间</code> 或者 <code>库名</code>, 一般用一个简单的单词，与其他功能区分开即可, 命名规范要求全小写，或者<code>&#39;_&#39;</code>连接的多个单词</p><p>Go 程序是通过 <code>import</code> 关键字将一组包链接在一起。<br><code>import &quot;fmt&quot;</code> 表示该程序需要使用 <code>package fmt</code>（函数或者其他元素），其中 “fmt” 是一个包名</p><p>格式是</p><ul><li>import “package_name”</li><li>import<br>(<br><br>  “package_name”<br><br>)</li></ul><h4 id="function"><a href="#function" class="headerlink" title="function"></a>function</h4><p>Go 程序的重要组成部分是函数，格式是 <code>func 函数名(参数列表) (返回值列表) {}</code></p><h4 id="main-main"><a href="#main-main" class="headerlink" title="main.main"></a>main.main</h4><p>Go 程序的入口是 <code>main.main</code> 方法, 第一个<code>main</code>是该程序的 <code>package</code>; 第二个 <code>main</code> 是该程序的 <code>main</code> 函数，<code>main</code> 函数要求没有参数列表和返回值列表。</p><h3 id="基础数据类型"><a href="#基础数据类型" class="headerlink" title="基础数据类型"></a>基础数据类型</h3><h4 id="int"><a href="#int" class="headerlink" title="int"></a>int</h4><p>包含int8, int16, int32, int64，分别8bit, 16bit, 32bit, 64bit的有符号整数，而int类型占的bit数决定于编译环境所在平台的位数，如果是32位环境则是32bit，如果是64位环境则是64bit。<br>除了有符号数之外还要无符号数，Go 语言中，无符号型整数有 uint8, uint16, uint32, unit64， int8 的取值范围是 [-128~127], 而uint8的取值范围是 [0~255], 其他有符号型和无符号型整数的取值范围和这个类型类似。</p><h4 id="byte"><a href="#byte" class="headerlink" title="byte"></a>byte</h4><pre><code>byte is an alias for uint8 and is equivalent to uint8 in all ways. It is used, by convention, to distinguish byte values from 8-bit unsigned integer values.</code></pre><p>byte 是 <code>uint8</code> 的别名（alias）， 或者说完全等同于 <code>uint8</code>。按照惯例用于区分8bit无符号数和byte 类型数据</p><h4 id="rune"><a href="#rune" class="headerlink" title="rune"></a>rune</h4><pre><code>rune is an alias for int32 and is equivalent to int32 in all ways. It is used, by convention, to distinguish character values from integer values.rune 是 `int32` 类型的别名, 或者说完全等同于 `int32`. 按照惯例用于区分字符类型和整数类型</code></pre><p><code>rune</code> 用数字表示字符的 <code>ASCII</code>编码</p><h4 id="float"><a href="#float" class="headerlink" title="float"></a>float</h4><p>浮点类数据类型包含<code>float32</code>和<code>float64</code>, Go 语言基于 <code>IEEE 754标准</code>实现的浮点类型数据，具体参见另一篇文章<a href="http://baidu.com" target="_blank" rel="noopener">浮点数</a></p><h4 id="bool"><a href="#bool" class="headerlink" title="bool"></a>bool</h4><p>布尔类型数据，取值有 true 和 false</p><h4 id="complex"><a href="#complex" class="headerlink" title="complex"></a>complex</h4><p>复数，有对应<code>float32</code> 和 <code>float64</code> 两个精度的数据类型 <code>complex64</code> 和 <code>complex128</code>,<br><code>complex(1, 2)`</code> 等同于  <code>1 + 2i</code></p><h4 id="string"><a href="#string" class="headerlink" title="string"></a>string</h4><p>字符串类型，底层实现是byte 类型的 slice，不可变（immutable）</p><h4 id="iota"><a href="#iota" class="headerlink" title="iota"></a>iota</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="literal">iota</span> = <span class="number">0</span></span><br></pre></td></tr></table></figure><p><code>iota</code> 是无类型的int 类型的常量计数器，在const关键字出现时配置为0，从0开始，const 中每增加一行iota 自增一次（+1）</p><p><code>iota</code> 的使用示例如下, 在 <code>const</code> 关键字修饰的括号中， <code>iota</code> 首先被重置成0， 然后 a = 0, b = 1, c = 2</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> (</span><br><span class="line">a = <span class="literal">iota</span> <span class="comment">// 0</span></span><br><span class="line">  b        <span class="comment">// 1</span></span><br><span class="line">c        <span class="comment">// 2</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>从上面的特性来看，我们可以使用 <code>iota</code> 来定义一个简单的<code>枚举</code>，来个小例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">type chargeType int</span><br><span class="line"></span><br><span class="line">const (</span><br><span class="line">CPC  chargeType = iota // 0</span><br><span class="line">CPM                    // 1</span><br><span class="line">CPT                    // 2</span><br><span class="line">CPD                    // 3</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>设想你在处理消费者的音频输出。音频可能无论什么都没有任何输出，或者它可能是单声道，立体声，或是环绕立体声的。<br>这可能有些潜在的逻辑定义没有任何输出为 0，单声道为 1，立体声为 2，值是由通道的数量提供。<br>所以你给 Dolby 5.1 环绕立体声什么值。<br>一方面，它有6个通道输出，但是另一方面，仅仅 5 个通道是全带宽通道（因此 5.1 称号 - 其中 .1 表示的是低频效果通道）。<br>不管怎样，我们不想简单的增加到 3。<br>我们可以使用下划线跳过不想要的值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">type AudioOutput int</span><br><span class="line"></span><br><span class="line">const (</span><br><span class="line">none  AudioOutput = iota // 0</span><br><span class="line">mone                    // 1</span><br><span class="line">stereo                  // 2</span><br><span class="line">_</span><br><span class="line">_</span><br><span class="line">Dolby                   // 5</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="控制结构"><a href="#控制结构" class="headerlink" title="控制结构"></a>控制结构</h3><h4 id="if-else"><a href="#if-else" class="headerlink" title="if-else"></a>if-else</h4><p>基础用法<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> condition &#123;</span><br><span class="line"><span class="comment">// do something</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> condition &#123;</span><br><span class="line"><span class="comment">// do something</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// do something</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> condition1 &#123;</span><br><span class="line"><span class="comment">// do something</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> condition2 &#123;</span><br><span class="line"><span class="comment">// do something</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><em>关键字 if 和 else 之后的左大括号 { 必须和关键字在同一行，如果你使用了 else-if 结构，则前段代码块的右大括号 } 必须和 else-if 关键字在同一行。这两条规则都是被编译器强制规定的。</em></p><p>除了上述情况之外还有如下使用方法<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> initialization; condition &#123;</span><br><span class="line"><span class="comment">// do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Example:<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> i := getValue(); i &gt; <span class="number">10</span> &#123;</span><br><span class="line"><span class="comment">// do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="for"><a href="#for" class="headerlink" title="for"></a>for</h4><ol><li>常见用法</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; count; i++ &#123;</span><br><span class="line"><span class="comment">//do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>go 中没有while 循环，用for 循环代替</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i &lt; <span class="number">100</span> &#123;</span><br><span class="line"><span class="comment">//do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>无限循环，没有 condition</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> &#123;&#125;</span><br></pre></td></tr></table></figure><p>或<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> index := <span class="number">0</span>; ; index ++ &#123;&#125;</span><br></pre></td></tr></table></figure></p><ol start="4"><li><code>for range</code></li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> idx, element := <span class="keyword">range</span> intArr &#123; <span class="comment">// idx 是数组下表，element 是数组下标所在元素</span></span><br><span class="line"><span class="comment">//do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> idx := <span class="keyword">range</span> intArr &#123; <span class="comment">// idx 是数组下表</span></span><br><span class="line"><span class="comment">//do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><em>注意：<code>for a := range arr</code> 这种遍历的时候 a 是数组下标</em></p><p>或<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> key, value := <span class="keyword">range</span> map1 &#123; <span class="comment">// Key map 中的key value 是map 中的值</span></span><br><span class="line"><span class="comment">//do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ol start="5"><li><code>break</code> 和 <code>continue</code></li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> idx := <span class="number">0</span> ;; idx ++ &#123;</span><br><span class="line"><span class="keyword">if</span> idx &gt; <span class="number">10</span> &#123;</span><br><span class="line"><span class="keyword">break</span>; <span class="comment">// 退出当前for 循环</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> idx := <span class="number">0</span> ;; idx ++ &#123;</span><br><span class="line"><span class="keyword">if</span> (idx % <span class="number">2</span>) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">continue</span>; <span class="comment">// 进入下一个循环</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="switch-case"><a href="#switch-case" class="headerlink" title="switch case"></a>switch case</h4><p>相比其他语言来说go 语言的 <code>switch case</code> 更强大，它支持各种形式的表达式，而且匹配上一个 <code>case</code> 执行完分支代码后，程序会自动switch代码块，不需要使用 <code>break</code> 标明结束</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> var1 &#123;</span><br><span class="line"><span class="keyword">case</span> val1:</span><br><span class="line"><span class="comment">// do something</span></span><br><span class="line"><span class="keyword">case</span> val2:</span><br><span class="line"><span class="comment">// do something</span></span><br><span class="line"><span class="keyword">default</span>:  <span class="comment">// 不符合之前所有已给出条件的时候走到这里，建议写到最后</span></span><br><span class="line"><span class="comment">// do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面例子中<code>var1</code> 可以是<code>任何类型</code>， 而 <code>val1</code> 和 <code>val2</code> 是同类型的任意值</p><p>多个case 合并</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> i &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>, <span class="number">2</span>:</span><br><span class="line"><span class="comment">//do something</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="comment">//do something</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="comment">//do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>or<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> i &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="comment">//do something</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="comment">//do something</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="comment">//do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><code>fallthrough</code></p><p>当执行完一个 <code>case</code> 分支后还想继续执行下一个 <code>case</code> 分支，可以使用关键字 <code>fallthrough</code></p><p>example：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> i = <span class="number">2</span></span><br><span class="line"><span class="keyword">switch</span> i &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">fmt.Printf(<span class="string">"Value 1 or 0, val:%v \n"</span>, i)</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">fmt.Printf(<span class="string">"Value 2, val:%v \n"</span>, i)</span><br><span class="line"><span class="keyword">fallthrough</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">fmt.Printf(<span class="string">"Value 3, val:%v \n"</span>, i)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Printf(<span class="string">"Value default, val:%v \n"</span>, i)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">`</span></span><br></pre></td></tr></table></figure><p>上面程序的输出结果是：</p><pre><code>Value 2, val:2Value 3, val:2Process finished with exit code 0</code></pre><h4 id="array-数组"><a href="#array-数组" class="headerlink" title="array 数组"></a>array 数组</h4><p>数组是固定长度的同一类型元素组成的序列，可以通过数组下标访问来访问元素，下标从0开始</p><p>数组的长度是数组类型的一个组成部分，因此[3]int和[4]int是两种不同的数组类型，数组的长度必须是常量表达式，因为数组的长度需要在编译阶段确定。</p><p>golang 提供内建函数 <code>append(arr []Type, element... Type)</code> 用于往数组中添加元素，也可用于 <code>slice</code><br>数组相关的<code>内建函数</code> 还有 <code>len()</code> 和 <code>cap()</code>, 对于数组而言 <code>len()</code> 和 <code>cap()</code> 是一样的</p><p><code>len()</code> 函数的参数也可以是 nil, <em>len(nil) == 0</em></p><p>数组的声明格式是<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr [length]Type</span><br></pre></td></tr></table></figure></p><p>刚声明的数组长度是 length，每个元素都是零值（数字是0， 字符串是’’，引用类型是nil）<br>也可以使用 <code>make</code> 定义一个数组</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = <span class="built_in">make</span>([]Type, <span class="built_in">len</span>)</span><br></pre></td></tr></table></figure><p>还可以在定义的是时候设定初始值<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">3</span>]<span class="keyword">int64</span>&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;</span><br></pre></td></tr></table></figure></p><p>或者设定指定下标的元素<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">3</span>]<span class="keyword">int64</span>&#123;<span class="number">2</span>:<span class="number">1000</span>&#125;  <span class="comment">// arr := []int64&#123;0, 0, 1000&#125;</span></span><br></pre></td></tr></table></figure></p><p>如果数组元素本身可以比较的，那么数组也是可以用 <code>==</code> 比较的，反则会编译失败</p><h4 id="slice（切片）"><a href="#slice（切片）" class="headerlink" title="slice（切片）"></a>slice（切片）</h4><p><code>slice(切片)</code> 是对数组的一个连续片段的使用</p><p>切片也是可索引的，也可以使用 <code>len()</code> 函数的来获取长度<br>切片除了长度之外，还有一个属性是容量， 通过内建函数 <code>cap()</code> 函数来获取容量，容量的含义是切片开始位置到底层数组结束位置的数组长度<br>例如切片 s 是数组 a 的一部分，s = a[3:], 那么 <em>cap[s] = len(a) - 3</em><br>对于切片来说，始终需要保证 <code>0 &lt;= len(s) &lt;= cap(s)</code>， 如果 <em>len(s) &gt; cap(s)</em> 就会出现<code>越界异常</code></p><p>从上面这段文字总结出 <code>slice</code> 的组成元素是：</p><ol><li>指针（指向底层数组中切片的第一个元素）</li><li>长度</li><li>容量</li></ol><p>下图描述了切片的构成<br><img src="/assets/picture/slice.png" alt="图片" title="slice 构成"></p><p>slice 的初始化方式是<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> slice1 [...]Type    <span class="comment">// 不需要指明长度，编译器会自动构建一个长度合适的底层数组</span></span><br><span class="line"><span class="keyword">var</span> slice2 []Type       <span class="comment">// _..._可以不写</span></span><br><span class="line"><span class="keyword">var</span> arr [length]Type    <span class="comment">// 声明一个数组</span></span><br><span class="line">slice3 := arr[start:end] <span class="comment">// 声明一个由数组中 [start, end) 元素组成的切片</span></span><br><span class="line">slice4 := arr[start:]    <span class="comment">// end 可以省略不写，表示 end = len(arr)声明一个由数组中 [start, len(arr)) 元素组成的切片</span></span><br><span class="line">slice5 := arr[:end]      <span class="comment">// start 可以省略不写，表示 start = 0 声明一个由数组中 [0, end) 元素组成的切片</span></span><br><span class="line">slice6 := <span class="built_in">make</span>([]Type, <span class="built_in">len</span>, <span class="built_in">cap</span>)  <span class="comment">// 声明一个具体类型，长度是len，容量是cap 的切片， make 关键字适用于 array, slice, map, channel 的内存分配</span></span><br><span class="line">slice7 := <span class="built_in">new</span>([]Type)  <span class="comment">// 也可以用 new 关键词定义一个 len == cap == 0 的slice，但是返回一个指向类型为 T，值为 0 的地址的指针，它适用于值类型如数组和结构体；它相当于 &amp;T&#123;&#125;。强烈建议不要使用 new 关键字声明 slice</span></span><br></pre></td></tr></table></figure></p><p>由于<code>slice</code> 是共享的底层数组，当一个slice 改变了底层数组的时候，和它共享底层数组的其他<code>slice</code> 也会受影响</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> arr [<span class="number">6</span>]<span class="keyword">int64</span></span><br><span class="line"><span class="keyword">for</span> idx := <span class="keyword">range</span> arr &#123;</span><br><span class="line">arr[idx] = <span class="keyword">int64</span>(idx + <span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">"The underlying array:%v \n"</span>, arr)</span><br><span class="line"></span><br><span class="line">s := arr[<span class="number">3</span>:<span class="number">5</span>]</span><br><span class="line">fmt.Printf(<span class="string">"The slice:%v, length:%v, capacity:%v \n"</span>, s, <span class="built_in">len</span>(s), <span class="built_in">cap</span>(s))</span><br><span class="line"></span><br><span class="line">s[<span class="number">0</span>] = <span class="number">1000</span></span><br><span class="line">fmt.Printf(<span class="string">"The underlying array after set value for slice :%v \n"</span>, arr)</span><br><span class="line">fmt.Printf(<span class="string">"The slice after set value:%v \n"</span>, s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果如下：</p><pre><code>The underlying array:[1 2 3 4 5 6 7 8 9 10]The slice 1:[4 5 6 7 8 9 10], length:7, capacity:7The slice 2:[5 6 7 8 9 10], length:6, capacity:6The underlying array after set value for slice :[1 2 3 4 5 1000 7 8 9 10]The slice 1 after set value:[4 5 1000 7 8 9 10]The slice 2 after set value:[5 1000 7 8 9 10]</code></pre><p>如果不想共享底层数据，可以使用内建的 <code>copy(resourceSlice, targetSlice)</code>函数 从原数组或者切片中拷贝一个新的切片，然后对新的切片的操作就不会因为共享底层数组影响其他切片了</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 第一个集合中排除掉第二个集合后的结果</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Subtract</span><span class="params">(c1 []<span class="keyword">interface</span>&#123;&#125;, c2 []<span class="keyword">interface</span>&#123;&#125;)</span> <span class="params">(subtraction []<span class="keyword">interface</span>&#123;&#125;, err error)</span></span> &#123;</span><br><span class="line">subtraction = <span class="built_in">make</span>([]<span class="keyword">interface</span>&#123;&#125;, <span class="built_in">len</span>(c1))</span><br><span class="line"><span class="built_in">copy</span>(subtraction, c1) <span class="comment">// copy c1 to subtraction</span></span><br><span class="line">subtraction = c1[:]</span><br><span class="line"><span class="keyword">for</span> _, elem2 := <span class="keyword">range</span> c2 &#123;</span><br><span class="line"><span class="keyword">for</span> idx, elem1 := <span class="keyword">range</span> subtraction &#123;</span><br><span class="line"><span class="keyword">if</span> elem2 == elem1 &#123;</span><br><span class="line">subtraction = <span class="built_in">append</span>(subtraction[:idx], subtraction[idx+<span class="number">1</span>:]...)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在从数组或切片中生成新的切片的时候还可以指定新切片的容量<br>语法是<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">newSlice := arr[start:end:<span class="built_in">cap</span>]</span><br></pre></td></tr></table></figure></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">testSliceCap</span><span class="params">()</span></span> &#123;</span><br><span class="line">a := []<span class="keyword">int32</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line"></span><br><span class="line">s1 := a[<span class="number">2</span>:]</span><br><span class="line">fmt.Printf(<span class="string">"a: %v, s1: %v\n"</span>, a, s1)</span><br><span class="line"></span><br><span class="line">s2 := a[<span class="number">0</span>:<span class="number">2</span>:<span class="number">2</span>]</span><br><span class="line">fmt.Printf(<span class="string">"a: %v, s2: %v\n"</span>, a, s2)</span><br><span class="line">s2 = <span class="built_in">append</span>(s2, <span class="number">100</span>)</span><br><span class="line">fmt.Printf(<span class="string">"a: %v, s1: %v, s2: %v\n"</span>, a, s1, s2)</span><br><span class="line"></span><br><span class="line">s3 := a[:<span class="number">2</span>:<span class="number">2</span>]</span><br><span class="line">s3 = <span class="built_in">append</span>(s3, <span class="number">101</span>)</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">"a: %v, s1: %v, s2: %v, s3:%v\n"</span>, a, s1, s2, s3)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果</p><pre><code>a: [1 2 3 4], s1: [3 4]a: [1 2 3 4], s2: [1 2]a: [1 2 3 4], s1: [3 4], s2: [1 2 100]a: [1 2 3 4], s1: [3 4], s2: [1 2 100], s3:[1 2 101]</code></pre><p>从上面的例子可以看到，限定了切片的容量之后，从同一数据产生的切片的</p><p><code>slice</code> 的基本操作和数组一致<br><code>slice</code> 不可以用 <code>==</code> 比较的， bytes 提供了 []byte 的比较方法, strings 提供了 []string 的比较方法</p><h4 id="map"><a href="#map" class="headerlink" title="map"></a>map</h4><p>一个<code>无序</code>的K/V集合，其中所有的key 都是唯一的，在 <code>go</code> 中<code>map</code> 中的 <code>key</code> 必须是可比较的（支持 <code>==</code> 比较运算符）的数据类型, 所以 <code>key</code> 不能是 <code>map</code>、<code>slice</code> 或者 <code>func</code>, 而对于value 值没有任何要求</p><p>map 的定义和初始化</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mapDemo <span class="keyword">map</span>[Key]Value</span><br><span class="line">m := <span class="built_in">make</span>(<span class="keyword">map</span>[Key]Value, <span class="built_in">len</span>)</span><br></pre></td></tr></table></figure><p><code>map</code> 的 <code>key</code> 是完全无序的， 使用 <code>for</code> 循环遍历map 的时候每次的顺序都是随机的</p><p>判断 <code>map</code> m1 中是否包含 k1</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> m1 = <span class="built_in">make</span>(<span class="keyword">map</span>[Key][Value])</span><br><span class="line">val1, contains := m1[k1]</span><br><span class="line"><span class="keyword">if</span> contains &#123;</span><br><span class="line">fmt.Println(<span class="string">"the map m1 contains k1!"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>注意：对于 <code>slice</code> 可以直接往为 <code>nil</code> 的 <code>slice</code> 中存放数据，但是map 必须先使用 <code>make</code> 分配内存</em></p><h4 id="结构体-struct"><a href="#结构体-struct" class="headerlink" title="结构体(struct)"></a>结构体(struct)</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义一个结构体</span></span><br><span class="line"><span class="keyword">type</span> Student <span class="keyword">struct</span> &#123;</span><br><span class="line">Name <span class="keyword">string</span></span><br><span class="line">id <span class="keyword">int64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义结构体的 String 函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s Student)</span> <span class="title">String</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Sprintf(<span class="string">"name: %v, Id: %v"</span>, s.Name, s.id)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 实例化一个结构体</span></span><br><span class="line"><span class="keyword">var</span> s Student</span><br><span class="line"><span class="comment">// 访问结构体的数据</span></span><br><span class="line">s.Name = <span class="string">"test"</span></span><br></pre></td></tr></table></figure><p>结构体还可以组合, 下面我们尝试定义两个结构体，<code>Circle</code> 和 <code>Rectangle</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Circle <span class="keyword">struct</span> &#123;</span><br><span class="line">x, y, r <span class="keyword">int64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Rectangle <span class="keyword">struct</span> &#123;</span><br><span class="line">x, y, <span class="built_in">len</span>, width <span class="keyword">int64</span> <span class="comment">// x,y 是左下角的点</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到 <code>Rectangle</code> 和 <code>Circle</code> 都具有点的属性，可以提取出一个结构体 <code>Point</code><br>下面的代码中我们定义了三个结构体，分别是 <code>Point</code>、<code>Circle</code>、<code>Rectangle</code>， 其中<code>Circle</code> 和 <code>Rectangle</code> 中都组合了一个 <code>Point</code>, 这是访问属性的时候就需要先访问被组合的结构体</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Point <span class="keyword">struct</span> &#123;</span><br><span class="line">x, y <span class="keyword">int64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Circle <span class="keyword">struct</span> &#123;</span><br><span class="line">c Point <span class="comment">// 原点</span></span><br><span class="line">r <span class="keyword">int64</span> <span class="comment">// 半径</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 矩形</span></span><br><span class="line"><span class="keyword">type</span> Rectangle <span class="keyword">struct</span> &#123;</span><br><span class="line">p          Point <span class="comment">// 左下角的点</span></span><br><span class="line"><span class="built_in">len</span>, width <span class="keyword">int64</span> <span class="comment">// 长和宽</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">c1 := Circle&#123;c: Point&#123;x: <span class="number">0</span>, y: <span class="number">0</span>&#125;, r: <span class="number">2</span>&#125;</span><br><span class="line">fmt.Println(c1)</span><br><span class="line"></span><br><span class="line">c2 := Circle&#123;&#125;</span><br><span class="line">c2.c.x = <span class="number">0</span></span><br><span class="line">c2.c.y = <span class="number">0</span></span><br><span class="line">c2.r = <span class="number">3</span></span><br><span class="line">fmt.Println(c2)</span><br><span class="line"></span><br><span class="line">r1 := Rectangle&#123;p: Point&#123;x:<span class="number">0</span>, y:<span class="number">0</span>&#125;, <span class="built_in">len</span>:<span class="number">4</span>, width:<span class="number">3</span>&#125;</span><br><span class="line">fmt.Println(r1)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>go还支持在结构体中只声明属性的数据类型，而不只限定属性的名称, 这就是匿名成员，从下面的 代码中也能看到，匿名成员也不是没有名字，而是直接把数据类型作为了成员的名字</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Point <span class="keyword">struct</span> &#123;</span><br><span class="line">x <span class="keyword">int64</span></span><br><span class="line">y <span class="keyword">int64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Circle <span class="keyword">struct</span> &#123;</span><br><span class="line">Point   <span class="comment">// 原点</span></span><br><span class="line">r <span class="keyword">int64</span> <span class="comment">// 半径</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 矩形</span></span><br><span class="line"><span class="keyword">type</span> Rectangle <span class="keyword">struct</span> &#123;</span><br><span class="line">Point            <span class="comment">// 左下角的点</span></span><br><span class="line"><span class="built_in">len</span>, width <span class="keyword">int64</span> <span class="comment">// 长和宽</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">c1 := Circle&#123;Point: Point&#123;x: <span class="number">0</span>, y: <span class="number">0</span>&#125;, r: <span class="number">2</span>&#125;</span><br><span class="line">fmt.Println(c1)</span><br><span class="line"></span><br><span class="line">c2 := Circle&#123;&#125;</span><br><span class="line">c2.Point.x = <span class="number">0</span></span><br><span class="line">c2.Point.y = <span class="number">0</span></span><br><span class="line">c2.r = <span class="number">3</span></span><br><span class="line">fmt.Println(c2)</span><br><span class="line"></span><br><span class="line">r1 := Rectangle&#123;Point: Point&#123;x: <span class="number">0</span>, y: <span class="number">0</span>&#125;, <span class="built_in">len</span>: <span class="number">4</span>, width: <span class="number">3</span>&#125;</span><br><span class="line">fmt.Println(r1)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结构体是多个类型数据聚合的数据类型， 可以包含任何类型的属性，结构体的访问权限通过大小写来控制，只有大写开头的属性和结构体具有包外可见性，使用json序列化和反序列化数组的时候，小写开头的属性会被忽略。</p><p>结构体的比较取决于结构体的属性，当结构体的所有属性都是可比较的时候，结构体就是可比较的，当使用 <code>==</code> 比较两个结构体的示例的时候，这就是。针对包含不可比较的结构体，也可以使用<code>反射</code>的 <code>reflect.DeepEqual()</code></p><h4 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h4><p>函数声明包括函数名、形式参数列表、返回值列表（可省略）以及函数体。<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">funcName</span><span class="params">(param1 Type, param2 Type)</span> <span class="params">(result1 Type, result2 Type)</span></span> &#123;</span><br><span class="line"><span class="comment">// method body</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>从上面的例子中，我们可以看到go 函数的一个显著特点：<code>多返回值</code>，<br>有时候一个方法的结果除了正常的结果外，还有不可预期的异常，这个时候就可以返回多个返回值，比如 <code>encode/json</code> 中的序列化的方法，正常情况下返回序列化的结果，而如果输入的参数无法序列化的时候则返回nil 和异常</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Marshal</span><span class="params">(v <span class="keyword">interface</span>&#123;&#125;)</span> <span class="params">([]<span class="keyword">byte</span>, error)</span></span> &#123;</span><br><span class="line">e := &amp;encodeState&#123;&#125;</span><br><span class="line">err := e.marshal(v, encOpts&#123;escapeHTML: <span class="literal">true</span>&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> e.Bytes(), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果我们在返回值列表中写明变量名，就可以在return 语句中省略操作数， 上面的方法就可以改写成下面这种</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Marshal</span><span class="params">(v <span class="keyword">interface</span>&#123;&#125;)</span> <span class="params">(res []<span class="keyword">byte</span>, err error)</span></span> &#123;</span><br><span class="line">e := &amp;encodeState&#123;&#125;</span><br><span class="line">err = e.marshal(v, encOpts&#123;escapeHTML: <span class="literal">true</span>&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span>  <span class="comment">// 等同于 return nil, err</span></span><br><span class="line">&#125;</span><br><span class="line">res = e.Bytes()</span><br><span class="line"><span class="keyword">return</span> <span class="comment">// 等同于 return e.Bytes(), nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="method-is-first-class-value"><a href="#method-is-first-class-value" class="headerlink" title="method is first-class value"></a>method is <code>first-class value</code></h5><p>在 go 语言中函数也是 <code>first-class value</code>， <code>first-class value</code> 的定义如下：</p><ul><li>可以作为变量或者数据结构存储</li><li>可以作为参数传递给方法/函数</li><li>可以作为返回值从函数/方法返回</li><li>可以在运行期创建</li><li>有固有身份；“固有身份”是指实体有内部表示，而不是根据名字来识别，比如匿名函数，还可以通过赋值叫任何名字。大部分语言的基本类型的数值(int, float)等都是第一类对象；但是数组不一定，比如C中的数组，作为函数参数时，传递的是第一个元素的地址，同时还丢失了数组长度信息。对于大多数的动态语言，函数/方法都是第一类对象，比如Python，但是Ruby不是，因为不能返回一个方法。第一类函数对函数式编程语言来说是必须的。</li></ul><p>也就是说在 go语言中函数拥有类型，可以被赋值，可以作为函数的参数或返回值，还可以有匿名函数</p><h5 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sum</span><span class="params">(args ...<span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">total := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> _, a := <span class="keyword">range</span> args &#123;</span><br><span class="line">total += a</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> total</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(sum()) <span class="comment">// 0</span></span><br><span class="line">fmt.Println(sum(<span class="number">1</span>)) <span class="comment">// 1</span></span><br><span class="line">fmt.Println(sum(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)) <span class="comment">// 10</span></span><br><span class="line"></span><br><span class="line">arr := []<span class="keyword">int</span>&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;</span><br><span class="line">fmt.Println(sum(arr...)) <span class="comment">// 10</span></span><br></pre></td></tr></table></figure><h5 id="defer"><a href="#defer" class="headerlink" title="defer"></a>defer</h5><p>有时候我们需要在函数执行结束之前释放资源（如数据库链接）</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">parseFromFile</span><span class="params">(fileName <span class="keyword">string</span>)</span> <span class="params">(res []<span class="keyword">string</span>, err error)</span></span> &#123;</span><br><span class="line">    inputFile, err := os.Open(fileName)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Printf(<span class="string">"An error occurred on opening the inputfile\n"</span> +</span><br><span class="line">            <span class="string">"Does the file exist?\n"</span> +</span><br><span class="line">            <span class="string">"Have you got acces to it?\n"</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    inputReader := bufio.NewReader(inputFile)</span><br><span class="line">    <span class="keyword">for</span> &#123;</span><br><span class="line">        inputString, err := inputReader.ReadString(<span class="string">'\n'</span>)</span><br><span class="line">fmt.Printf(<span class="string">"The input was: %s"</span>, inputString)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">inputFile.Close()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">  <span class="keyword">if</span> (err = checkLine(inputString)); err != <span class="literal">nil</span> &#123;</span><br><span class="line">inputFile.Close()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">res = <span class="built_in">append</span>(res, inputString)     </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到在每个 <code>return</code> 语句之前，我们都需要调用 <code>inputFile.Close()</code>, 这样做是在太麻烦，go 为我们提供了 <code>refer</code> 关键字</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">parseFromFile</span><span class="params">(fileName <span class="keyword">string</span>)</span> <span class="params">(res []<span class="keyword">string</span>, err error)</span></span> &#123;</span><br><span class="line">    inputFile, err := os.Open(fileName)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Printf(<span class="string">"An error occurred on opening the inputfile\n"</span> +</span><br><span class="line">            <span class="string">"Does the file exist?\n"</span> +</span><br><span class="line">            <span class="string">"Have you got acces to it?\n"</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">refer inputFile.Close() <span class="comment">// 在函数执行到return 之前被调用</span></span><br><span class="line"></span><br><span class="line">    inputReader := bufio.NewReader(inputFile)</span><br><span class="line">    <span class="keyword">for</span> &#123;</span><br><span class="line">        inputString, err := inputReader.ReadString(<span class="string">'\n'</span>)</span><br><span class="line">fmt.Printf(<span class="string">"The input was: %s"</span>, inputString)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">  <span class="keyword">if</span> (err = checkLine(inputString)); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">res = <span class="built_in">append</span>(res, inputString)     </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="refer-执行顺序"><a href="#refer-执行顺序" class="headerlink" title="refer 执行顺序"></a>refer 执行顺序</h6><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">func1</span><span class="params">()</span></span> &#123;</span><br><span class="line">log.Printf(<span class="string">"this is func 1\n"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">func2</span><span class="params">()</span></span> &#123;</span><br><span class="line">log.Printf(<span class="string">"this is func 2\n"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">func3</span><span class="params">()</span></span> &#123;</span><br><span class="line">log.Printf(<span class="string">"this is func 3\n"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">func4</span><span class="params">()</span></span> &#123;</span><br><span class="line">log.Printf(<span class="string">"this is func 4\n"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">log.Printf(<span class="string">"begin\n"</span>)</span><br><span class="line"><span class="keyword">defer</span> func1()</span><br><span class="line"><span class="keyword">defer</span> func2()</span><br><span class="line"><span class="keyword">defer</span> func3()</span><br><span class="line"><span class="keyword">defer</span> func4()</span><br><span class="line">log.Printf(<span class="string">"finished\n"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面程序的数据输出结果是：</p><pre><code>2018/04/17 08:11:41 begin2018/04/17 08:11:41 finished2018/04/17 08:11:41 this is func 42018/04/17 08:11:41 this is func 32018/04/17 08:11:41 this is func 22018/04/17 08:11:41 this is func 1</code></pre><p>可以看出来：<code>defer</code> 的执行顺序和定义顺序正好是相反的</p><h5 id="循环中的-defer"><a href="#循环中的-defer" class="headerlink" title="循环中的 defer"></a>循环中的 defer</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// before process file</span></span><br><span class="line"><span class="keyword">for</span> _, filename := <span class="keyword">range</span> filenames &#123;</span><br><span class="line">f, err := os.Open(filename)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> f.Close() <span class="comment">// <span class="doctag">NOTE:</span> risky; could run out of file</span></span><br><span class="line"><span class="comment">// ...process f</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// after process file</span></span><br><span class="line"><span class="keyword">return</span></span><br></pre></td></tr></table></figure><p>在上面的程序中我们遍历文件名称数组，一个个的处理文件，并在处理完之后希望去关闭文件； 但是 <code>defer</code> 是在函数执行完最后一步才触发，如果文件比较多可能会耗光系统的文件描述符</p><p>这里的解决方案是把 for 循环的循环体抽取成函数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> _, filename := <span class="keyword">range</span> filenames &#123;</span><br><span class="line"><span class="keyword">if</span> err := doFile(filename); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">doFile</span><span class="params">(filename <span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">f, err := os.Open(filename)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> f.Close()</span><br><span class="line"><span class="comment">// ...process f…</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="init-函数"><a href="#init-函数" class="headerlink" title="init 函数"></a>init 函数</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// init something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><p>前面讲结构体的时候, 讲过可以给结构体定义方法, 事实上除了结构体我们还可以们可以给数值、字符串、map、数组定义一些自定义行为</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自定义int 数组</span></span><br><span class="line"><span class="keyword">type</span> array []<span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//给数组定义 sum 方法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a array)</span> <span class="title">sum</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line">total := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> _, i := <span class="keyword">range</span> a &#123;</span><br><span class="line">total += i</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> total</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> arr1 = array&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line">arrSum := arr1.sum()</span><br><span class="line">fmt.Println(arrSum)  <span class="comment">// 输出 10</span></span><br><span class="line"></span><br><span class="line">arrSum2 := array.sum(arr1) <span class="comment">// 常规调动函数的方法</span></span><br><span class="line">fmt.Println(arrSum2)  <span class="comment">// 输出 10</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h3><p>接口类型具体描述了一系列方法的集合，一个实现了这些方法的具体类型是这个接口类型的实例。</p><ol start="2"><li>内嵌结构体的函数</li><li>垃圾回收</li><li>协程池</li><li>并发</li><li>etcd</li></ol>]]></content>
      
      <categories>
          
          <category> golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>golang 环境变量和 golang 脚本工具</title>
      <link href="/2018/01/10/%E6%8A%80%E6%9C%AF/golang/golang%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E5%92%8C%E8%84%9A%E6%9C%AC%E5%B7%A5%E5%85%B7/"/>
      <url>/2018/01/10/%E6%8A%80%E6%9C%AF/golang/golang%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E5%92%8C%E8%84%9A%E6%9C%AC%E5%B7%A5%E5%85%B7/</url>
      <content type="html"><![CDATA[<h1 id="golang-环境变量"><a href="#golang-环境变量" class="headerlink" title="golang 环境变量"></a>golang 环境变量</h1><p>想要了解 go 的环境变量，我们可以通过 <code>go help environment</code> 指令来查看详细介绍，这里尝试翻译这一些详细介绍，并给出一些个人的认识，如有错漏，欢迎指正</p><h2 id="通用环境变量-General-purpose-environment-variables"><a href="#通用环境变量-General-purpose-environment-variables" class="headerlink" title="通用环境变量(General-purpose environment variables)"></a>通用环境变量(General-purpose environment variables)</h2><h3 id="GCCGO"><a href="#GCCGO" class="headerlink" title="GCCGO"></a>GCCGO</h3><p><code>gccgo</code> 属于 <code>gcc</code> 编译器集合，是 <code>gcc</code> 针对go 语言的前端实现；<code>gccgo</code> 的编译速度比gc较慢一点，但是可以生成更优的代码，因此程序执行速度会更快。<br>golang 的默认编译器是 <code>gc</code>, <code>gc</code> 编译器已支持主流的处理器，而 <code>gccgo</code> 也对 <code>gc</code> 不支持的处理器进行了支持测试；<br>通过Go正式版本安装的go命令已经可以支持 <code>gccgo</code>，需要使用 -compiler选项：<code>go build -compiler=gccgo</code> 。<br>对于用户，如果需要更好编译优化，或者是使用 <code>gc</code> 所不支持的处理器或操作系统，<code>gccgo</code> 可能是一个更好的选择。</p><h3 id="GOARCH"><a href="#GOARCH" class="headerlink" title="GOARCH"></a>GOARCH</h3><p>编译源代码的机器的处理器架构，它的值可以是 386、amd64 或 arm。</p><h3 id="GOBIN"><a href="#GOBIN" class="headerlink" title="GOBIN"></a>GOBIN</h3><p><code>go install</code> 编译出来的可执行文件的存放位置，<code>GOBIN</code> 的默认值是<code>GOPATH/bin</code><br>如果 <code>GOBIN</code> 设置了值，编译出来的可执行脚本将放置到到 <code>GOBIN</code> 设置的文件夹，而不是 .go 文件所在的src 文件夹同级的 bin 文件夹</p><h3 id="GOOS"><a href="#GOOS" class="headerlink" title="GOOS"></a>GOOS</h3><p>编译源代码的机器的操作系统, 它的值可以是 linux, darwin, windows, netbsd。</p><h3 id="GOPATH"><a href="#GOPATH" class="headerlink" title="GOPATH"></a>GOPATH</h3><p><code>GOPATH</code> 列举了机器上所有go代码所在位置，在Unix系统中，该值是以冒号分隔的字符串。<br>在Unix 系统中<code>GOPATH</code> 默认值是 <code>%HOME/go</code>， windows 系统中默认值是 <code>%USERPROFILE%\go</code><br><code>GOPATH</code> 中文件夹结构如下:</p><pre><code>GOPATH=/home/user/go/home/user/go/ src/     foo/         bar/               (go code in package bar)             x.go         quux/              (go code in package main)             y.go bin/     quux                   (installed command) pkg/     linux_amd64/         foo/             bar.a          (installed package object)</code></pre><p><code>src</code>: 存放 go 源文件<br><code>bin</code>: package main 中的go 文件编译之后产生的可执行文件存放位置<br><code>pkg</code>: 非 package main 中的go 文件编译之后产生的静态库文件(*.a)存放位置</p><p>设计开发中，需要将所有存放go 代码的位置都添加到 <code>GOPATH</code> 中去</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export GOPATH=:</span><br></pre></td></tr></table></figure><h3 id="GORACE"><a href="#GORACE" class="headerlink" title="GORACE"></a>GORACE</h3><p>竞争监测相关参数，详见 <a href="https://golang.org/doc/articles/race_detector.html" target="_blank" rel="noopener">https://golang.org/doc/articles/race_detector.html</a>.<br><em>待补充</em></p><h3 id="GOROOT"><a href="#GOROOT" class="headerlink" title="GOROOT"></a>GOROOT</h3><p>go 安装目录</p><h3 id="GOTMPDIR"><a href="#GOTMPDIR" class="headerlink" title="GOTMPDIR"></a>GOTMPDIR</h3><p>The directory where the go command will write<br>temporary source files, packages, and binaries.</p><h3 id="GOCACHE"><a href="#GOCACHE" class="headerlink" title="GOCACHE"></a>GOCACHE</h3><p>存放go 编译系统编译过程中产生的缓存文件，如果这个文件过大，可以执行 <code>go clean --cache</code> 去清理这个文件夹</p><h2 id="cgo-相关环境变量"><a href="#cgo-相关环境变量" class="headerlink" title="cgo 相关环境变量"></a>cgo 相关环境变量</h2><h3 id="CC"><a href="#CC" class="headerlink" title="CC"></a>CC</h3><p><code>cgo</code> 编译 c语言代码时候使用的编译器, 需要用户额外安装</p><h3 id="CGO-ENABLED"><a href="#CGO-ENABLED" class="headerlink" title="CGO_ENABLED"></a>CGO_ENABLED</h3><p>是否支持 cgo， 取值是 0 或者 1</p><h3 id="CGO-CFLAGS"><a href="#CGO-CFLAGS" class="headerlink" title="CGO_CFLAGS"></a>CGO_CFLAGS</h3><p>cgo 编译 c 代码时传递的参数</p><h3 id="CGO-CFLAGS-ALLOW"><a href="#CGO-CFLAGS-ALLOW" class="headerlink" title="CGO_CFLAGS_ALLOW"></a>CGO_CFLAGS_ALLOW</h3><p>出于安全考虑，cgo 编译 c 代码时只能允许有限的参数， <code>CGO_CFLAGS_ALLOW</code> 的取值是一个 <code>正则表达式</code>，涵盖所有允许的参数名称</p><h3 id="CGO-CFLAGS-DISALLOW"><a href="#CGO-CFLAGS-DISALLOW" class="headerlink" title="CGO_CFLAGS_DISALLOW"></a>CGO_CFLAGS_DISALLOW</h3><p>和 <code>CGO_CFLAGS_ALLOW</code> 相反，<code>CGO_CFLAGS_ALLOW</code> 的取值也是一个 <code>正则表达式</code>，涵盖所有不允许的参数名称</p><h3 id="CGO-CPPFLAGS-CGO-CPPFLAGS-ALLOW-CGO-CPPFLAGS-DISALLOW"><a href="#CGO-CPPFLAGS-CGO-CPPFLAGS-ALLOW-CGO-CPPFLAGS-DISALLOW" class="headerlink" title="CGO_CPPFLAGS, CGO_CPPFLAGS_ALLOW, CGO_CPPFLAGS_DISALLOW"></a>CGO_CPPFLAGS, CGO_CPPFLAGS_ALLOW, CGO_CPPFLAGS_DISALLOW</h3><p>类似于 <code>CGO_CFLAGS</code>, <code>CGO_CFLAGS_ALLOW</code>, <code>CGO_CFLAGS_DISALLOW</code>, 不过是用于 <code>c</code> 预处理器</p><h3 id="CGO-CXXFLAGS-CGO-CXXFLAGS-ALLOW-CGO-CXXFLAGS-DISALLOW"><a href="#CGO-CXXFLAGS-CGO-CXXFLAGS-ALLOW-CGO-CXXFLAGS-DISALLOW" class="headerlink" title="CGO_CXXFLAGS, CGO_CXXFLAGS_ALLOW, CGO_CXXFLAGS_DISALLOW"></a>CGO_CXXFLAGS, CGO_CXXFLAGS_ALLOW, CGO_CXXFLAGS_DISALLOW</h3><p>类似于 <code>CGO_CFLAGS</code>, <code>CGO_CFLAGS_ALLOW</code>, <code>CGO_CFLAGS_DISALLOW</code>, 不过是用于 <code>c++</code> 编译器</p><h3 id="CGO-FFLAGS-CGO-FFLAGS-ALLOW-CGO-FFLAGS-DISALLOW"><a href="#CGO-FFLAGS-CGO-FFLAGS-ALLOW-CGO-FFLAGS-DISALLOW" class="headerlink" title="CGO_FFLAGS, CGO_FFLAGS_ALLOW, CGO_FFLAGS_DISALLOW"></a>CGO_FFLAGS, CGO_FFLAGS_ALLOW, CGO_FFLAGS_DISALLOW</h3><p>类似于 <code>CGO_CFLAGS</code>, <code>CGO_CFLAGS_ALLOW</code>, <code>CGO_CFLAGS_DISALLOW</code>, 不过是用于 <code>Fortran</code> 编译器</p><h3 id="CGO-LDFLAGS-CGO-LDFLAGS-ALLOW-CGO-LDFLAGS-DISALLOW"><a href="#CGO-LDFLAGS-CGO-LDFLAGS-ALLOW-CGO-LDFLAGS-DISALLOW" class="headerlink" title="CGO_LDFLAGS, CGO_LDFLAGS_ALLOW, CGO_LDFLAGS_DISALLOW"></a>CGO_LDFLAGS, CGO_LDFLAGS_ALLOW, CGO_LDFLAGS_DISALLOW</h3><p>类似于 <code>CGO_CFLAGS</code>, <code>CGO_CFLAGS_ALLOW</code>, <code>CGO_CFLAGS_DISALLOW</code>, 不过是用于 <code>c</code> 链接器</p><h3 id="CXX"><a href="#CXX" class="headerlink" title="CXX"></a>CXX</h3><p>cgo 编译 <code>C++</code>的编译器</p><h3 id="PKG-CONFIG"><a href="#PKG-CONFIG" class="headerlink" title="PKG_CONFIG"></a>PKG_CONFIG</h3><p>取值是 指向 <code>pkg_config</code> 工具的绝对路径</p><h2 id="架构相关的特殊目的的环境变量"><a href="#架构相关的特殊目的的环境变量" class="headerlink" title="架构相关的特殊目的的环境变量"></a>架构相关的特殊目的的环境变量</h2><h3 id="GOARM"><a href="#GOARM" class="headerlink" title="GOARM"></a>GOARM</h3><p>当 <code>GOARCH=arm</code> 时，arm 架构的处理器，它的取值是 5,6,7</p><h3 id="GO386"><a href="#GO386" class="headerlink" title="GO386"></a>GO386</h3><p>当 <code>GOARCH=386</code> 时，浮点指令集，它的取值是  387, sse2</p><h3 id="GOMIPS"><a href="#GOMIPS" class="headerlink" title="GOMIPS"></a>GOMIPS</h3><p>当 <code>GOARCH=mips{,le}</code> 时，指定是软浮点还是硬浮点</p><h2 id="特殊目的的环境变量"><a href="#特殊目的的环境变量" class="headerlink" title="特殊目的的环境变量"></a>特殊目的的环境变量</h2><h3 id="GOROOT-FINAL"><a href="#GOROOT-FINAL" class="headerlink" title="GOROOT_FINAL"></a>GOROOT_FINAL</h3><p>当go 根目录和go 安装目录不一致时，将 <code>GOROOT_FINAL</code> 设置为go 的根目录</p><h3 id="GIT-ALLOW-PROTOCOL"><a href="#GIT-ALLOW-PROTOCOL" class="headerlink" title="GIT_ALLOW_PROTOCOL"></a>GIT_ALLOW_PROTOCOL</h3><p><code>go get</code> 指令使用 <code>git fetch/clone</code> 获取 go 代码的时候允许使用的 <code>schema</code>, 多个 <code>schema</code> 用冒号分割；<br>如果 <code>GIT_ALLOW_PROTOCOL</code> 不包含某个 <code>schema</code>， <code>go get</code> 认为它是不安全的</p><h3 id="GO-EXTLINK-ENABLED"><a href="#GO-EXTLINK-ENABLED" class="headerlink" title="GO_EXTLINK_ENABLED"></a>GO_EXTLINK_ENABLED</h3><p>Whether the linker should use external linking mode<br>when using -linkmode=auto with code that uses cgo.<br>Set to 0 to disable external linking mode, 1 to enable it.</p><h1 id="go-提供的脚本工具"><a href="#go-提供的脚本工具" class="headerlink" title="go 提供的脚本工具"></a>go 提供的脚本工具</h1><h1 id="gofmt"><a href="#gofmt" class="headerlink" title="gofmt"></a>gofmt</h1><p>格式化 go 语言代码</p><pre><code>使用示例: gofmt [flags] [path ...]-cpuprofile string    write cpu profile to this file-d    在控制台输出格式化后的代码和源代码的对比-e    report all errors (not just the first 10 on different lines)-l    list files whose formatting differs from gofmt&apos;s-r string    重写规则，如 &apos;a[b:len(a)] -&gt; a[b:]&apos; 将 `a[b:len(a)]` 替换成 `a[b:len(a)]`-s    简化源代码-w    将格式化结果写回源文件，而不是输出到控制台</code></pre><h3 id="go-install"><a href="#go-install" class="headerlink" title="go install"></a>go install</h3><h3 id="go-get"><a href="#go-get" class="headerlink" title="go get"></a>go get</h3><h3 id="go-build"><a href="#go-build" class="headerlink" title="go build"></a>go build</h3><h4 id="交叉编译-cross-compile"><a href="#交叉编译-cross-compile" class="headerlink" title="交叉编译 (cross compile)"></a>交叉编译 (cross compile)</h4><p>Golang 支持交叉编译，在一个平台上生成另一个平台的可执行程序，这里备忘一下。</p><p>Mac 下编译 Linux 和 Windows 64位可执行程序</p><pre><code>CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build main.goCGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build main.go</code></pre><p>Linux 下编译 Mac 和 Windows 64位可执行程序</p><pre><code>CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build main.goCGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build main.go</code></pre><p>Windows 下编译 Mac 和 Linux 64位可执行程序</p><pre><code>SET CGO_ENABLED=0SET GOOS=darwinSET GOARCH=amd64go build main.goSET CGO_ENABLED=0SET GOOS=linuxSET GOARCH=amd64go build main.go</code></pre><p>GOOS：目标平台的操作系统（darwin、freebsd、linux、windows）<br>GOARCH：目标平台的体系架构（386、amd64、arm）<br>交叉编译不支持 CGO 所以要禁用它</p><h3 id="gdb"><a href="#gdb" class="headerlink" title="gdb"></a>gdb</h3>]]></content>
      
      <categories>
          
          <category> golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>kafka 中的偏移量</title>
      <link href="/2017/12/10/%E6%8A%80%E6%9C%AF/kafka/2017-12-10-kafka%E5%A6%82%E4%BD%95%E6%8A%8A%E5%AE%9E%E7%8E%B0consumer%E6%8E%A7%E5%88%B6offset/"/>
      <url>/2017/12/10/%E6%8A%80%E6%9C%AF/kafka/2017-12-10-kafka%E5%A6%82%E4%BD%95%E6%8A%8A%E5%AE%9E%E7%8E%B0consumer%E6%8E%A7%E5%88%B6offset/</url>
      <content type="html"><![CDATA[<h1 id="kafka-中的偏移量"><a href="#kafka-中的偏移量" class="headerlink" title="kafka 中的偏移量"></a>kafka 中的偏移量</h1><h2 id="首先来了解一下Kafka所使用的基本术语："><a href="#首先来了解一下Kafka所使用的基本术语：" class="headerlink" title="首先来了解一下Kafka所使用的基本术语："></a>首先来了解一下Kafka所使用的基本术语：</h2><p><code>Topic</code>: Kafka将消息种子(Feed)分门别类，每一类的消息称之为一个主题(Topic).</p><p><code>Producer</code>: 发布消息的对象称之为主题生产者(Kafka topic producer)</p><p><code>Consumer</code>: 订阅消息并处理发布的消息的种子的对象称之为主题消费者(consumers)</p><p><code>Broker</code>: 已发布的消息保存在一组服务器中，称之为Kafka集群。集群中的每一个服务器都是一个代理(Broker). 消费者可以订阅一个或多个主题（topic），并从Broker拉数据，从而消费这些已发布的消息。</p><hr><h2 id="话题和日志-Topic和Log"><a href="#话题和日志-Topic和Log" class="headerlink" title="话题和日志 (Topic和Log)"></a>话题和日志 (Topic和Log)</h2><p>让我们更深入的了解Kafka中的Topic。</p><p>Topic是发布的消息的类别或者种子Feed名。对于每一个Topic，Kafka集群维护这一个分区的log，就像下图中的示例：</p><p><img src="/assets/picture/kafka-partition.png" alt="图片" title="Kafka partition log"></p><p>每一个分区都是一个顺序的、不可变的消息队列， 并且可以持续的添加。分区中的消息都被分了一个序列号，称之为<code>偏移量</code>(offset)，在每个分区中此<code>偏移量</code>都是唯一的。</p><p>Kafka集群保持所有的消息，直到它们过期， 无论消息是否被消费了。 实际上消费者所持有的仅有的元数据就是这个<code>偏移量</code>，也就是消费者在这个log中的位置。 这个<code>偏移量</code>由<code>消费者</code>控制：正常情况当消费者消费消息的时候，<code>偏移量</code>也线性的的增加。但是实际<code>偏移量</code>由消费者控制，消费者可以将<code>偏移量</code>重置为更老的一个<code>偏移量</code>，重新读取消息。 可以看到这种设计对消费者来说操作自如， 一个消费者的操作不会影响其它消费者对此log的处理。</p><p><img src="/assets/picture/kafka-offset.png" alt="图片" title="Kafka partition offset"></p><hr><h2 id="消费者-Consumers"><a href="#消费者-Consumers" class="headerlink" title="消费者(Consumers)"></a>消费者(Consumers)</h2><p>通常来讲，消息模型可以分为两种， <code>队列</code> 和 <code>发布-订阅</code> 式。 队列的处理方式是 一组消费者从服务器读取消息，一条消息只有其中的一个消费者来处理。在发布-订阅模型中，消息被广播给所有的消费者，接收到消息的消费者都可以处理此消息。Kafka为这两种模型提供了单一的消费者抽象模型： 消费者组 （consumer group）。 消费者用一个消费者组名标记自己。 一个发布在Topic上消息被分发给此消费者组中的一个消费者。 假如所有的消费者都在一个组中，那么这就变成了queue模型。 假如所有的消费者都在不同的组中，那么就完全变成了发布-订阅模型。 更通用的， 我们可以创建一些消费者组作为逻辑上的订阅者。每个组包含数目不等的消费者， 一个组内多个消费者可以用来扩展性能和容错。正如下图所示：<br>2个kafka集群托管4个分区（P0-P3），2个消费者组，消费组A有2个消费者实例，消费组B有4个。</p><p><img src="/assets/picture/kafka-customer-type.png" alt="图片" title="Kafka customer type"></p><p>正像传统的消息系统一样，Kafka保证消息的顺序不变。 再详细扯几句。传统的队列模型保持消息，并且保证它们的先后顺序不变。但是， 尽管服务器保证了消息的顺序，消息还是异步的发送给各个消费者，消费者收到消息的先后顺序不能保证了。这也意味着并行消费将不能保证消息的先后顺序。用过传统的消息系统的同学肯定清楚，消息的顺序处理很让人头痛。如果只让一个消费者处理消息，又违背了并行处理的初衷。 在这一点上Kafka做的更好，尽管并没有完全解决上述问题。 Kafka采用了一种分而治之的策略：分区。 因为Topic分区中消息只能由消费者组中的唯一一个消费者处理，所以消息肯定是按照先后顺序进行处理的。但是它也仅仅是保证Topic的一个分区顺序处理，不能保证跨分区的消息先后处理顺序。 所以，如果你想要顺序的处理Topic的所有消息，那就只提供一个分区。</p><hr><h2 id="偏移量-Offsets-的管理"><a href="#偏移量-Offsets-的管理" class="headerlink" title="偏移量(Offsets)的管理"></a>偏移量(Offsets)的管理</h2><p>如上文所述，kafka为分区中的每条消息保存一个 <code>偏移量（offset）</code>，这个<code>偏移量</code>是该分区中一条消息的唯一标示符。也表示消费者在分区的位置。例如，一个位置是5的消费者(说明已经消费了0到4的消息)，下一个接收消息的偏移量为5的消息。实际上有两个与消费者相关的“位置”概念：</p><p>消费者的位置给出了下一条记录的偏移量。它比消费者在该分区中看到的最大偏移量要大一个。 它在每次消费者在调用poll(long)中接收消息时自动增长。</p><p>“已提交”的位置是已安全保存的最后偏移量，如果进程失败或重新启动时，消费者将恢复到这个偏移量。消费者可以选择定期自动提交偏移量，也可以选择通过调用commit API来手动的控制(如：commitSync 和 commitAsync)。</p><h3 id="消费者如何提交-偏移量-Offsets"><a href="#消费者如何提交-偏移量-Offsets" class="headerlink" title="消费者如何提交 偏移量(Offsets)"></a>消费者如何提交 <code>偏移量(Offsets)</code></h3><ol><li>自动提交</li></ol><p>这种方式只要在启动时配置属性 <code>enable.auto.commit</code> 为 <code>true</code> 即可， 示例代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Properties props = <span class="keyword">new</span> Properties();</span><br><span class="line">props.put(<span class="string">"bootstrap.servers"</span>, <span class="string">"localhost:9092"</span>);</span><br><span class="line">props.put(<span class="string">"group.id"</span>, <span class="string">"test"</span>);</span><br><span class="line">props.put(<span class="string">"enable.auto.commit"</span>, <span class="string">"true"</span>);</span><br><span class="line">props.put(<span class="string">"auto.commit.interval.ms"</span>, <span class="string">"1000"</span>);</span><br><span class="line">props.put(<span class="string">"key.deserializer"</span>, <span class="string">"org.apache.kafka.common.serialization.StringDeserializer"</span>);</span><br><span class="line">props.put(<span class="string">"value.deserializer"</span>, <span class="string">"org.apache.kafka.common.serialization.StringDeserializer"</span>);</span><br><span class="line">KafkaConsumer&lt;String, String&gt; consumer = <span class="keyword">new</span> KafkaConsumer&lt;&gt;(props);</span><br><span class="line">consumer.subscribe(Arrays.asList(<span class="string">"test"</span>));</span><br><span class="line">System.out.println(consumer);</span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">  ConsumerRecords&lt;String, String&gt; records = consumer.poll(<span class="number">100</span>);</span><br><span class="line">  <span class="keyword">for</span> (ConsumerRecord&lt;String, String&gt; record : records) &#123;</span><br><span class="line">    System.out.printf(<span class="string">"offset = %d, key = %s, value = %s%n"</span>, record.offset(), record.key(),</span><br><span class="line">      record.value());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>手动提交</li></ol><p>在一些场景中，<code>消费者</code> 需要自行判定消息是否被消费了，如果没有判断为没有消费（ps:可能是消费失败了，需要重试），<code>消费者</code> 不会改变 offset；只有 <code>消费者</code> 判定消费成功是，才手动调用 <code>commitSync()</code> 或 <code>commitAsync()</code> 方法去提交 <code>偏移量</code>； 当然此时我们需要把 <code>enable.auto.commit</code> 置为 false。</p><p>下面给出个小例子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Properties props = <span class="keyword">new</span> Properties();</span><br><span class="line"> props.put(<span class="string">"bootstrap.servers"</span>, <span class="string">"localhost:9092"</span>);</span><br><span class="line"> props.put(<span class="string">"group.id"</span>, <span class="string">"test"</span>);</span><br><span class="line"> props.put(<span class="string">"enable.auto.commit"</span>, <span class="string">"false"</span>); <span class="comment">// 主动提交置为false</span></span><br><span class="line"> props.put(<span class="string">"key.deserializer"</span>, <span class="string">"org.apache.kafka.common.serialization.StringDeserializer"</span>);</span><br><span class="line"> props.put(<span class="string">"value.deserializer"</span>, <span class="string">"org.apache.kafka.common.serialization.StringDeserializer"</span>);</span><br><span class="line"> KafkaConsumer&lt;String, String&gt; consumer = <span class="keyword">new</span> KafkaConsumer&lt;&gt;(props);</span><br><span class="line"> consumer.subscribe(Arrays.asList(<span class="string">"test"</span>));</span><br><span class="line"> System.out.println(consumer);</span><br><span class="line"> <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line"> ConsumerRecords&lt;String, String&gt; records = consumer.poll(<span class="number">100</span>);</span><br><span class="line"> <span class="keyword">for</span> (ConsumerRecord&lt;String, String&gt; record : records) &#123;</span><br><span class="line"> System.out.printf(<span class="string">"offset = %d, key = %s, value = %s%n"</span>, record.offset(), record.key(),</span><br><span class="line"> record.value());</span><br><span class="line"> <span class="comment">// 逻辑处理</span></span><br><span class="line"> <span class="comment">// ...</span></span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span> (success) &#123; <span class="comment">// 如果判定消费成功，则手动提交offset到 broker</span></span><br><span class="line"> consumer.commitSync();</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="消费者如果控制偏移量"><a href="#消费者如果控制偏移量" class="headerlink" title="消费者如果控制偏移量"></a>消费者如果控制偏移量</h3><p>在一些场景下，消费者需要控制自己要读取的偏移量，此时用户可以通过API手动设置开始读取的 <code>偏移量</code></p><p>API 中提供以下方法：</p><ol><li><p>指定到某个分区的具体 offset<br>org.apache.kafka.clients.consumer.KafkaConsumer#seek(TopicPartition partition, long offset)</p></li><li><p>指定到某些分区的开始<br>org.apache.kafka.clients.consumer.KafkaConsumer#seekToBeginning(Collection<topicpartition> partitions)</topicpartition></p></li><li><p>指定到某些分区的结束，从上次结束的位置开始消费<br>org.apache.kafka.clients.consumer.KafkaConsumer#seekToEnd(Collection<topicpartition> partitions)</topicpartition></p></li></ol><p>此时我们需要知道当前的 <code>Topic</code> 的偏移量信息，<code>Kafka</code> 为我们提供了很友好的工具 <code>Get Offset Shell</code></p><p><code>Get Offset Shell</code><br>get offsets for a topic</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-run-class.sh kafka.tools.GetOffsetShell</span><br></pre></td></tr></table></figure><p>required argument [broker-list], [topic]</p><table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td>–broker-list [hostname:port,….]</td><td>REQUIRED: The list of hostname and [hostname:port] port of the server to connect to.</td></tr><tr><td>–max-wait-ms [Integer: ms]</td><td>The max amount of time each fetch request waits. (default: 1000)</td></tr><tr><td>–offsets [Integer: count]</td><td>number of offsets returned (default: 1)</td></tr><tr><td>–partitions [partition ids]</td><td>comma separated list of partition ids. If not specified, will find offsets for all partitions (default)</td></tr><tr><td>–time [Long: timestamp in milliseconds]</td><td>-1(latest) / -2 (earliest) timestamp; offsets will come before this timestamp, as in getOffsetsBefore</td></tr><tr><td>–topic [topic]</td><td>REQUIRED: The topic to get offsets from.</td></tr></tbody></table><p>示例：</p><p>查询最近的offset</p><pre><code>➜  kafka_2.12-1.0.0 bin/kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list localhost:9092 -topic test --time -1</code></pre><p>输出</p><pre><code>test:0:52</code></pre><p>查询开始的的offset</p><pre><code>➜  kafka_2.12-1.0.0 bin/kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list localhost:9092 -topic test --time -2</code></pre><p>输出</p><pre><code>test:0:0</code></pre><h3 id="偏移量的存储"><a href="#偏移量的存储" class="headerlink" title="偏移量的存储"></a><code>偏移量</code>的存储</h3><p>新版本的 <code>Kafka</code> 将偏移量信息存储在名为 <code>__consumer_offsets</code> 的topic 中,<br>也支持将 <code>偏移量</code> 信息存储在 <code>Zookeeper</code> 中<br><br>通过设置属性 <code>offsets.storage</code> 控制，<code>offsets.storage</code> 属性可选值有 <code>kafka</code> 和 <code>zookeeper</code></p><p>消费者也可以不使用 <code>Kafka</code> 提供的偏移量存储方案，可自定义存储方式，详见<a href="http://kafka.apache.org/0101/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#rebalancecallback" title="官方文档" target="_blank" rel="noopener">官方文档</a></p>]]></content>
      
      <categories>
          
          <category> kafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
            <tag> kafka </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>浮点数学习笔记</title>
      <link href="/2017/12/06/%E6%8A%80%E6%9C%AF/golang/2017-12-06-%E6%B5%AE%E7%82%B9%E6%95%B0/"/>
      <url>/2017/12/06/%E6%8A%80%E6%9C%AF/golang/2017-12-06-%E6%B5%AE%E7%82%B9%E6%95%B0/</url>
      <content type="html"><![CDATA[<h2 id="浮点数学习笔记"><a href="#浮点数学习笔记" class="headerlink" title="浮点数学习笔记"></a>浮点数学习笔记</h2><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>最近在工作中遇到汇率换算的问题，需要将用户订单中的的本币换算成美元，用 <code>golang</code> 写了个脚本进行换算，当把汇率变量的类型定义为 <code>float32</code> 的时候，计算结果存在不能接受的误差<br>查看了一下 <code>golang</code> 的官方文档，发现 <code>golang</code> 实现的浮点型数据是基于 <code>IEEE 754标准</code>，这一标准在存储小数的时候先天就 <code>存在误差</code>，下面会一一介绍。</p><h3 id="float-精度问题"><a href="#float-精度问题" class="headerlink" title="float 精度问题"></a><code>float</code> 精度问题</h3><p>先来个小例子，抛出问题</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a <span class="keyword">float32</span> = <span class="number">64.35</span></span><br><span class="line"><span class="keyword">var</span> b = <span class="number">64.35</span>  <span class="comment">// 默认类型是 float64</span></span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">"this is a float32 %f \n"</span>, a)</span><br><span class="line">fmt.Printf(<span class="string">"this is a float64 %f \n"</span>, b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序执行结果：</p><pre><code>this is a float32 64.349998this is a float64 64.350000</code></pre><p>可以看到, 使用 <code>float32</code> 类型的时候， 小数 <code>64.35</code> 存储的并不精准；不难想象，对 <code>float32</code> 进行逻辑计算的时候肯定会产生误差；那么使用 <code>float64</code> 类型数据的时候，计算结果就一定精准吗？答案显然是<code>否定</code>的，下面给将给出答案</p><h3 id="为什么叫-浮点数"><a href="#为什么叫-浮点数" class="headerlink" title="为什么叫 浮点数"></a>为什么叫 <code>浮点数</code></h3><p>为什么叫 <code>浮点数</code>， <code>浮点数</code> 这个名词是相对 <code>定点数</code>来说的，从这两个名词中可以看出，这两个概念的差别就在于 <code>点</code>， 这里的 <code>点</code> 指的是小数中的 <code>小数点</code>；</p><p>大家都知道，计算机都是使用 <code>二进制</code> 的形式来存储和计算数据的，对于小数的处理也是如此；</p><p>存储小数的时候，计算机将小数分为 <code>整数</code> 和 <code>小数</code> 两个部分进行处理：</p><p><code>定点数</code> 就是将小数点的位置固定，分别分配固定的位数用于存储 <code>整数</code> 和 <code>小数</code> 部分，<br>例如，我们用 32bit 存储小数，第31位存储符号，23~30位存储 <code>整数</code>，0~22 位存储小数，如下图，</p><table><thead><tr><th>0</th><th>0000 1111</th><th>0100 0000 0000 0000 0000 000</th><th>15.25</th></tr></thead><tbody><tr><td>31bit符号位</td><td>23~30bit保存整数部分</td><td>0~22bit保存小数部分</td><td>十进制小数</td></tr></tbody></table><p>上面这个例子中 <code>定点数</code> 将小数点固定在 22bit 和 23bit 之间；可以很明显的看出，这种存储方式受到位数的限制，能表示的数字范围很小，上例中小数的范围就是 -255.xxx ~ 255.xxx <br><br>(ps：寡人太懒了，不想算[1/2 + 1/4 + … + 1/2<sup>-23</sup>])<br>也正是这个原因，计算机放弃了这种方式，采用了 <code>浮点数</code> 的方式。</p><p><code>浮点数</code> 从名称上来解释的就是，小数点的位置是浮动的；简单来说浮点数就是将一个数字用<code>科学计数法</code>表示，先将数字分为 <code>基数</code>、<code>指数</code>； 再将<code>基数</code>分为整数部分和小数部分，例如:<br>12345 = 1.2345 x 10<sup>4</sup>；当然这里是十进制，而计算机在存储<code>浮点数</code>的时候当然还是二进制</p><p>15.25 = 1111.01 = 1.11101 x 2<sup>3</sup></p><p>让我们用32bit 保存小数：</p><table><thead><tr><th>0</th><th>1000 0010</th><th>1110 1000 0000 0000 0000 000</th><th>15.25</th></tr></thead><tbody><tr><td>31bit符号位</td><td>23~30bit保存指数部分</td><td>0~22bit保存小数部分</td><td>十进制小数</td></tr></tbody></table><p>你能从这个二进制中看出小数点的位置吗？<br><br>这里大家要注意： <strong>浮点数不仅仅可以保存小数！整数也是可以的</strong>，但是用浮点数表示整数这种行为不鼓励，毕竟浮点数表示数字是不精确的</p><h3 id="IEEE-754-存储-浮点数"><a href="#IEEE-754-存储-浮点数" class="headerlink" title="IEEE 754 存储 浮点数"></a><code>IEEE 754</code> 存储 <code>浮点数</code></h3><p>上面讲<code>浮点数</code>的时候也基本介绍了 <code>IEEE 754</code> 标准<br><br><code>IEEE 754</code> 标准依赖于 <code>科学计数法</code>，将一个数字用二进制科学计数法表示，将一个数字分为<code>指数</code>和<code>基数</code>，用一位表示符号位，再将基数分为整数（二进制的整数部分当然是1了）和小数部分；<code>IEEE 754</code>规定了四种表示浮点数值的方式：单精确度（32位）、双精确度（64位）、延伸单精确度（43比特以上，很少使用）与延伸双精确度（79比特以上，通常以80位实现）；如下：</p><table><thead><tr><th>表示方式</th><th>符号位（Sign,S）</th><th>指数部分(Exponent,E)</th><th>小数部分(Fraction,F)</th></tr></thead><tbody><tr><td>单精确度（32位）</td><td>1bit</td><td>8bit</td><td>23bit</td></tr><tr><td>双精确度（64位）</td><td>1bit</td><td>11bit</td><td>52bit</td></tr></tbody></table><p>一个单精确度（32位）浮点数的表达公式如下:<br><br><strong>ｘ＝(－1)<sup>S</sup>×(1.F)×2<sup>Ｅ－127</sup> 　 　e＝Ｅ－127</strong></p><p><code>Sign</code>: 简写为S，符号位，很简单就是 1:负数 0:正数<br><br><code>Exponent</code>: 简写为E，指数部分，计算公式是：<code>指数+接码偏移量(127)</code><br><br><code>Fraction</code>: 简写为F，小数部分</p><p>到这里大家就很自然的会想到一个问题 <strong>阶码偏移量为何用127?</strong></p><p>这个问题也困扰我很久，看了<code>维基百科</code>等资料，最后在<code>知乎</code>上找到了一个比较靠谱的答案，引用如下：</p><p>主要是为了让表示的范围能够对称起来<br>这个算一算就清楚了。当阶码E 为全0且尾数M 也为全0时，表示的真值x 为零，结合符号位S 为0或1，有正零和负零之分。当阶码E 为全1且尾数M为全0时，表示的真值x 为无穷大，结合符号位S 为0或1，也有+∞和-∞之分。这样在32位浮点数表示中，要除去E，用全0和全1(255)10表示零和无穷大的特殊情况，指数的偏移值不选128(10000000)，而127(01111111)。对于规格化浮点数，阶码E范围是1~254。 分两种情况计算如下： 1）偏移值为127时，绝对值范围大致是：1.2<em>10^(-38)~3.4</em>10^(+38)； 2）如果偏移值取为128时， 绝对值范围大致是：5.9<em>10^(-39)~1.7</em>10^(+38)； 可见偏移值取127时，上下范围基本对称，相对合理点。</p><p>作者：yuanyuany<br>链接：<a href="https://www.zhihu.com/question/24784136/answer/144601879" target="_blank" rel="noopener">https://www.zhihu.com/question/24784136/answer/144601879</a><br><br>来源：知乎</p><p>如果是双精确度（64位）</p><h3 id="十进制-和-IEEE-754浮点数-相互转化"><a href="#十进制-和-IEEE-754浮点数-相互转化" class="headerlink" title="十进制 和 IEEE 754浮点数 相互转化"></a><code>十进制</code> 和 <code>IEEE 754浮点数</code> 相互转化</h3><p>下面来个小例子， 我们将 <code>64.35</code> 转化成<code>IEEE 754浮点数</code></p><ol><li>现将 <code>64.35</code> 用转化成 <code>二进制</code></li></ol><p>先看整数部分 <code>64</code> = <code>0100 0000</code></p><p>再来转化小数部分转二进制</p><p>0.35x2 = 0.7  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   0 // 取计算结果整数部分<br><br>0.70x2 = 1.4  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   1 // 取上一计算结果的小数部分乘以2 <br><br>0.40x2 = 0.8  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   0 <br><br>0.80x2 = 1.6  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   1 <br><br>0.60x2 = 1.2  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   1 <br><br>0.20x2 = 0.4  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   0 <br><br>0.40x2 = 0.8  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   0 <br><br>0.80x2 = 1.6  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   1 <br><br>0.60x2 = 1.2  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   1 <br><br>0.40x2 = 0.8  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   0 // 到这里已经是循环重复了，这里永远不会算出1.0，所以用 <code>IEEE 754</code> 表示的时候是无限循环 <br></p><p>小数部分： <code>0.35</code> = <code>01 0110 0110 ...</code></p><p>二进制结果  <code>64.35</code> = <code>1000000.0101100110...</code> = <em><em>1.0000 0001 0110 0110 0110… x 2<sup>6</sup></em></em></p><p>用 32bit <code>IEEE 754</code> 存储 <code>64.35</code><br><br>s = 0<br><br>expr = 127 + 6 = 133 = <code>1000 0101</code> <br><br>frag = <code>0000 0001 0110 0110 0110 011</code><br></p><p><code>IEEE 754</code> 32位存储 <code>64.35</code> 的情况如下<br><br><code>64.35</code> = <code>0 | 1000 0101 | 0000 0001 0110 0110 0110 011</code></p><p>用 64bit <code>IEEE 754</code> 存储 <code>64.35</code><br><br>s = 0<br><br>expr = 1023 + 6 = 1029 = <code>1000 0000 0101</code> <br><br>frag = <code>0000 0001 0110 0110 0110 0110 0110 0110 0110 0110 0110 0110 0110</code><br></p><p><code>IEEE 754</code> 64位存储 <code>64.35</code> 的情况如下<br><br><code>64.35</code> = <code>0 | 1000 0000 0101 | 0000 0001 0110 0110 0110 0110 0110 0110 0110 0110 0110 0110 0110</code></p><p>我们再将<code>IEEE 754浮点数</code> 还原成小数,</p><p>先看看32bit 的情况<br>看看，算出指数  1000 0101 - 1111111 = 133 - 127 = 6<br><br>然后这个浮点数的二进制表示就是 <code>1.0000 0001 0110 0110 0110 011 x 2&lt;sup&gt;6&lt;/sup&gt;</code><br><br>下面就是换算成<code>十进制</code><br>1.0000 0001 0110 0110 0110 011 x 2<sup>6</sup> = 100 0000.0101 1001 1001 1001 1</p><p>先看整数部分  0100 0000 = 64<br>在看小数部分 0.0101 1001 1001 1001 1 转十进制</p><p>1/2<sup>2</sup> + 1/2<sup>4</sup> + 1/2<sup>5</sup> + 1/2<sup>8</sup> + 1/2<sup>9</sup> + 1/2<sup>12</sup> + 1/2<sup>13</sup> + 1/2<sup>16</sup> + 1/2<sup>17</sup> = 0.349052429199219</p><p>结论: <code>0 | 1000 0101 | 0000 0001 0110 0110 0110 011</code> = <code>64.349052429199219</code></p><p>再看 64bit 的情况：<br><br>1.0000 0001 0110 0110 0110 0110 0110 0110 0110 0110 0110 0110 0110 x 2<sup>6</sup> = 100 0000.0101 1001 1001 1001 1001 1001 1001 1001 1001 1001 1001 10</p><p>0.0101 1001 1001 1001 1001 1001 1001 1001 1001 1001 1001 10 =<br>1/2<sup>2</sup> + 1/2<sup>4</sup> + 1/2<sup>5</sup> + 1/2<sup>8</sup> + 1/2<sup>9</sup> + 1/2<sup>12</sup> + 1/2<sup>13</sup> + 1/2<sup>16</sup> + 1/2<sup>17</sup> + 1/2<sup>20</sup> + 1/2<sup>21</sup> + 1/2<sup>24</sup> + 1/2<sup>25</sup> + 1/2<sup>28</sup> + 1/2<sup>29</sup> + 1/2<sup>32</sup> + 1/2<sup>33</sup> + 1/2<sup>36</sup> + 1/2<sup>37</sup> + 1/2<sup>40</sup> + 1/2<sup>41</sup> + 1/2<sup>44</sup> + 1/2<sup>45</sup> = 0.349999999999994</p><p>结论: <code>0 | 1000 0000 0101 | 0000 0001 0110 0110 0110 0110 0110 0110 0110 0110 0110 0110 0110</code> = <code>64.349999999999994</code></p><p>从这里也可以看出浮点数都不精确！当对精确有要求的时候尽量避免使用浮点数。</p>]]></content>
      
      <categories>
          
          <category> golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 浮点数 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Docker常用指令</title>
      <link href="/2017/11/23/%E6%8A%80%E6%9C%AF/docker/2017-11-23-Docker%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
      <url>/2017/11/23/%E6%8A%80%E6%9C%AF/docker/2017-11-23-Docker%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h3 id="Docker-常用指令"><a href="#Docker-常用指令" class="headerlink" title="Docker 常用指令"></a>Docker 常用指令</h3><p>作为一个开发最近才开始使用docker ，深感惭愧！<br>最近在学习 <code>CloudMan</code> 大佬的 <a href="http://mp.weixin.qq.com/s/7o8QxGydMTUe4Q7Tz46Diw" target="_blank" rel="noopener"><em>《每天5分钟玩转 Docker 容器技术》</em></a>, 通俗易懂，每天积累一点点，积累，这里记录一下常用的 docker 相关知识，仅做笔记用。</p><ol><li><p>查看本地的所有 <code>docker</code>镜像</p><pre><code>docker images</code></pre></li><li><p>查看指定镜像信息</p><pre><code>docker images ubuntu</code></pre></li><li><p>查看指定tag 的镜像信息</p><pre><code>docker images ubuntu:latest</code></pre></li></ol><ol start="4"><li><p>从 <code>Docker Hub</code> 下载镜像</p><pre><code>docker pull hello-world</code></pre></li><li><p>交互运行一个 container</p><pre><code>docker run -it ubuntu</code></pre></li></ol>]]></content>
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>计算广告学习笔记之名词汇总</title>
      <link href="/2017/09/01/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/2017-09-01-%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%90%8D%E8%AF%8D%E6%B1%87%E6%80%BB0/"/>
      <url>/2017/09/01/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/2017-09-01-%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%90%8D%E8%AF%8D%E6%B1%87%E6%80%BB0/</url>
      <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>最近看了刘鹏老师的《计算广告》，叹为惊止，对于接触广告投放业务不到一年的我产生了很大帮助，决定好好研读这本广告 <code>圣经</code></p><h4 id="计算广告名词汇总"><a href="#计算广告名词汇总" class="headerlink" title="计算广告名词汇总"></a>计算广告名词汇总</h4><p><code>广告主（Advisiter）</code>： 买广告位的个人或公司<br><code>媒体（media）</code>：卖广告位的个体<br><code>受众（audience）</code>：看广告的人</p><p>在线广告创意类型</p><ol><li><code>横幅广告</code></li><li><code>文字链广告</code></li><li><code>富媒体广告</code></li><li><code>视屏广告</code></li><li><code>社交广告</code>：社交广告是指几月社交信息，在用户的社交信息流中展示的广告，如你的还有对汽车很感兴趣，你们有很多的相似点，你将在你的朋友圈看到汽车广告</li><li><code>移动广告</code>：移动端的广告</li><li><code>邮件定向营销广告</code>：类似产品有通过广告、imessage等方式投放的广告</li></ol><p><code>展示广告（Display  Advertising）</code>：纸媒上的广告方式迁移到网页中<br><code>合约广告（Agreement-based Advertising）</code>: 采用合同方式约定某一个广告位在某一时间段为某特定广告主主所独占； CPT 结算方式<br><code>受众广告（Target  Advertising）</code>：针对不同用户投放不同的广告<br><code>受众定向（Audience  Targeting）</code>：收集用户信息，进行归类、贴标签<br><code>广告投放 （Advertising Serving）</code>：从静态页面变为实时从服务器获取要展示的广告信息</p><p><code>担保式投放（Guaranteed Delivery, GD）</code>：在合约广告的基础上，媒体向广告主保证，某个投放量，并确定投放量未完成的情况下 的赔偿方案。<br><code>按千次展现付费 (Cost per Mille, CPM)</code><br><code>在线分配(online allocation)</code>：对于每一次在线广告的展现进行实时决策，有效的将流量分配到各个合约互相交叉的人群覆盖上</p><p><code>竞价广告（auction-based advertising）</code><br><code>搜索广告（search advertising）</code>：用户输入关键词，根据关键词精确定位广告；广告主通过购买关键词来购买广告位资源<br><em>疑问：搜索广告和上下文广告中，广告主都是针对关键词出价，如果两个广告主都买了同一个广告词时，如果选择展示哪个广告？按照 eCPM 排序吗？</em><br><code>上下文广告（search advertising）</code>：将搜索广告中的搜索词换成页面的关键词，通过页面关键词定位广告</p><p><code>广义第二高价(Generalized Second Price, GSP)</code></p><p><code>ADN（AD Network）</code>：广告网络，批量运营媒体的广告位资源，按照人群或者上下文标签售卖给需求方，并用竞价的方式决定流量分配；在广告市场中广告网络的出现是为了批量聚合各媒体方的<code>剩余流量</code>，批量卖给需求方实现变现，因此广告网络提供的流量一般质量较差，广告网络先天性不适合投放品牌广告；国内主要公司产品：百度网盟</p><p><code>竞价广告网络</code>: 竞价售卖方式的广告网络，淡化广告位标的，售卖标的是根据标签划分的人群。产品特点如下</p><ol><li>竞价方式不向广告主做出量的约定，使得广告网络可以专注于对eCPM的估计</li><li>广告网络的出现就是为了批量聚合各媒体的<code>剩余流量</code>，淡化广告位，按人群售卖，很难拿到品牌溢价高的广告位，一般不适合品牌类广告</li><li>竞价广告的结算方式首推CPC, 屏蔽了广告位的概念之后，广告主无法估计每次展现出价，当使用CPC结算时，广告主只需要根据点击出价</li></ol><p><code>竞价广告需求方产品</code>: 1. 挑选广告合适的目标人群 2.针对目标人群给出合理的出价； 上述两个问题的根本就是优化<code>ROI</code><br>a) <code>搜索引擎营销(SEM Search Engine Marketing)</code>：选择合适的关键词；对关键词出价</p><p><code>CPC（Cost per click）</code>：按点击收费<br><code>TD（Trading Desk）</code>：交易终端，面对多个ADN或者媒体按人群一站式采买的广告并优化投入产出比的需求方产品</p><p><code>RTB（Real Time Bidding）</code>：实时竞价，针对每一次广告展现，向需求方产品发送广告位及用户标识，从需求方获取报价，比较各需求方的价格，选出最优价格，展示该需求方的广告<br><code>ADX (Advertising Exchange)</code>：广告交易平台，大量聚合媒体的剩余流量，并且通过实时竞价的方式将它们变现的产品形态<br><code>DSP（Demand Side Platform）</code>：需求方平台，通过实时竞价的方式，按照定制化的人群标签购买广告； 需求方平台将非竞价广告中需要广告交易平台来实现的对人群进行定制化标签划分工作给接管了，DSP 根据自身的第一方数据（来自DMP)面对市场提供的开放竞价接口，出价采买合适的广告<br><code>DMP (Data Management Platform)</code>：数据管理平台，收集第一方数据，为自身平台收集数据信息<br><code>数据交易平台 (Data Exchange Platform, DEP)</code> 数据交易平台，收集管理交易第三方数 据</p><p>第一方数据：广告主自身的数据<br>第二方数据：广告平台的数据<br>第三方数据：不直接参与广告交易的其他数据提供方的数据</p><p><code>重定向</code>: 针对在广告主网站有过操作的用户，精确投放操作相关的广告，提高转化率；缺点是只能提高ROI，无法获取新用户</p><ol><li>个性化重定向， 类似于站外推荐，依赖根据用户信息的精确推荐引擎，对于电商系统动态库存查询接口也是必要的</li></ol><p><code>新客推荐</code>: 在第一方数据的基础上，依赖第二方数据，针对“对自己的产品可能感兴趣”的用户进行广告投放，针对的是没有关注广告主网站的用户。</p><p><em><em>ADN 和 ADX 的差别在于，ADN将媒体资源分类后打包出售，而 ADX 针对每一次广告展现通过实时竞价的方式，单次售卖每一次广告展现</em></em></p><p><em><em>TD 和 DSP 的差别在于，TD 批量的从ADN 或者媒体采买广告，而 DSP 需要尽可能的估计每一次广告展现带来的期望价值，计算出一个合理的报价，通过实时竞价从ADX 购买广告</em></em></p><p><code>程序化交易(programmatic trade)</code></p><p><code>优选(preferred deals)</code>: 允许单个广告主按照自己的意愿挑选广告</p><p><code>私有交易市场(Private Market Place, PMP)</code>：邀请部分优质广告主，通过竞价方式，进行广告交易</p><p><code>媒介采买平台(media buying Platform)</code></p><p><code>原生广告(Native Advertising)</code>：将广告内容和页面信息尽量做到意向近似或展示形式近似</p><p><code>eCPM(expected Cost per Mille)</code>：千次展现期望收入，点击率和点击价值的乘积, <code>eCPM</code>的基础是对每次广告展现进行点击率预估</p><p><code>广告安全(AD safety)</code>：让合适的广告出现在合适的媒体上</p><p><code>CTR (Click Through Rate)</code>：点击率，广告点击和广告展现的比率</p><p><code>CVR (Conversion Rate)</code>：转化率，转化次数和到达次数的比例</p><pre><code>eCPM =  r(a,u,c) = μ(a,u,c) * v(a,u,c)(a:广告 u:用户 c:环境 r: 总收入 μ:点击率 v:点击价值)</code></pre><p>从上述表达式得出: 当点击价值恒定是，CTR == eCPM<br>eCPM代表DSP的出价，为了快速花完预算，可以将eCPM 预估的高于市场价；为了获得性价比高的流量，将eCPM定位在市场价较低的地方</p><p><em><em>eCPM 一般指的是估计的千次展现收益; RPM 指的是千次展现收入; CPM 是千次展示成本</em></em></p><p>广告结算方式</p><ol><li><code>CPM 结算</code>：按照千次展示结算，供给方和需求方约定好前次展示的计费标准，展示的收益效果由需求方把控</li><li><code>CPC 结算</code>：即按点击结算，供给方（或中间市场）提供点击率数据，需求方估计点击价值，并且通过点击出价的方式向市场通知自己的估价。优点是，供给方通过大量收集用户行为数据可以相对准确的估计点击率；广告主通过分析用户的站内行为数据，对点击价值作出评估。</li><li><code>CPS(Cose per sale)/ CPA(Cost Per Action)/ROI(Return Of Investment) 结算</code>：需求方按照转化收益结算，对需求方来说极大的规避了风险，对供给方来说既要估计点击率又要估计点击价值；在一些场景中供给方无法准确估计点击价值，该结算方式要求供给方能够较准确的估计点击价值或者能借助完善的第三方转化监测估计点击价值。</li><li><code>CPT(Cost per Time)</code>：将某个广告位在某段时间内以独占的方式售卖给广告主，价格由双方约定，无需计量；是品牌广告的不二选择</li></ol><p><code>垂直广告网络(vertical ad network)</code>：特定主题的广告网络，适用<code>CPS(Cose per sale)/ CPA(Cost Per Action)/ROI(Return Of Investment) 结算</code></p><p><code>合约广告产品</code>: 按照时段售卖的CPT 广告和按照约定展示量售卖的CPM广告<br><code>竞价广告产品</code>: 主要是搜索广告</p><p><code>流量预测</code>: 在担保式投放中，合约中明确约定了投放的量；那么对于供应方系统和广告交易系统来说，精准的<code>流量预测</code>能够让供应方在售卖流量的时候不会因为低估流量而导致流量浪费，也不会因为高估流量导致无法完成合同约定的投放量，总而言之，就是指导媒体方售卖流量；媒体方大多数情况下会和多个广告主之间签订担保投放合同，当一次广告展示符合多个合约的要求，如何决策分配给那个合约能达到整体满足所有合约的目的？在线分配强依赖于<code>流量预测</code>的结果，提高在线分配的效率和准确性；而在竞价广告中供应方不在担保投放量，此时需要广告主根据自己估计的流量预估出价；</p><p><code>流量塑形(traffic shaping)</code>: 在有些情况下我们需要主动地影响流量，如修改首页链接入口（待续！）</p><p><code>在线分配</code>: 在担保式投放中，多个合约覆盖的人群可能有……待续</p><p><code>位置拍卖</code>: 针对一次展现的一组广告位，按照其经验价值排名，在某次广告请求中去除前S个高出价的广告一次放到排序号的S个广告位上，此时可以假设点击率仅与位置s有关，点击价值仅与广告a有关</p><p><code>第二高价</code>: 在一个广告位的多轮竞价中，广告主会倾向于逐步降低自己的出价，降到比第二高价高一点点即可成为最高价，为了避免这一现象，我们按照竞价对垒中的第二高价进行收费，此时广告主A出价1元，广告主B出价2元时，广告主A没有降价的动力，广告主B如果降价可能会比广告主A更低，而且降价后加个不会低于1元，保证了市场的收益。<br><code>广义第二高价(GSP， Generalized Second Price)</code>: 将<code>第二高价</code>推广到一系列广告位的竞拍中，对赢得每个位置的广告主，都按照他的下一位的广告位置出价来收取费用。</p><p><code>VCG定价</code>: 对于赢得了某个位置的广告主，其所付出的成本应该等于他占据的位置给其他市场参与者带来的价值损害。</p><p><code>市场保留价(MRP, Market Reserve Price)</code>:对拍的一个广告位的最低价格，当竞争充分、广告主深度足够时，MRP可以设置的比较高；针对不同流量可以设置不同的MRP。</p><p><code>价格挤压</code><br>    r = μ^k * bid(cpc)<br>    k：一个大于0的实数，当k接近正无穷的时候，价格r只与点击率有关；当k接近于0的时候，价格只与cpc出价有关，称为<code>价格挤压因子</code></p><p><code>单位流量变现能力(Revenue per Mille, RMP)</code>: 中小媒体没有优秀的品牌价值，无法销售优质品牌溢价广告，只能重点关注单位流量的变现能努力</p><blockquote><p><code>广告投放引擎</code>: 实时响应广告请求，并决策广告的投放，并且从全局优化的角度管理整体收益；采用的还是类搜索架构（检索+排序）</p><blockquote><p><code>广告投放机</code>: 结合<code>广告投放引擎</code>的其他模块，接受广告前端web服务器发送来的请求，完成广告投放决策并返回最后页面片段的主逻辑</p></blockquote><blockquote><p><code>广告检索</code>: 在线时根据<code>用户标签</code>和<code>页面标签</code>从<code>广告索引</code>中查找符合条件的广告候选，送入<code>广告排序</code>模块</p></blockquote><blockquote><p><code>广告排序</code>: 结合离线特征（<code>CTR模型和特征</code>）和在线特征（<code>实时点击率特征</code>）预估点击率，实时计算出eCPM，并按此排序</p></blockquote><blockquote><p><code>收益管理</code>: 将部分<code>广告排序</code>的结果进一步调整，尽量调整到全局收益最优</p></blockquote><blockquote><p><code>广告请求接口</code>: 接受广告请求，并且将决策好的广告返回给媒体</p></blockquote><blockquote><p><code>定制化用户划分</code>: 根据广告主的逻辑来划分用户群；从广告主处收集用户信息和产品接口，数据经过复杂的加工之后，通过 <code>数据高速公路</code>导入<code>受众定向</code>模块</p></blockquote><p><code>离线数据处理平台</code>: 生成报表；通过数据挖掘、机器学习进行受众定向、点击率评估、分配策略规划</p><blockquote><p><code>用户会话日志生成</code>: 从各个渠道收集到的日志（点击日志等）先整理成已维护ID为键的统一存储格式。</p></blockquote><blockquote><p><code>行为定向</code>: 根据日志中的行为给用户打上<code>结构化标签库</code>中的某些标签，并将结果存储在用户标签的在线缓存中，供广告投放机使用</p></blockquote><blockquote><p><code>上下文定向</code>: 结合<code>半在线页面抓取</code>和上下文页面标签的缓存，与行为定向互相配合，给上下文页面打上标签，并将结果存储到<code>页面标签</code>的在线缓存中，供广告投放机使用</p></blockquote><blockquote><p><code>点击率建模</code>: 在<code>分布式计算平台</code>上训练得到点击率的模型参数和相应特征，加载到缓存中供线上投放系统决策时使用</p></blockquote><blockquote><p><code>分配规划</code>: 根据广告系统全局优化的具体要求，利用离线日志数据进行规划，得到适合线上执行<code>分配方案</code></p></blockquote><blockquote><p><code>商业智能</code>:</p></blockquote></blockquote><p><code>广告排期系统</code>: 一般技术方案是将广告素材按预先确定的排期直接插入媒体页面，并通过<code>内容分发网络(Content Delivery Network CDN)</code>加速访问</p><p><code>奇异值分析</code><br><code>潜在语义分析</code></p>]]></content>
      
      <categories>
          
          <category> 计算广告 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算广告 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mysql常用指令</title>
      <link href="/2017/05/22/%E6%8A%80%E6%9C%AF/mysql/2017-05-22-mysql%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
      <url>/2017/05/22/%E6%8A%80%E6%9C%AF/mysql/2017-05-22-mysql%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h3 id="执行-sql-文件"><a href="#执行-sql-文件" class="headerlink" title="执行 .sql 文件"></a>执行 <code>.sql</code> 文件</h3><p><em>方法1</em></p><pre><code>mysql -h1.1.1.1 -P3306 -uadmin -ppwd db_name &lt; test.sql</code></pre><p><em>方法2</em></p><ol><li>使用 <code>mysql-client</code> 登录到 mysql 服务器</li><li>source /root/path/to/.sql</li></ol><h3 id="mysql-查看-binlog"><a href="#mysql-查看-binlog" class="headerlink" title="mysql 查看 binlog"></a>mysql 查看 binlog</h3><p><code>mysql</code> 提供了 <code>mysqlbinlog</code> 指令，用于查看binlog</p><p>先来一个小例子, 查看某一段时间的 bin log</p><pre><code>mysqlbinlog -h[host]  -P[port] -u[username] -p[password] --read-from-remote-server [binlog file name]--base64-output=decode-rows --start-datetime=&apos;2017-11-02 00:00:00&apos;--stop-datetime=&apos;2017-11-02 00:10:00&apos;</code></pre><p>看了上面这个小例子，发现一个小问题: <em><em>binlog file name 从哪来？</em></em><br>这个需要我们去mysql中去查看</p><pre><code>mysql&gt; mysql -u[username] -p[password]    ## 登录mysqlmysql&gt; show variables like &apos;log_bin&apos;;+---------------+-------+| Variable_name | Value |+---------------+-------+| log_bin       | OFF   | # 这个参数说明当前mysql 没有开启binlog 日志+---------------+-------+</code></pre><p>这里又引入一个问题: <em><em>如何开启 mysql 的 binlog</em></em></p><p>在 <code>mysql</code> 的 <code>官方文档</code> 中，对于 <code>binlog</code> 的开启只有一段内容</p><pre><code>Binary logging is enabled by default (the log_bin system variable is set to ON). The exception is if you use mysqld to initialize the data directory manually by invoking it with the --initialize or --initialize-insecure option, when binary logging is disabled by default, but can be enabled by specifying the --log-bin option.二进制日志是默认启用（系统变量log_bin默认设置为ON）。唯一的例外是如果你使用mysqld来初始化数据目录手动调用它的 --initialize 或 --initialize-insecure 选项，当二进制日志默认是禁用的，但可以通过指定 `--log-bin` 选项启用。</code></pre><p>我们开始设置 <code>mysql</code> 的启动配置， 这里有两种方式</p><ol><li><p>直接在启动命令行中添加参数</p><pre><code>sudo /usr/local/mysql/bin/mysqld --basedir=/usr/local/mysql --log-bin=mysql-bin --user=\_mysql</code></pre></li><li><p>在 mysql 配置文件中增加配置信息<br>这个时候我们遇到一个问题: Mysql 的配置文件在哪？</p><pre><code>&gt; sudo mysqld --verbose --help | grep -A2 &quot;Default options are read from the following files in the given order:&quot;Default options are read from the following files in the given order:/etc/my.cnf /etc/mysql/my.cnf /usr/local/mysql/etc/my.cnf ~/.my.cnf</code></pre></li></ol><p>从上面可以看到 <code>mysql</code> 的配置文件如下：</p><pre><code>/etc/my.cnf /etc/mysql/my.cnf /usr/local/mysql/etc/my.cnf ~/.my.cnf</code></pre><p>在 <code>/etc/my.cnf</code> 添加配置如下</p><pre><code>[mysqld]basedir=/usr/local/mysqldatadir=/usr/local/mysql/dataplugin-dir=/usr/local/mysql/lib/pluginuser=\_mysqllog-bin=mysql-binport=3306</code></pre><p>我们来尝试启动 <code>mysql</code>，但是却没能启动成功， 报错信息如下</p><pre><code>[ERROR] You have enabled the binary log, but you haven&apos;t provided the mandatory server-id. Please refer to the proper server start-up parameters documentation</code></pre><p>遇到问题，我们再去看看官方文档，在官方文档中有如下介绍，在 mysql 5.7 及以上版本中，需要设置参数 <code>server-id</code></p><pre><code>In MySQL 5.7, a server ID had to be specified when binary logging was enabled, or the server would not start. The server_id system variable is set to 1 by default. The server can be started with this default ID when binary logging is enabled, but a warning message is issued if you do not specify a server ID explicitly using the --server-id option. For servers that are used in a replication topology, you must specify a unique non-zero server ID for each server.在MySQL 5.7中，当启用二进制日志时，必须指定服务器ID，否则服务器将无法启动。系统变量 server_id 默认设置为1。当启用二进制日志记录时，服务器可以以这个默认ID启动，但如果未显式使用服务器ID选项指定服务器ID，则会发出警告消息。对于复制拓扑中使用的服务器，必须为每个服务器指定唯一的非零服务器ID。</code></pre><p>将 <code>/etc/my.cnf</code> 配置修改如下：</p><pre><code>[mysqld]basedir=/usr/local/mysqldatadir=/usr/local/mysql/dataplugin-dir=/usr/local/mysql/lib/pluginuser=\_mysqllog-bin=mysql-binport=3306server-id=1</code></pre><p>再次启动mysql，成功了！但是有个问题，mysql 的日志直接输出在控制台中，需要输出到指定文件夹中，在 <code>/etc/my.cnf</code> 的 <code>[mysqld]</code> 中增加配置</p><pre><code>log-error=/usr/local/mysql/data/local.err</code></pre><p>我们开启了binlog之后，可以使用 <code>mysqlbinlog</code> 来查看binlog了！<br>回到第一个问题 <em><em>binlog file name 从哪来？</em></em></p><pre><code>mysql&gt; show master status;+------------------+-----------+--------------+------------------+-------------------------------------------------+| File             | Position  | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set                               |+------------------+-----------+--------------+------------------+-------------------------------------------------+| mysql-bin.000065 | 516819919 |              |                  | 63c58e9d-e063-11e6-8a0e-6c92bf324c90:1-19804498 |+------------------+-----------+--------------+------------------+-------------------------------------------------+1 row in set (0.00 sec)</code></pre><p>这里第一列就是 binlog 日志文件的名称了！</p><pre><code>mysqlbinlog-?, --help          Display this help and exit.                    查看帮助信息--base64-output=name                    Determine when the output statements should be                    base64-encoded BINLOG statements: &apos;never&apos; disables it and                    works only for binlogs without row-based events;                    &apos;decode-rows&apos; decodes row events into commented                    pseudo-SQL statements if the --verbose option is also                    given; &apos;auto&apos; prints base64 only when necessary (i.e.,                    for row-based events and format description events).  If                    no --base64-output[=name] option is given at all, the                    default is &apos;auto&apos;.--bind-address=name IP address to bind to.--character-sets-dir=name                    Directory for character set files.-d, --database=name 指明查询binlog 的数据库，如：-dtest，查看test 数据库--rewrite-db=name   Rewrite the row event to point so that it can be applied                    to a new database-#, --debug[=#]     This is a non-debug version. Catch this and exit.--debug-check       This is a non-debug version. Catch this and exit.--debug-info        This is a non-debug version. Catch this and exit.--default-auth=name Default authentication client-side plugin to use.-D, --disable-log-bin                    Disable binary log. This is useful, if you enabled                    --to-last-log and are sending the output to the same                    MySQL server. This way you could avoid an endless loop.                    You would also like to use it when restoring after a                    crash to avoid duplication of the statements you already                    have. NOTE: you will need a SUPER privilege to use this                    option.-F, --force-if-open Force if binlog was not closed properly.                    (Defaults to on; use --skip-force-if-open to disable.)-f, --force-read    Force reading unknown binlog events.-H, --hexdump       Augment output with hexadecimal and ASCII event dump.-h, --host=name     Get the binlog from server.-i, --idempotent    Notify the server to use idempotent mode before applying                    Row Events-l, --local-load=name                    Prepare local temporary files for LOAD DATA INFILE in the                    specified directory.-o, --offset=#      Skip the first N entries.-p, --password[=name]                    Password to connect to remote server.--plugin-dir=name   Directory for client-side plugins.-P, --port=#        Port number to use for connection or 0 for default to, in                    order of preference, my.cnf, $MYSQL_TCP_PORT,                    /etc/services, built-in default (3306).--protocol=name     The protocol to use for connection (tcp, socket, pipe,                    memory).-R, --read-from-remote-server                    Read binary logs from a MySQL server. This is an alias                    for read-from-remote-master=BINLOG-DUMP-NON-GTIDS.--read-from-remote-master=name                    Read binary logs from a MySQL server through the                    COM_BINLOG_DUMP or COM_BINLOG_DUMP_GTID commands by                    setting the option to either BINLOG-DUMP-NON-GTIDS or                    BINLOG-DUMP-GTIDS, respectively. If                    --read-from-remote-master=BINLOG-DUMP-GTIDS is combined                    with --exclude-gtids, transactions can be filtered out on                    the master avoiding unnecessary network traffic.--raw               Requires -R. Output raw binlog data instead of SQL                    statements, output is to log files.-r, --result-file=name                    Direct output to a given file. With --raw this is a                    prefix for the file names.--secure-auth       Refuse client connecting to server if it uses old                    (pre-4.1.1) protocol. Deprecated. Always TRUE--server-id=#       Extract only binlog entries created by the server having                    the given id.--server-id-bits=#  Set number of significant bits in server-id--set-charset=name  Add &apos;SET NAMES character_set&apos; to the output.-s, --short-form    Just show regular queries: no extra info and no row-based                    events. This is for testing only, and should not be used                    in production systems. If you want to suppress                    base64-output, consider using --base64-output=never                    instead.-S, --socket=name   The socket file to use for connection.--ssl-mode=name     SSL connection mode.--ssl               Deprecated. Use --ssl-mode instead.                    (Defaults to on; use --skip-ssl to disable.)--ssl-verify-server-cert                    Deprecated. Use --ssl-mode=VERIFY_IDENTITY instead.--ssl-ca=name       CA file in PEM format.--ssl-capath=name   CA directory.--ssl-cert=name     X509 cert in PEM format.--ssl-cipher=name   SSL cipher to use.--ssl-key=name      X509 key in PEM format.--ssl-crl=name      Certificate revocation list.--ssl-crlpath=name  Certificate revocation list path.--tls-version=name  TLS version to use, permitted values are: TLSv1, TLSv1.1--start-datetime=name                    Start reading the binlog at first event having a datetime                    equal or posterior to the argument; the argument must be                    a date and time in the local time zone, in any format                    accepted by the MySQL server for DATETIME and TIMESTAMP                    types, for example: 2004-12-25 11:25:56 (you should                    probably use quotes for your shell to set it properly).-j, --start-position=#                    Start reading the binlog at position N. Applies to the                    first binlog passed on the command line.--stop-datetime=name                    Stop reading the binlog at first event having a datetime                    equal or posterior to the argument; the argument must be                    a date and time in the local time zone, in any format                    accepted by the MySQL server for DATETIME and TIMESTAMP                    types, for example: 2004-12-25 11:25:56 (you should                    probably use quotes for your shell to set it properly).--stop-never        Wait for more data from the server instead of stopping at                    the end of the last log. Implicitly sets --to-last-log                    but instead of stopping at the end of the last log it                    continues to wait till the server disconnects.--stop-never-slave-server-id=#                    The slave server_id used for --read-from-remote-server                    --stop-never. This option cannot be used together with                    connection-server-id.--connection-server-id=#                    The slave server_id used for --read-from-remote-server.                    This option cannot be used together with                    stop-never-slave-server-id.--stop-position=#   Stop reading the binlog at position N. Applies to the                    last binlog passed on the command line.-t, --to-last-log   Requires -R. Will not stop at the end of the requested                    binlog but rather continue printing until the end of the                    last binlog of the MySQL server. If you send the output                    to the same MySQL server, that may lead to an endless                    loop.-u, --user=name     链接数据库的用户名-v, --verbose       Reconstruct pseudo-SQL statements out of row events. -v                    -v adds comments on column data types.-V, --version       查看 `mysqlbinlog` 版本信息--open-files-limit=#                    Used to reserve file descriptors for use by this program.-c, --verify-binlog-checksum                    Verify checksum binlog events.--binlog-row-event-max-size=#                    The maximum size of a row-based binary log event in                    bytes. Rows will be grouped into events smaller than this                    size if possible. This value must be a multiple of 256.--skip-gtids        Do not preserve Global Transaction Identifiers; instead                    make the server execute the transactions as if they were                    new.--include-gtids=name                    打印binlog 信息时，只打印指定的部分全局事务id对应的binglog 信息--exclude-gtids=name                    打印binlog 信息时，排除部分全局事务id对应的binglog 信息</code></pre><h4 id="待解决问题"><a href="#待解决问题" class="headerlink" title="待解决问题"></a>待解决问题</h4><p>如果在 mac os 的设置中启动了mysql 而且勾选了 <code>Automatically Start MySQL Server on Startup</code>, 当你想要关闭 mysql 的时候，mysql 会自动重启！！！<br>这个问题找了好久才发现，至于这个不断重启功能的实现待研究…</p><h3 id="mysql-查看存储过程"><a href="#mysql-查看存储过程" class="headerlink" title="mysql 查看存储过程"></a>mysql 查看存储过程</h3><h4 id="查看存储过程状态"><a href="#查看存储过程状态" class="headerlink" title="查看存储过程状态"></a>查看存储过程状态</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">procedure</span> <span class="keyword">status</span>;</span><br></pre></td></tr></table></figure><p>输出结果：</p><pre><code>mysql&gt; show procedure status\G*************************** 1. row ***************************              Db: db_name            Name: procedure_name            Type: PROCEDURE         Definer: root@localhost        Modified: 2017-05-10 14:10:00         Created: 2017-05-10 14:10:00   Security_type: DEFINER         Comment:character_set_client: utf8mb4collation_connection: utf8mb4_general_ciDatabase Collation: utf8_general_ci1 row in set (0.02 sec)</code></pre><h4 id="查看存储过程具体定义"><a href="#查看存储过程具体定义" class="headerlink" title="查看存储过程具体定义"></a>查看存储过程具体定义</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">procedure</span> %procedure_name%;</span><br></pre></td></tr></table></figure><h4 id="删除存储过程"><a href="#删除存储过程" class="headerlink" title="删除存储过程"></a>删除存储过程</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> &#123;<span class="keyword">PROCEDURE</span> | <span class="keyword">FUNCTION</span>&#125; [<span class="keyword">IF</span> <span class="keyword">EXISTS</span>] sp_name</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>如何正确的创建 prototype 类型的 bean</title>
      <link href="/2017/03/01/%E6%8A%80%E6%9C%AF/spring/2017-03-01-Spring%E4%BD%BF%E7%94%A8%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2017/03/01/%E6%8A%80%E6%9C%AF/spring/2017-03-01-Spring%E4%BD%BF%E7%94%A8%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>这里把使用 <code>Spring</code> 过程中遇到的问题做个记录，有些给出了解决方案，有些没有，欢迎同道读者斧正！</p><h2 id="如何正确的创建-prototype-类型的-Spring-bean"><a href="#如何正确的创建-prototype-类型的-Spring-bean" class="headerlink" title="如何正确的创建 prototype 类型的 Spring bean"></a>如何正确的创建 <code>prototype</code> 类型的 <code>Spring bean</code></h2><p>这里先尝试的去创建一个 <code>prototype</code> 的 <code>bean</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Scope</span>(ConfigurableBeanFactory.SCOPE_PROTOTYPE)</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProtoTypeComponent</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass());</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> random;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">ProtoTypeComponent</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// random 值设置为一个随机值，</span></span><br><span class="line">    <span class="keyword">this</span>.random = ThreadLocalRandom.current().nextInt(<span class="number">100000</span>);</span><br><span class="line">    LOGGER.info(<span class="string">"create a new ProtoTypeComponent with random:&#123;&#125;"</span>, random);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getRandom</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> random;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，我们在Controller 中注入这个 <code>prototype bean</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Resource</span></span><br><span class="line">  <span class="keyword">private</span> ProtoTypeComponent protoTypeComponent;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@RequestMapping</span>(value = <span class="string">"/hello"</span>)</span><br><span class="line">  <span class="meta">@ResponseBody</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Object <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"&#123;\"class\": \""</span> + protoTypeComponent + <span class="string">"\", \"random\":\""</span></span><br><span class="line">        + protoTypeComponent.getRandom() + <span class="string">"\"&#125;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后我们开始请求这个 http 接口</p><p><img src="/assets/picture/prototypebeaninfo.png" alt="" title="请求上方 /hello 接口获取 prototype bean 信息"></p><p>不断的刷新页面，返回的结果都是一模一样！我们再来看看日志</p><p><img src="/assets/picture/prototypecomponent.png" alt="" title="请求上方 /hello 接口时的日志信息"></p><p>从上面的日志上我们看到这个 <code>prototype bean</code> 的构造方法只被调用了一次！</p><p>到这里，我感到奇怪了，为什么这个 <code>prototype bean</code> 成了 <code>singleton bean</code> 了？</p><p>这个时候我想了 《Spring揭秘》 中看到的正解， 之前这个现象出现的原因是 <code>HelloController</code> 是 <code>singleton</code> 类型的，这个 <code>bean</code> 只会被初始化一次， 而 <code>HelloController</code> 依赖的 <code>ProtoTypeComponent</code> 也只会被注入一次！<br>到这里，谜底揭晓：</p><p><em><code>singleton bean</code> 依赖的 <code>prototype bean</code> 会 “变成” <code>singleton bean</code></em></p><p>这里，解决这个问题的第一个方案也出现了：</p><h6 id="依赖-prototype-bean-也必须是-prototype-bean"><a href="#依赖-prototype-bean-也必须是-prototype-bean" class="headerlink" title="依赖 prototype bean 也必须是 prototype bean"></a>依赖 <code>prototype bean</code> 也必须是 <code>prototype bean</code></h6><p>很明显这个方案不能解决很多状况， 我们继续这个问题</p><p>再来翻翻 <code>《Spring 揭秘》</code> 找找答案<br>我们看到了两个答案</p><ol><li>使用方法注入</li><li>继承 ApplicationContextAware 每次去获取bean</li></ol><h5 id="使用方法注入"><a href="#使用方法注入" class="headerlink" title="使用方法注入"></a>使用方法注入</h5><p>在传统的 xml 配置方式中我们需要这样配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"protoTypeBean"</span> <span class="attr">class</span>=<span class="string">"...impl.ProtoTypeService"</span> <span class="attr">singleton</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span> = <span class="string">"...impl.SimpleServiceImpl"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">lookup-method</span> <span class="attr">name</span>=<span class="string">"getProtoTypeBean"</span> <span class="attr">bean</span>=<span class="string">"protoTypeBean"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>getProtoTypeBean 方法定义如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> ProtoTypeService protoTypeBean;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> ProtoTypeService <span class="title">getProtoTypeBean</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> protoTypeBean;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在我们更倾向于使用注解，那么基于注解怎么实现上面这种方式呢？<br>我们这里引入 <code>@Lookup</code> 注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * An annotation that indicates 'lookup' methods, to be overridden by the container</span></span><br><span class="line"><span class="comment"> * to redirect them back to the &#123;<span class="doctag">@link</span> org.springframework.beans.factory.BeanFactory&#125;</span></span><br><span class="line"><span class="comment"> * for a &#123;<span class="doctag">@code</span> getBean&#125; call. This is essentially an annotation-based version of the</span></span><br><span class="line"><span class="comment"> * XML &#123;<span class="doctag">@code</span> lookup-method&#125; attribute, resulting in the same runtime arrangement.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;The resolution of the target bean can either be based on the return type</span></span><br><span class="line"><span class="comment"> * (&#123;<span class="doctag">@code</span> getBean(Class)&#125;) or on a suggested bean name (&#123;<span class="doctag">@code</span> getBean(String)&#125;),</span></span><br><span class="line"><span class="comment"> * in both cases passing the method's arguments to the &#123;<span class="doctag">@code</span> getBean&#125; call</span></span><br><span class="line"><span class="comment"> * for applying them as target factory method arguments or constructor arguments.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Such lookup methods can have default (stub) implementations that will simply</span></span><br><span class="line"><span class="comment"> * get replaced by the container, or they can be declared as abstract - for the</span></span><br><span class="line"><span class="comment"> * container to fill them in at runtime. In both cases, the container will generate</span></span><br><span class="line"><span class="comment"> * runtime subclasses of the method's containing class via CGLIB, which is why such</span></span><br><span class="line"><span class="comment"> * lookup methods can only work on beans that the container instantiates through</span></span><br><span class="line"><span class="comment"> * regular constructors: i.e. lookup methods cannot get replaced on beans returned</span></span><br><span class="line"><span class="comment"> * from factory methods where we cannot dynamically provide a subclass for them.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;&lt;b&gt;Concrete limitations in typical Spring configuration scenarios:&lt;/b&gt;</span></span><br><span class="line"><span class="comment"> * When used with component scanning or any other mechanism that filters out abstract</span></span><br><span class="line"><span class="comment"> * beans, provide stub implementations of your lookup methods to be able to declare</span></span><br><span class="line"><span class="comment"> * them as concrete classes. And please remember that lookup methods won't work on</span></span><br><span class="line"><span class="comment"> * beans returned from &#123;<span class="doctag">@code</span> <span class="doctag">@Bean</span>&#125; methods in configuration classes; you'll have</span></span><br><span class="line"><span class="comment"> * to resort to &#123;<span class="doctag">@code</span> <span class="doctag">@Inject</span> Provider&amp;lt;TargetBean&amp;gt;&#125; or the like instead.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Juergen Hoeller</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 4.1</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> org.springframework.beans.factory.BeanFactory#getBean(Class, Object...)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> org.springframework.beans.factory.BeanFactory#getBean(String, Object...)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target</span>(ElementType.METHOD)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Lookup &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This annotation attribute may suggest a target bean name to look up.</span></span><br><span class="line"><span class="comment"> * If not specified, the target bean will be resolved based on the</span></span><br><span class="line"><span class="comment"> * annotated method's return type declaration.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">String <span class="title">value</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br></pre></td></tr></table></figure><p>从上面的代码能看出：<br>这个注解只能修饰方法，根据方法的返回值类型创建对应的Bean，底层机制是调用 <code>org.springframework.beans.factory.BeanFactory#getBean(Class, Object...)</code> 或 <code>org.springframework.beans.factory.BeanFactory#getBean(String, Object...)</code></p><p>先来使用 <code>@Lookup</code> 注解改成一下我们尝试创建 有状态的 <code>prototype bean</code></p><p>修正的代码如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass());</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> ProtoTypeComponent protoTypeComponent;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@RequestMapping</span>(value = <span class="string">"/hello"</span>)</span><br><span class="line">  <span class="meta">@ResponseBody</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Object <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ProtoTypeComponent component = getProtoTypeComponent();</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"&#123;\"class\": \""</span> + component + <span class="string">"\", \"random\":\""</span></span><br><span class="line">        + component.getRandom() + <span class="string">"\"&#125;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Lookup</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> ProtoTypeComponent <span class="title">getProtoTypeComponent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> protoTypeComponent;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>让我们运行起 <code>tomcat</code> 看看结果：</p><p><img src="/assets/picture/realProtoTypeComponent1.png" alt=""><br><img src="/assets/picture/realProtoTypeComponent2.png" alt=""></p><p>很明显，我们成功的创建了 <code>prototype bean</code>!</p><h5 id="继承-ApplicationContextAware-每次去获取bean"><a href="#继承-ApplicationContextAware-每次去获取bean" class="headerlink" title="继承 ApplicationContextAware 每次去获取bean"></a>继承 ApplicationContextAware 每次去获取bean</h5><p>这里不推荐使用 <code>ApplicationContextAware</code> 所以不给出方法了。</p>]]></content>
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Maven 常用插件</title>
      <link href="/2017/02/23/%E6%8A%80%E6%9C%AF/maven/2017-02-23-maven%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/"/>
      <url>/2017/02/23/%E6%8A%80%E6%9C%AF/maven/2017-02-23-maven%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/</url>
      <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.basepom.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>duplicate-finder-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">useDefaultResourceIgnoreList</span>&gt;</span>true<span class="tag">&lt;/<span class="name">useDefaultResourceIgnoreList</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 忽略不检查的资源 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">ignoredResourcePatterns</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">ignoredResourcePattern</span>&gt;</span>.*\.txt<span class="tag">&lt;/<span class="name">ignoredResourcePattern</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">ignoredResourcePattern</span>&gt;</span>.*\.properties<span class="tag">&lt;/<span class="name">ignoredResourcePattern</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">ignoredResourcePattern</span>&gt;</span>.*\.xml<span class="tag">&lt;/<span class="name">ignoredResourcePattern</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">ignoredResourcePatterns</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- fail fast after find duplicate class --&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--&lt;failBuildInCaseOfConflict&gt;true&lt;/failBuildInCaseOfConflict&gt;--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">ignoredDependencies</span>&gt;</span></span><br><span class="line">           <span class="comment">&lt;!-- 不需要校验的依赖项 --&gt;</span></span><br><span class="line">           <span class="comment">&lt;!--&lt;dependency&gt;--&gt;</span></span><br><span class="line">               <span class="comment">&lt;!--&lt;groupId&gt;com.sm.uc&lt;/groupId&gt;--&gt;</span></span><br><span class="line">               <span class="comment">&lt;!--&lt;artifactId&gt;uc-rpc&lt;/artifactId&gt;--&gt;</span></span><br><span class="line">           <span class="comment">&lt;!--&lt;/dependency&gt;--&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">ignoredDependencies</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">goal</span>&gt;</span>check<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Maven-Release-plugin"><a href="#Maven-Release-plugin" class="headerlink" title="Maven Release plugin"></a>Maven Release plugin</h4><h5 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line">  <span class="tag">&lt;<span class="name">scm</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">developerConnection</span>&gt;</span>scm:svn:https://svn.mycompany.com/repos/myapplication/trunk/mycomponent/<span class="tag">&lt;/<span class="name">developerConnection</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- developerConnection:  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">scm</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-release-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>Goal</th><th>Description</th></tr></thead><tbody><tr><td>release:branch</td><td>Branch a project in SCM, using the same steps as the release:prepare goal, creating a branch instead of a tag. For more info see <a href="http://maven.apache.org/plugins/maven-release-plugin/examples/branch.html" target="_blank" rel="noopener">http://maven.apache.org/plugins/maven-release-plugin/examples/branch.html</a>.</td></tr><tr><td>release:clean</td><td>Clean up after a release preparation. This is done automatically after a successful release:perform, so is best served for cleaning up a failed or abandoned release, or a dry run. Note that only the working copy is cleaned up, no previous steps are rolled back. For more info see <a href="http://maven.apache.org/plugins/maven-release-plugin/examples/clean-release.html" target="_blank" rel="noopener">http://maven.apache.org/plugins/maven-release-plugin/examples/clean-release.html</a>.</td></tr><tr><td>release:help</td><td>Display help information on maven-release-plugin. Call mvn release:help -Ddetail=true -Dgoal=<goal-name> to display parameter details.</goal-name></td></tr><tr><td>release:perform</td><td>Perform a release from SCM, either from a specified tag, or the tag representing the previous release in the working copy created by release:prepare. For more info see <a href="http://maven.apache.org/plugins/maven-release-plugin/examples/perform-release.html" target="_blank" rel="noopener">http://maven.apache.org/plugins/maven-release-plugin/examples/perform-release.html</a>.</td></tr><tr><td>release:prepare</td><td>Prepare for a release in SCM. Steps through several phases to ensure the POM is ready to be released and then prepares SCM to eventually contain a tagged version of the release and a record in the local copy of the parameters used. This can be followed by a call to</td></tr><tr><td>release:perform. For more info see <a href="http://maven.apache.org/plugins/maven-release-plugin/examples/prepare-release.html" target="_blank" rel="noopener">http://maven.apache.org/plugins/maven-release-plugin/examples/prepare-release.html</a>.</td></tr><tr><td>release:prepare-with-pom</td><td>Prepare for a release in SCM, fully resolving dependencies for the purpose of producing a “release POM”.</td></tr><tr><td>release:rollback</td><td>Rollback changes made by a previous release. This requires that the previous release descriptor release.properties is still available in the local working copy. For more info see <a href="http://maven.apache.org/plugins/maven-release-plugin/examples/rollback-release.html" target="_blank" rel="noopener">http://maven.apache.org/plugins/maven-release-plugin/examples/rollback-release.html</a>.</td></tr><tr><td>release:stage</td><td>Perform a release from SCM to a staging repository. If no goals are given, these default to deploy or deploy site:stage-deploy, if the project has a <distributionmanagement>/<site> element. If the goals contain site-deploy or site:deploy, these are overridden with site:stage-deploy.</site></distributionmanagement></td></tr><tr><td>release:update-versions</td><td>Update the POM versions for a project. This performs the normal version updates of the release:prepare goal without making other modifications to the SCM such as tagging. For more info see <a href="http://maven.apache.org/plugins/maven-release-plugin/examples/update-versions.html" target="_blank" rel="noopener">http://maven.apache.org/plugins/maven-release-plugin/examples/update-versions.html</a>.</td></tr></tbody></table>]]></content>
      
      <categories>
          
          <category> Maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Maven 继承方式： scope import</title>
      <link href="/2017/02/12/%E6%8A%80%E6%9C%AF/maven/2017-02-12-Maven%20scope%20import/"/>
      <url>/2017/02/12/%E6%8A%80%E6%9C%AF/maven/2017-02-12-Maven%20scope%20import/</url>
      <content type="html"><![CDATA[<h3 id="使用-scope-import-解决Maven-单继承问题"><a href="#使用-scope-import-解决Maven-单继承问题" class="headerlink" title="使用 scope import 解决Maven 单继承问题"></a>使用 <code>scope import</code> 解决Maven 单继承问题</h3><p><code>Maven</code> 本身支持继承，很多时候我们会创建多模块项目，而多个模块会引入相同的依赖项，这个时候我们就能使用 <code>Maven</code> 的父子工程结构，<br>创建一个父 pom 文件，其他子项目中的 pom 文件继承父pom</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>base.parent<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>--&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>parent.management<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样我们就能是的依赖项的管理更加有条理</p><p>但是 <code>Maven</code> 父子项目结构和 Java继承一样，都是单继承，一个子项目只能制定一个父 pom</p><p>很多时候，我们需要打破这种 <code>单继承</code></p><p>例如使用 <code>spring-boot</code> 的时候， 官方推荐的方式是继承父pom <code>spring-boot-starter-parent</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><p>但是如果项目中已经有了其他父pom， 又想用 <code>spring-boot</code> 怎么办呢？</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><p>就是使用 <code>scope import</code>， 还需要指定 <code>type pom</code></p><p><em>注意：<code>scope import</code> 只能在 <code>dependencyManagement</code> 中的使用</em></p>]]></content>
      
      <categories>
          
          <category> Maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Spring Boot 初涉</title>
      <link href="/2017/02/12/%E6%8A%80%E6%9C%AF/spring/2017-02-12-SpringBoot/"/>
      <url>/2017/02/12/%E6%8A%80%E6%9C%AF/spring/2017-02-12-SpringBoot/</url>
      <content type="html"><![CDATA[<h4 id="使用-Maven-构建-Spring-Boot-项目"><a href="#使用-Maven-构建-Spring-Boot-项目" class="headerlink" title="使用 Maven 构建 Spring-Boot 项目"></a>使用 <code>Maven</code> 构建 Spring-Boot 项目</h4><ol><li>继承 父pmo 构建 Spring-Boot 项目</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- ...... the artifactId and groupId of the application --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 继承 spring-boot-starter-parent 使用 spring-boot的最优方法； 也可以不继承这个父pom，使用其他方法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置插件，打包jar包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- ...... the artifactId and groupId of the application --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- Override Spring Data release train provided by Spring Boot --&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.data<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-data-releasetrain<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">version</span>&gt;</span>Fowler-SR2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">              <span class="comment">&lt;!--  --&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">version</span>&gt;</span><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置插件，打包jar包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="dev-tools"><a href="#dev-tools" class="headerlink" title="dev-tools"></a>dev-tools</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 设置插件，打包jar包 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 使用 dev-tools 需要禁用默认的 excludeDevtools --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">excludeDevtools</span>&gt;</span>false<span class="tag">&lt;/<span class="name">excludeDevtools</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p>DevToolsPropertyDefaultsPostProcessor</p>]]></content>
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Spring Boot </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SpringMVC 容器 和 Spring 容器</title>
      <link href="/2017/01/21/%E6%8A%80%E6%9C%AF/spring/2017-01-21-SpringMvc%E5%92%8CSpring%E4%BD%BF%E7%94%A8%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8/"/>
      <url>/2017/01/21/%E6%8A%80%E6%9C%AF/spring/2017-01-21-SpringMvc%E5%92%8CSpring%E4%BD%BF%E7%94%A8%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8/</url>
      <content type="html"><![CDATA[<h5 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h5><p>在使用 <code>Spring MVC</code> 的过程中，遇到一个问题，在 <code>Spring 容器</code> 中注册的属性文件， 在 <code>SpringMVC 容器</code> 中无法用 <code>@Value</code> 标签引入！<br>按理说， <code>SpringMVC 容器</code> 应该能继承父容器中的所有Bean， 为什么不能使用父容器中引入的配置文件信息呢？</p><p><em>很遗憾，这个问题暂时没能找到答案，如果哪位大神能解答，请告知</em></p><p>但是问题还是要解决的， 我们只能换个思路解决。 如果 <code>SpringMVC 子容器</code> 和 <code>Spring 父容器</code> 如果合一了，不就不存在需要重复引入的问题吗？<br>那么问题来了：</p><h3 id="SpringMVC-容器和-Spring-容器能合一吗？"><a href="#SpringMVC-容器和-Spring-容器能合一吗？" class="headerlink" title="SpringMVC 容器和 Spring 容器能合一吗？"></a>SpringMVC 容器和 Spring 容器能合一吗？</h3><p>先来看看一般我们使用 <code>SpringMVC</code> 的 <code>web.xml</code> 配置文件，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE web-app PUBLIC</span><br><span class="line">        &quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span><br><span class="line">        &quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot; &gt;</span><br><span class="line"></span><br><span class="line">&lt;web-app&gt;</span><br><span class="line">    &lt;display-name&gt;Archetype Created Web Application&lt;/display-name&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- spring 父容器配置文件路径 --&gt;</span><br><span class="line">    &lt;context-param&gt;</span><br><span class="line">        &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</span><br><span class="line">        &lt;param-value&gt;classpath:spring/spring-root.xml&lt;/param-value&gt;</span><br><span class="line">    &lt;/context-param&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- listener：加载spring 父容器 --&gt;</span><br><span class="line">    &lt;listener&gt;</span><br><span class="line">        &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;</span><br><span class="line">    &lt;/listener&gt;</span><br><span class="line"></span><br><span class="line">    &lt;servlet&gt;</span><br><span class="line">        &lt;servlet-name&gt;dispatcher&lt;/servlet-name&gt;</span><br><span class="line">        &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;</span><br><span class="line">&lt;!-- spring mvc 子容器配置文件路径，如果不配置默认为 /WEB-INF/*-servlet.xml --&gt;</span><br><span class="line">        &lt;init-param&gt;</span><br><span class="line">            &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</span><br><span class="line">            &lt;param-value&gt;classpath:spring/spring-mvc.xml&lt;/param-value&gt;</span><br><span class="line">        &lt;/init-param&gt;</span><br><span class="line">    &lt;/servlet&gt;</span><br><span class="line"></span><br><span class="line">    &lt;servlet-mapping&gt;</span><br><span class="line">        &lt;servlet-name&gt;dispatcher&lt;/servlet-name&gt;</span><br><span class="line">        &lt;url-pattern&gt;/&lt;/url-pattern&gt;</span><br><span class="line">    &lt;/servlet-mapping&gt;</span><br><span class="line"></span><br><span class="line">    &lt;error-page&gt;</span><br><span class="line">        &lt;error-code&gt;500&lt;/error-code&gt;</span><br><span class="line">        &lt;location&gt;/error.jsp&lt;/location&gt;</span><br><span class="line">    &lt;/error-page&gt;</span><br><span class="line"></span><br><span class="line">&lt;/web-app&gt;</span><br></pre></td></tr></table></figure><p><code>Tomcat</code> 在解析 <code>web.xml</code> 的时候先后加载 <code>listener</code> -&gt; <code>filter</code> -&gt; <code>servlet</code><br>先记载 <code>ContextLoaderListener</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 覆写 `ServletContextListener` 中的 `contextInitialized` 方法，</span></span><br><span class="line"><span class="comment">* 实现时，调用父类的 `initWebApplicationContext` 方法</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextInitialized</span><span class="params">(ServletContextEvent event)</span> </span>&#123;</span><br><span class="line">initWebApplicationContext(event.getServletContext());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> servletContext 当前 web 容器上下文</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> spring 容器上下文</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> #ContextLoader(WebApplicationContext)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> #CONTEXT_CLASS_PARAM</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> #CONFIG_LOCATION_PARAM</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> WebApplicationContext <span class="title">initWebApplicationContext</span><span class="params">(ServletContext servletContext)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (servletContext.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE) != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(</span><br><span class="line"><span class="string">"Cannot initialize context because there is already a root application context present - "</span> +</span><br><span class="line"><span class="string">"check whether you have multiple ContextLoader* definitions in your web.xml!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Log logger = LogFactory.getLog(ContextLoader.class);</span><br><span class="line">servletContext.log(<span class="string">"Initializing Spring root WebApplicationContext"</span>);</span><br><span class="line"><span class="keyword">if</span> (logger.isInfoEnabled()) &#123;</span><br><span class="line">logger.info(<span class="string">"Root WebApplicationContext: initialization started"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> startTime = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 创建一个 WebApplicationContext 实例</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.context == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">this</span>.context = createWebApplicationContext(servletContext);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.context <span class="keyword">instanceof</span> ConfigurableWebApplicationContext) &#123;</span><br><span class="line">ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) <span class="keyword">this</span>.context;</span><br><span class="line"><span class="keyword">if</span> (!cwac.isActive()) &#123;</span><br><span class="line"><span class="comment">// The context has not yet been refreshed -&gt; provide services such as</span></span><br><span class="line"><span class="comment">// setting the parent context, setting the application context id, etc</span></span><br><span class="line"><span class="keyword">if</span> (cwac.getParent() == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="comment">// The context instance was injected without an explicit parent -&gt;</span></span><br><span class="line"><span class="comment">// determine parent for root web application context, if any.</span></span><br><span class="line">ApplicationContext parent = loadParentContext(servletContext);</span><br><span class="line">cwac.setParent(parent);</span><br><span class="line">&#125;</span><br><span class="line">configureAndRefreshWebApplicationContext(cwac, servletContext);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 当前创建的spring 父容器注册到 web 容器中， 属性名称是： org.springframework.web.context.WebApplicationContext.ROOT</span></span><br><span class="line">servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, <span class="keyword">this</span>.context);</span><br><span class="line"></span><br><span class="line">ClassLoader ccl = Thread.currentThread().getContextClassLoader();</span><br><span class="line"><span class="keyword">if</span> (ccl == ContextLoader.class.getClassLoader()) &#123;</span><br><span class="line">currentContext = <span class="keyword">this</span>.context;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ccl != <span class="keyword">null</span>) &#123;</span><br><span class="line">currentContextPerThread.put(ccl, <span class="keyword">this</span>.context);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (logger.isDebugEnabled()) &#123;</span><br><span class="line">logger.debug(<span class="string">"Published root WebApplicationContext as ServletContext attribute with name ["</span> +</span><br><span class="line">WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE + <span class="string">"]"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (logger.isInfoEnabled()) &#123;</span><br><span class="line"><span class="keyword">long</span> elapsedTime = System.currentTimeMillis() - startTime;</span><br><span class="line">logger.info(<span class="string">"Root WebApplicationContext: initialization completed in "</span> + elapsedTime + <span class="string">" ms"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.context;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (RuntimeException ex) &#123;</span><br><span class="line">logger.error(<span class="string">"Context initialization failed"</span>, ex);</span><br><span class="line">servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);</span><br><span class="line"><span class="keyword">throw</span> ex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Error err) &#123;</span><br><span class="line">logger.error(<span class="string">"Context initialization failed"</span>, err);</span><br><span class="line">servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, err);</span><br><span class="line"><span class="keyword">throw</span> err;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>而 <code>DispatcherServlet</code> 继承 <code>FrameworkServlet</code>, <code>FrameworkServlet</code> 继承 <code>HttpServletBean</code><br><code>HttpServletBean</code> 继承 <code>HttpServlet</code>, 并且提供 <code>init</code> 方法</p><p>HttpServletBean 中的 <code>init</code> 方法调用抽象方法 <code>initServletBean</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (logger.isDebugEnabled()) &#123;</span><br><span class="line">logger.debug(<span class="string">"Initializing servlet '"</span> + getServletName() + <span class="string">"'"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ......</span></span><br><span class="line"><span class="comment">// Let subclasses do whatever initialization they like.</span></span><br><span class="line">initServletBean();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (logger.isDebugEnabled()) &#123;</span><br><span class="line">logger.debug(<span class="string">"Servlet '"</span> + getServletName() + <span class="string">"' configured successfully"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>FrameworkServlet</code> 实现 <code>initServletBean</code> 方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">initServletBean</span><span class="params">()</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"><span class="comment">// ...... 忽略</span></span><br><span class="line"><span class="keyword">this</span>.webApplicationContext = initWebApplicationContext();</span><br><span class="line">initFrameworkServlet();</span><br><span class="line"><span class="comment">// ...... 忽略</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> WebApplicationContext <span class="title">initWebApplicationContext</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// 在 web 容器  ServletContext 中查找 属性为 org.springframework.web.context.WebApplicationContext.ROOT 的 WebApplicationContext Spring 父容器</span></span><br><span class="line">WebApplicationContext rootContext =</span><br><span class="line">WebApplicationContextUtils.getWebApplicationContext(getServletContext());</span><br><span class="line">WebApplicationContext wac = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果当前以及创建了  SpringMVC 子容器</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.webApplicationContext != <span class="keyword">null</span>) &#123;</span><br><span class="line">wac = <span class="keyword">this</span>.webApplicationContext;</span><br><span class="line"><span class="keyword">if</span> (wac <span class="keyword">instanceof</span> ConfigurableWebApplicationContext) &#123;</span><br><span class="line"><span class="comment">// 如果 springmvc 子容器是 ConfigurableWebApplicationContext, 并且没有激活，设置 spring 父容器和 springmvc 子容器之前的父子容器关系</span></span><br><span class="line">ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac;</span><br><span class="line"><span class="keyword">if</span> (!cwac.isActive()) &#123;</span><br><span class="line"><span class="keyword">if</span> (cwac.getParent() == <span class="keyword">null</span>) &#123;</span><br><span class="line">cwac.setParent(rootContext);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 配置刷下spring mvc 子容器</span></span><br><span class="line">configureAndRefreshWebApplicationContext(cwac);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 如果当前没有创建 springmvc 子容器</span></span><br><span class="line"><span class="keyword">if</span> (wac == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="comment">// 在 web 容器  ServletContext 中查找 属性为 org.springframework.web.context.WebApplicationContext.ROOT 的 spring 容器， 将这个父容器作为 spring mvc 子容器， 这种情况下， spring mvc 子容器和 spring 父容器就合一了！</span></span><br><span class="line">wac = findWebApplicationContext();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 如果上一步没有在 web 容器  ServletContext 中查找到 属性为 org.springframework.web.context.WebApplicationContext.ROOT 的 WebApplicationContext Spring 容器；创建 contextConfigLocation 设置的配置文件注定的 springmvc 子容器</span></span><br><span class="line"><span class="keyword">if</span> (wac == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="comment">// No context instance is defined for this servlet -&gt; create a local one</span></span><br><span class="line">wac = createWebApplicationContext(rootContext);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...... 忽略</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> wac;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这里，我们找到了 两个容器合一的方法！ 果然是 <code>Time is cheap, show me the code</code>, 源码能告诉我们一切！<br>到这里， 找到了配置方式：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE web-app PUBLIC</span></span><br><span class="line"><span class="meta">        "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"</span></span><br><span class="line"><span class="meta">        "http://java.sun.com/dtd/web-app_2_3.dtd" &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring/spring-root.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- listener --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- spring mvc --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcher<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 该servlet的spring上下文采用WebApplicationContext，不再重复生成上下文 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextAttribute<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>org.springframework.web.context.WebApplicationContext.ROOT<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcher<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p>下面在回头来看看之前没有解决的问题：</p><h3 id="为什么-SpringMVC-子容器-不能继承-Spring-父容器-引入的属性文件"><a href="#为什么-SpringMVC-子容器-不能继承-Spring-父容器-引入的属性文件" class="headerlink" title="为什么 SpringMVC 子容器 不能继承 Spring 父容器 引入的属性文件"></a>为什么 <code>SpringMVC 子容器</code> 不能继承 <code>Spring 父容器</code> 引入的属性文件</h3><p><em>待解决…</em></p>]]></content>
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Spring MVC </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mysql 避免重复插入</title>
      <link href="/2017/01/14/%E6%8A%80%E6%9C%AF/mysql/2017-01-14-mysql%E9%81%BF%E5%85%8D%E9%87%8D%E5%A4%8D%E6%8F%92%E5%85%A5/"/>
      <url>/2017/01/14/%E6%8A%80%E6%9C%AF/mysql/2017-01-14-mysql%E9%81%BF%E5%85%8D%E9%87%8D%E5%A4%8D%E6%8F%92%E5%85%A5/</url>
      <content type="html"><![CDATA[<h3 id="mysql-避免重复插入"><a href="#mysql-避免重复插入" class="headerlink" title="mysql 避免重复插入"></a>mysql 避免重复插入</h3><p><code>mysql</code> 避免重复插入的方式有这样几种</p><ol><li>使用 <code>ignore</code> 关键字</li><li>使用 <code>replace</code> 关键字</li><li>使用 <code>on duplicate key update</code></li></ol><hr><h4 id="使用-ignore-关键字"><a href="#使用-ignore-关键字" class="headerlink" title="使用 ignore 关键字"></a>使用 <code>ignore</code> 关键字</h4><p>当表中存在<code>主键</code>或者<code>唯一索引</code>的时候, 避免重复插入的时候，就可以使用以下命令</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">ignore</span> <span class="keyword">into</span> table_name <span class="keyword">set</span> <span class="keyword">name</span> = ?, <span class="keyword">desc</span> = ?</span><br></pre></td></tr></table></figure><p>当表中已经存在数据的时候，本次 <code>insert</code> 会被忽略</p><p><em>注意：需要注意的是 <code>insert ignore</code> 在忽略某一次插入的时候自增id 还是会增长的，举例如下：</em><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`tb1`</span> (</span><br><span class="line"> <span class="string">`id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line"> <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'名称'</span>,</span><br><span class="line"> <span class="string">`modify_time`</span> <span class="keyword">timestamp</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'2000-01-01 00:00:00'</span> <span class="keyword">COMMENT</span> <span class="string">'修改时间'</span>,</span><br><span class="line"> PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COMMENT</span>=<span class="string">'测试表'</span>;</span><br></pre></td></tr></table></figure></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into tb1 value(1, "name1", now());</span><br><span class="line">Query OK, 1 row affected (0.02 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into tb1 value(1, "name2", now());</span><br><span class="line">ERROR 1062 (23000): Duplicate entry '1' for key 'PRIMARY'</span><br><span class="line">mysql&gt; select * from tb1;</span><br><span class="line">+<span class="comment">----+-------+---------------------+</span></span><br><span class="line">| id | name  | modify_time         |</span><br><span class="line">+<span class="comment">----+-------+---------------------+</span></span><br><span class="line">|  1 | name1 | 2018-07-25 13:35:27 |</span><br><span class="line">+<span class="comment">----+-------+---------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">insert</span> <span class="keyword">ignore</span> <span class="keyword">into</span> tb1 <span class="keyword">value</span>(<span class="number">1</span>, <span class="string">"name2"</span>, <span class="keyword">now</span>());</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.01 sec)</span><br></pre></td></tr></table></figure><hr><h4 id="使用-replace-关键字"><a href="#使用-replace-关键字" class="headerlink" title="使用 replace 关键字"></a>使用 <code>replace</code> 关键字</h4><p>除了 <code>insert ignore</code> 之外还有 <code>replace into</code> 这里也要求表中必须存在 <code>主键</code> 或者 <code>唯一索引</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">replace</span> <span class="keyword">into</span> table_name <span class="keyword">set</span> <span class="keyword">name</span> = <span class="string">'a'</span>, <span class="keyword">desc</span> = <span class="string">'b'</span></span><br></pre></td></tr></table></figure><p>表中 name 必须存在 <code>唯一索引</code> ， 如果表中已经存在 name = ‘a’ 的时候， desc 的值将变更为 ‘b’</p><hr><h4 id="使用-on-duplicate-key-update"><a href="#使用-on-duplicate-key-update" class="headerlink" title="使用 on duplicate key update"></a>使用 <code>on duplicate key update</code></h4><p>当表中存在<code>主键</code>或者<code>唯一索引</code>的时候, 避免重复插入的时候，还可以使用以下命令</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> table_name(uniq_name, <span class="keyword">desc</span>) <span class="keyword">values</span>(<span class="string">'exists_name'</span>, <span class="string">'desc'</span>) <span class="keyword">on</span> <span class="keyword">duplicate</span> <span class="keyword">key</span> <span class="keyword">on</span> <span class="keyword">update</span> <span class="keyword">count</span> = <span class="keyword">count</span>+<span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>上面的语句在避免重复插入的同时，还可以修改某一字段， 如果不需要修改任何字段，请使用一下语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> table_name(uniq_name, <span class="keyword">desc</span>) <span class="keyword">values</span>(<span class="string">'exists_name'</span>, <span class="string">'desc'</span>) <span class="keyword">on</span> <span class="keyword">duplicate</span> <span class="keyword">key</span> <span class="keyword">on</span> <span class="keyword">update</span> <span class="keyword">desc</span> = <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><p>可以说 <code>on duplicate key update</code> 能够实现 <code>insert ignore</code> 和 <code>replace into</code> 的功能！</p>]]></content>
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>protoc 指令介绍</title>
      <link href="/2017/01/01/%E6%8A%80%E6%9C%AF/protobuf/2017-01-01-protoc%E6%8C%87%E4%BB%A4%E4%BB%8B%E7%BB%8D/"/>
      <url>/2017/01/01/%E6%8A%80%E6%9C%AF/protobuf/2017-01-01-protoc%E6%8C%87%E4%BB%A4%E4%BB%8B%E7%BB%8D/</url>
      <content type="html"><![CDATA[<h3 id="protoc-指令介绍"><a href="#protoc-指令介绍" class="headerlink" title="protoc 指令介绍"></a>protoc 指令介绍</h3><p><code>protoc</code> 指令使用示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">protoc [参数] .proto文件路径</span><br></pre></td></tr></table></figure><p>使用 <code>protoc</code> 指令讲 <code>.proto</code> 文件编译成 <code>.java</code> 文件的简单使用如下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">protoc --java_out=./ /path_to_proto_file/Demo.proto</span><br></pre></td></tr></table></figure><p>protoc 指令参数翻译如下</p><h6 id="注意：-protoc-对文件路径不敏感，所有参数中的路径，必须是绝对路径"><a href="#注意：-protoc-对文件路径不敏感，所有参数中的路径，必须是绝对路径" class="headerlink" title="注意： protoc 对文件路径不敏感，所有参数中的路径，必须是绝对路径"></a><em>注意： <code>protoc</code> 对文件路径不敏感，所有参数中的路径，必须是绝对路径</em></h6><hr><p>-I[PATH], –proto_path=[PATH]: 指定 import 修饰符扫描文件夹；可以指定多次，被指定的文件夹将按照先后制定顺序被扫描；如果没有指定，将使用当前文件夹作为扫描文件夹</p><h6 id="注意：-这里的-PATH-必须是绝对路径"><a href="#注意：-这里的-PATH-必须是绝对路径" class="headerlink" title="注意： 这里的[PATH]必须是绝对路径"></a><em>注意： 这里的[PATH]必须是绝对路径</em></h6><hr><p>–version: 查看 protoc 指令版本</p><hr><p>-h, –help: 查看帮助文档</p><hr><p>–encode=MESSAGE_TYPE</p><hr><p>–decode=MESSAGE_TYPE</p><p>–decode_raw</p><p>-o[FILE], –descriptor_set_out=[FILE]</p><p>–include_imports</p><p>–include_source_info</p><p>–error_format</p><hr><p>–java_out=[PATH]: 指定生成的java文件的输出文件夹</p><p><em>注意 <code>.proto</code> 文件中如果指定了 java_package， 会在输出文件夹中创建java 的package</em></p><hr><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ : ✗ protoc -h</span><br><span class="line">Usage: protoc [OPTION] PROTO_FILES</span><br><span class="line">Parse PROTO_FILES and generate output based on the options given:</span><br><span class="line">  -IPATH, --proto_path=PATH   Specify the directory in which to search for</span><br><span class="line">                              imports.  May be specified multiple times;</span><br><span class="line">                              directories will be searched in order.  If not</span><br><span class="line">                              given, the current working directory is used.</span><br><span class="line">  --version                   Show version info and exit.</span><br><span class="line">  -h, --help                  Show this text and exit.</span><br><span class="line">  --encode=MESSAGE_TYPE       Read a text-format message of the given type</span><br><span class="line">                              from standard input and write it in binary</span><br><span class="line">                              to standard output.  The message type must</span><br><span class="line">                              be defined in PROTO_FILES or their imports.</span><br><span class="line">  --decode=MESSAGE_TYPE       Read a binary message of the given type from</span><br><span class="line">                              standard input and write it in text format</span><br><span class="line">                              to standard output.  The message type must</span><br><span class="line">                              be defined in PROTO_FILES or their imports.</span><br><span class="line">  --decode_raw                Read an arbitrary protocol message from</span><br><span class="line">                              standard input and write the raw tag/value</span><br><span class="line">                              pairs in text format to standard output.  No</span><br><span class="line">                              PROTO_FILES should be given when using this</span><br><span class="line">                              flag.</span><br><span class="line">  -oFILE,                     Writes a FileDescriptorSet (a protocol buffer,</span><br><span class="line">    --descriptor_set_out=FILE defined in descriptor.proto) containing all of</span><br><span class="line">                              the input files to FILE.</span><br><span class="line">  --include_imports           When using --descriptor_set_out, also include</span><br><span class="line">                              all dependencies of the input files in the</span><br><span class="line">                              set, so that the set is self-contained.</span><br><span class="line">  --include_source_info       When using --descriptor_set_out, do not strip</span><br><span class="line">                              SourceCodeInfo from the FileDescriptorProto.</span><br><span class="line">                              This results in vastly larger descriptors that</span><br><span class="line">                              include information about the original</span><br><span class="line">                              location of each decl in the source file as</span><br><span class="line">                              well as surrounding comments.</span><br><span class="line">  --error_format=FORMAT       Set the format in which to print errors.</span><br><span class="line">                              FORMAT may be 'gcc' (the default) or 'msvs'</span><br><span class="line">                              (Microsoft Visual Studio format).</span><br><span class="line">  --plugin=EXECUTABLE         Specifies a plugin executable to use.</span><br><span class="line">                              Normally, protoc searches the PATH for</span><br><span class="line">                              plugins, but you may specify additional</span><br><span class="line">                              executables not in the path using this flag.</span><br><span class="line">                              Additionally, EXECUTABLE may be of the form</span><br><span class="line">                              NAME=PATH, in which case the given plugin name</span><br><span class="line">                              is mapped to the given executable even if</span><br><span class="line">                              the executable's own name differs.</span><br><span class="line">  --cpp_out=OUT_DIR           Generate C++ header and source.</span><br><span class="line">  --java_out=OUT_DIR          Generate Java source file.</span><br><span class="line">  --python_out=OUT_DIR        Generate Python source file.</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> protobuf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> protobuf </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Protobuf 简单使用</title>
      <link href="/2017/01/01/%E6%8A%80%E6%9C%AF/protobuf/2017-01-01-Protobuf%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
      <url>/2017/01/01/%E6%8A%80%E6%9C%AF/protobuf/2017-01-01-Protobuf%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<h3 id="一个简单的介绍"><a href="#一个简单的介绍" class="headerlink" title="一个简单的介绍"></a>一个简单的介绍</h3><p>Google Protocol Buffer( 简称 Protobuf) 是 Google 公司内部的混合语言数据标准，目前已经正在使用的有超过 48,162 种报文格式定义和超过 12,183 个 .proto 文件。他们用于 RPC 系统和持续数据存储系统。<br>Protocol Buffers 是一种轻便高效的结构化数据存储格式，可以用于结构化数据串行化，或者说序列化。它很适合做数据存储或 RPC 数据交换格式。可用于通讯协议、数据存储等领域的语言无关、平台无关、可扩展的序列化结构数据格式。目前提供了 C++、Java、Python 等多种语言的 API。<br>详见：<a href="https://github.com/google/protobuf" target="_blank" rel="noopener">GitHub</a></p><h3 id="安装-protobuf"><a href="#安装-protobuf" class="headerlink" title="安装 protobuf"></a>安装 protobuf</h3><p>首先我们需要安装 protobuf</p><p>这里我介绍一下我在 macOS 中使用 <code>brew</code> 安装 <code>protobuf</code></p><ol><li>首先我们看看可以安装的选项</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew search protobuf</span><br></pre></td></tr></table></figure><p><img src="/assets/picture/brew_search_protobuf.png" alt="图片" title="brew search protobuf 结果图"></p><p><em>这里因为我已经安装了 <code>protobuf250</code>, 所以这里有个小 ✔️</em></p><p>如果这里的搜索结果中没有查看到版本相关信息， 执行下面的指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew tap homebrew/versions</span><br></pre></td></tr></table></figure><p>这样以后 使用 <code>brew search appName</code> 的时候就能看到不同版本的应用了</p><ol start="2"><li>使用 brew 安装</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install protobuf250</span><br></pre></td></tr></table></figure><p>安装成功之后可以检验一下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">protoc -version</span><br></pre></td></tr></table></figure></p><h3 id="protoc-指令"><a href="#protoc-指令" class="headerlink" title="protoc 指令"></a>protoc 指令</h3><p>下面我们就能使用 <code>protoc</code> 指令来讲 <code>.proto</code> 文件编译成 protobuf 支持的其他语言的文件了，例如 <code>.java</code> 文件</p><p>指令如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">protoc --java_out=/path/to/java/out/dir/ ./Demo.proto</span><br></pre></td></tr></table></figure><p>将 <em>Demo.proto</em> 编译成 <em>Demo.java</em> 文件， 并且输入到 <code>/path/to/java/out/dir</code></p><p>具体介绍见<br><a href="&quot;https://summerbuger.github.io/2017/01/01/protoc%E6%8C%87%E4%BB%A4%E4%BB%8B%E7%BB%8D.html&quot;," title="protoc 指令介绍">protoc 指令介绍</a></p><h3 id="Intellij-Idea-使用-Google-Protocol-Buffers-Support"><a href="#Intellij-Idea-使用-Google-Protocol-Buffers-Support" class="headerlink" title="Intellij Idea 使用 Google Protocol Buffers Support"></a>Intellij Idea 使用 <code>Google Protocol Buffers Support</code></h3><p>当然，日常开发过程中，我们都是使用 <code>IDE</code>, 如 <code>Intellij Idea</code><br><code>Intellij Idea</code> 对 <code>protobuf</code> 的支持比较好</p><p>1 安装 <code>Google Protocol Buffers Support</code> 插件</p><p><img src="/assets/picture/intellij_idea_proto_plugin.png" alt="图片" title="搜索 proto 相关插件"><br><img src="/assets/picture/google_protocol_buffers_support.png" alt="图片" title="Google Protocol Buffers Support"></p><p>2 添加 <code>Protobuf Facet</code><br><img src="/assets/picture/project_setting_modules.png" alt="图片" title="Project Setting modules"><br><img src="/assets/picture/protobuf_facet.png" alt="图片" title="添加 Protobuf Facet"><br><img src="/assets/picture/java_output_dir.png" alt="图片" title="设置 java 文件输出文件夹"></p><p>3 点击 <code>Build Project</code> 按钮</p><h3 id="proto-文件"><a href="#proto-文件" class="headerlink" title=".proto 文件"></a><code>.proto</code> 文件</h3>]]></content>
      
      <categories>
          
          <category> protobuf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> protobuf </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SpringMVC 中的 @ControllerAdvice</title>
      <link href="/2016/12/10/%E6%8A%80%E6%9C%AF/spring/2016-12-10-SpringMvc-@ControllerAdvice/"/>
      <url>/2016/12/10/%E6%8A%80%E6%9C%AF/spring/2016-12-10-SpringMvc-@ControllerAdvice/</url>
      <content type="html"><![CDATA[<h3 id="SpringMVC-中的-ControllerAdvice"><a href="#SpringMVC-中的-ControllerAdvice" class="headerlink" title="SpringMVC 中的 @ControllerAdvice"></a>SpringMVC 中的 @ControllerAdvice</h3><p><code>SpringMVC</code> 中常用的注解网上有很多介绍，<code>@ControllerAdvice</code> 这个注解相对来说少见一点</p><p>从名称上就能看出， <code>@ControllerAdvice</code> 是用来增强 <code>@Controller</code> 的</p><pre><code>使用 `@ControllerAdvice` 注解增强控制器带有 `@ControllerAdvice` 注解的类，可以包含 @ExceptionHandler、@InitBinder, 和 `@ModelAttribute` 注解的方法，并且这些注解的方法会通过控制器层次应用到所有 `@RequestMapping` 方法中，而不用一一在控制器内部声明。</code></pre><p>看到上面这段话，大家有没有一种兴奋感？<br>在没有 <code>@ControllerAdvice</code> 之前， 我们是怎么使用 <code>@ExceptionHandler</code> 的呢？ 很简单，我们给 <code>Controller</code> 定义父类，在父类中又一个方法，被 <code>@ExceptionHandler</code> 修饰的方法，<br>在这里处理， 从上面这句话来说，我们现在并不需要定义什么父类，只要用 <code>@ControllerAdvice</code> 修饰一个类，它就能成为全局异常处理器！</p><p>Talk is cheap, show me the code!</p><p>先来一个 Controller:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/spring/demo"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/hello"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"test exceptions"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再来一个 ControllerAdvice, 直接返回一个 json 格式的异常信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseControllerAdvice</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">handlerException</span><span class="params">(Exception e, HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"exception: &#123;&#125;"</span>, e);</span><br><span class="line">        <span class="keyword">return</span> e;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再来贴一下 spring 配置信息:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc/spring-mvc.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.springdemo.liam"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">context:include-filter</span> <span class="attr">type</span>=<span class="string">"annotation"</span> <span class="attr">expression</span>=<span class="string">"org.springframework.stereotype.Controller"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">context:include-filter</span> <span class="attr">type</span>=<span class="string">"annotation"</span> <span class="attr">expression</span>=<span class="string">"org.springframework.web.bind.annotation.ControllerAdvice"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">context:exclude-filter</span> <span class="attr">type</span>=<span class="string">"annotation"</span> <span class="attr">expression</span>=<span class="string">"org.springframework.stereotype.Service"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>看看运行结果，很不错，我们实现了全剧异常处理<br><img src="/assets/picture/errHandler.png" alt="图片"></p><p>到这里大家会比较疑惑，为什么 ControllerAdvice 可以被自动扫描呢？</p><p>先来看看源码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target</span>(ElementType.TYPE)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ControllerAdvice &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@AliasFor</span>(<span class="string">"basePackages"</span>)</span><br><span class="line">String[] value() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">@AliasFor</span>(<span class="string">"value"</span>)</span><br><span class="line">String[] basePackages() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">Class&lt;?&gt;[] basePackageClasses() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">Class&lt;?&gt;[] assignableTypes() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">Class&lt;? extends Annotation&gt;[] annotations() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>我们可以看到 <code>@ControllerAdvice</code> 是一个 <code>@Component</code>, 它当然能被扫描<br>除了 <code>@ExceptionHandler</code> 之外，还有 <code>@InitBinder</code>、<code>@ModelAttribute</code> 修饰的方法，不是很常用</p><p>这里如果只是 这三个功能， <code>@ControllerAdvice</code> 还略显鸡肋</p><p>下面来看看 <code>Spring 4.2</code> 以来的新特性 <code>ResponseBodyAdvice</code> 和 <code>RequestBodyAdvice</code></p><p><code>ResponseBodyAdvice</code> 的源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ResponseBodyAdvice</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Whether this component supports the given controller method return type</span></span><br><span class="line"><span class="comment"> * and the selected &#123;<span class="doctag">@code</span> HttpMessageConverter&#125; type.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> returnType the return type</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> converterType the selected converter type</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if &#123;<span class="doctag">@link</span> #beforeBodyWrite&#125; should be invoked, &#123;<span class="doctag">@code</span> false&#125; otherwise</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">supports</span><span class="params">(MethodParameter returnType, Class&lt;? extends HttpMessageConverter&lt;?&gt;&gt; converterType)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Invoked after an &#123;<span class="doctag">@code</span> HttpMessageConverter&#125; is selected and just before</span></span><br><span class="line"><span class="comment"> * its write method is invoked.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> body the body to be written</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> returnType the return type of the controller method</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> selectedContentType the content type selected through content negotiation</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> selectedConverterType the converter type selected to write to the response</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> request the current request</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> response the current response</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> the body that was passed in or a modified, possibly new instance</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">T <span class="title">beforeBodyWrite</span><span class="params">(T body, MethodParameter returnType, MediaType selectedContentType,</span></span></span><br><span class="line"><span class="function"><span class="params">Class&lt;? extends HttpMessageConverter&lt;?&gt;&gt; selectedConverterType,</span></span></span><br><span class="line"><span class="function"><span class="params">ServerHttpRequest request, ServerHttpResponse response)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以看到这里， 我们可以对 <code>@ResponseBody</code> 修饰的方法的返回值进行处理<br>比如我们对返回结果进行国际化处理，</p><p>来个简单的例子:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span>(annotations = RestController.class)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleResponseBodyAdvice</span> <span class="keyword">implements</span> <span class="title">ResponseBodyAdvice</span>&lt;<span class="title">Result</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 校验是否是需要的接入点</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> returnType</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> converterType</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">supports</span><span class="params">(MethodParameter returnType, Class converterType)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> returnType.getMethod().getReturnType().equals(Result.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在往 outputStream 中写入返回结果之前，对返回结果进行处理</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">beforeBodyWrite</span><span class="params">(Result body, MethodParameter returnType, MediaType selectedContentType,</span></span></span><br><span class="line"><span class="function"><span class="params">                                  Class&lt;? extends HttpMessageConverter&lt;?&gt;&gt; selectedConverterType,</span></span></span><br><span class="line"><span class="function"><span class="params">                                  ServerHttpRequest request, ServerHttpResponse response)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> body.withRet(<span class="keyword">false</span>).withData(<span class="string">"被 ResponseBodyAdvice 修改的结果"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleRestController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/test/rest"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result&lt;String&gt; <span class="title">testRest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Result.success(<span class="keyword">true</span>, <span class="string">"hello"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看看结果：</p><p><img src="/assets/picture/responseBodyDemo.png" alt="图片"></p>]]></content>
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Spring MVC </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SpringMVC源码学习 —— MVC 配置加载过程</title>
      <link href="/2016/12/01/%E6%8A%80%E6%9C%AF/spring/2016-12-01-SpringMVC%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0-mvc%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/"/>
      <url>/2016/12/01/%E6%8A%80%E6%9C%AF/spring/2016-12-01-SpringMVC%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0-mvc%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h3 id="SpringMVC-配置加载过程"><a href="#SpringMVC-配置加载过程" class="headerlink" title="SpringMVC 配置加载过程"></a>SpringMVC 配置加载过程</h3><p><code>Spring</code> 中加载配置文件的工具类是 <code>xxxNamespaceHandler</code>， 解析 SpringMVC 的配置文件，加载默认配置的工具类就是 <code>MvcNameSpaceHandler</code>。</p><p>下面来看看 <code>MvcNameSpaceHandler</code> 的源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MvcNamespaceHandler</span> <span class="keyword">extends</span> <span class="title">NamespaceHandlerSupport</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// 注册 &lt;mvc:annotation-driven&gt; 配置标签解析类，具体解析内容见 [AnnotationDrivenBeanDefinitionParser]</span></span><br><span class="line">registerBeanDefinitionParser(<span class="string">"annotation-driven"</span>, <span class="keyword">new</span> AnnotationDrivenBeanDefinitionParser());</span><br><span class="line">registerBeanDefinitionParser(<span class="string">"default-servlet-handler"</span>, <span class="keyword">new</span> DefaultServletHandlerBeanDefinitionParser());</span><br><span class="line">registerBeanDefinitionParser(<span class="string">"interceptors"</span>, <span class="keyword">new</span> InterceptorsBeanDefinitionParser());</span><br><span class="line">registerBeanDefinitionParser(<span class="string">"resources"</span>, <span class="keyword">new</span> ResourcesBeanDefinitionParser());</span><br><span class="line">registerBeanDefinitionParser(<span class="string">"view-controller"</span>, <span class="keyword">new</span> ViewControllerBeanDefinitionParser());</span><br><span class="line">registerBeanDefinitionParser(<span class="string">"redirect-view-controller"</span>, <span class="keyword">new</span> ViewControllerBeanDefinitionParser());</span><br><span class="line">registerBeanDefinitionParser(<span class="string">"status-controller"</span>, <span class="keyword">new</span> ViewControllerBeanDefinitionParser());</span><br><span class="line">registerBeanDefinitionParser(<span class="string">"view-resolvers"</span>, <span class="keyword">new</span> ViewResolversBeanDefinitionParser());</span><br><span class="line">registerBeanDefinitionParser(<span class="string">"tiles-configurer"</span>, <span class="keyword">new</span> TilesConfigurerBeanDefinitionParser());</span><br><span class="line">registerBeanDefinitionParser(<span class="string">"freemarker-configurer"</span>, <span class="keyword">new</span> FreeMarkerConfigurerBeanDefinitionParser());</span><br><span class="line">registerBeanDefinitionParser(<span class="string">"velocity-configurer"</span>, <span class="keyword">new</span> VelocityConfigurerBeanDefinitionParser());</span><br><span class="line">registerBeanDefinitionParser(<span class="string">"groovy-configurer"</span>, <span class="keyword">new</span> GroovyMarkupConfigurerBeanDefinitionParser());</span><br><span class="line">registerBeanDefinitionParser(<span class="string">"script-template-configurer"</span>, <span class="keyword">new</span> ScriptTemplateConfigurerBeanDefinitionParser());</span><br><span class="line">registerBeanDefinitionParser(<span class="string">"cors"</span>, <span class="keyword">new</span> CorsBeanDefinitionParser());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是 <code>AnnotationDrivenBeanDefinitionParser</code> 中的 <code>parse</code> 方法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> BeanDefinition <span class="title">parse</span><span class="params">(Element element, ParserContext parserContext)</span> </span>&#123;</span><br><span class="line">Object source = parserContext.extractSource(element);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册 `&lt;mvc:annotation-driven&gt;` 的组件信息</span></span><br><span class="line">CompositeComponentDefinition compDefinition = <span class="keyword">new</span> CompositeComponentDefinition(element.getTagName(), source);</span><br><span class="line"><span class="comment">// 将 `&lt;mvc:annotation-driven&gt;` 的组建信息 push 到解析配置的上下文的 栈 中去</span></span><br><span class="line">parserContext.pushContainingComponent(compDefinition);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取 `ContentNegotiationManager`, 如果 &lt;mvc:annotation-driven&gt; 中配置了 ContentNegotiationManager 的实现类名，则返回该实现的引用；</span></span><br><span class="line"><span class="comment">// 如果没有配置，就会生成一个默认的 ContentNegotiationManager</span></span><br><span class="line"><span class="comment">// ContentNegotiationManager: 1. 根据request 解析出 mediaType； 2. 根据 mediaType 解析出文件后缀名</span></span><br><span class="line">RuntimeBeanReference contentNegotiationManager = getContentNegotiationManager(element, source, parserContext);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建 RequestMappingHandlerMapping 的Bean 定义</span></span><br><span class="line">RootBeanDefinition handlerMappingDef = <span class="keyword">new</span> RootBeanDefinition(RequestMappingHandlerMapping.class);</span><br><span class="line">handlerMappingDef.setSource(source);</span><br><span class="line">handlerMappingDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);</span><br><span class="line"><span class="comment">// 默认 order 为0，优先使用这个 HandlerMapping</span></span><br><span class="line">handlerMappingDef.getPropertyValues().add(<span class="string">"order"</span>, <span class="number">0</span>);</span><br><span class="line">handlerMappingDef.getPropertyValues().add(<span class="string">"contentNegotiationManager"</span>, contentNegotiationManager);</span><br><span class="line">String methodMappingName = parserContext.getReaderContext().registerWithGeneratedName(handlerMappingDef);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果 &lt;mvc:annotation-driven&gt; 标签设置了 enable-matrix-variables 属性，在 RequestMappingHandlerMapping 中添加 removeSemicolonContent 属性 如果要使用 matrix-variales 属性， removeSemicolonContent 必须是 false</span></span><br><span class="line"><span class="keyword">if</span> (element.hasAttribute(<span class="string">"enable-matrix-variables"</span>)) &#123;</span><br><span class="line">Boolean enableMatrixVariables = Boolean.valueOf(element.getAttribute(<span class="string">"enable-matrix-variables"</span>));</span><br><span class="line">handlerMappingDef.getPropertyValues().add(<span class="string">"removeSemicolonContent"</span>, !enableMatrixVariables);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (element.hasAttribute(<span class="string">"enableMatrixVariables"</span>)) &#123;</span><br><span class="line">Boolean enableMatrixVariables = Boolean.valueOf(element.getAttribute(<span class="string">"enableMatrixVariables"</span>));</span><br><span class="line">handlerMappingDef.getPropertyValues().add(<span class="string">"removeSemicolonContent"</span>, !enableMatrixVariables);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取 &lt;mvc:annotation-driven&gt; 中的 path-matching 属性</span></span><br><span class="line"><span class="comment">// 读取 path-matching 中的 suffix-pattern、trailing-slash、registered-suffixes-only</span></span><br><span class="line">  <span class="comment">// 设置 RequestMappingHandlerMapping 的 useSuffixPatternMatch、useTrailingSlashMatch、useRegisteredSuffixPatternMatch</span></span><br><span class="line"><span class="comment">// 读取 path-matching 中的 path-helper （UrlPathHelper 或其自定义子类的全限定名）</span></span><br><span class="line"><span class="comment">// 设置 RequestMappingHandlerMapping 的 UrlPathHelper，如果 path-helper 不为空则在 ParserContext 中设置当前 UrlPathHelper 的别名为 mvcUrlPathHelper</span></span><br><span class="line"><span class="comment">// 读取 path-matching 中的 path-helper</span></span><br><span class="line"><span class="comment">// 设置 RequestMappingHandlerMapping 中的 pathMatcher 默认为 AntPathMatcher(ant 风格的路径匹配器)，如果 path-helper 不为空则在 ParserContext 中设置当前 UrlPathHelper 的别名为 mvcPathMatcher</span></span><br><span class="line">configurePathMatchingProperties(handlerMappingDef, element, parserContext);</span><br><span class="line"></span><br><span class="line"><span class="comment">// RequestMappingHandlerMapping 设置 CorsConfiguration(跨域请求配置信息) 并且 将 corsConfigurations 注册到 ParserContext 中</span></span><br><span class="line">RuntimeBeanReference corsConfigurationsRef = MvcNamespaceUtils.registerCorsConfigurations(<span class="keyword">null</span>, parserContext, source);</span><br><span class="line">handlerMappingDef.getPropertyValues().add(<span class="string">"corsConfigurations"</span>, corsConfigurationsRef);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取 path-matching 中的 conversion-service 获取 conversionService 并且注册到 ParserContext 中去</span></span><br><span class="line">RuntimeBeanReference conversionService = getConversionService(element, source, parserContext);</span><br><span class="line">RuntimeBeanReference validator = getValidator(element, source, parserContext);</span><br><span class="line">RuntimeBeanReference messageCodesResolver = getMessageCodesResolver(element);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">RootBeanDefinition bindingDef = <span class="keyword">new</span> RootBeanDefinition(ConfigurableWebBindingInitializer.class);</span><br><span class="line">bindingDef.setSource(source);</span><br><span class="line">bindingDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);</span><br><span class="line">bindingDef.getPropertyValues().add(<span class="string">"conversionService"</span>, conversionService);</span><br><span class="line">bindingDef.getPropertyValues().add(<span class="string">"validator"</span>, validator);</span><br><span class="line">bindingDef.getPropertyValues().add(<span class="string">"messageCodesResolver"</span>, messageCodesResolver);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取配置信息中的 MessageConverter， 如果没有配置或者 register-defaults 为 true， 其实 register-defaults 默认为true</span></span><br><span class="line"><span class="comment">// 也就是说不管你有没有配置 message-converters 属性  annotation-driven 都会为你注册这写 HttpMessageConverter:</span></span><br><span class="line"><span class="comment">// ByteArrayHttpMessageConverter、StringHttpMessageConverter、ResourceHttpMessageConverter、SourceHttpMessageConverter、AllEncompassingFormHttpMessageConverter</span></span><br><span class="line"><span class="comment">// 还有一些是否根据当前 classpath 中是否有对应的jar包才会添加的对应的 HttpMessageConverter</span></span><br><span class="line">ManagedList&lt;?&gt; messageConverters = getMessageConverters(element, source, parserContext);</span><br><span class="line"><span class="comment">// 获取用户自定义的 HandlerMethodArgumentResolver， 解析方法参数</span></span><br><span class="line">ManagedList&lt;?&gt; argumentResolvers = getArgumentResolvers(element, parserContext);</span><br><span class="line"><span class="comment">// 获取用户自定义的 HandlerMethodReturnValueHandler， 处理方法的返回值</span></span><br><span class="line">ManagedList&lt;?&gt; returnValueHandlers = getReturnValueHandlers(element, parserContext);</span><br><span class="line">String asyncTimeout = getAsyncTimeout(element);</span><br><span class="line">RuntimeBeanReference asyncExecutor = getAsyncExecutor(element);</span><br><span class="line">ManagedList&lt;?&gt; callableInterceptors = getCallableInterceptors(element, source, parserContext);</span><br><span class="line">ManagedList&lt;?&gt; deferredResultInterceptors = getDeferredResultInterceptors(element, source, parserContext);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建 RequestMappingHandlerAdapter 的 bean 定义</span></span><br><span class="line">RootBeanDefinition handlerAdapterDef = <span class="keyword">new</span> RootBeanDefinition(RequestMappingHandlerAdapter.class);</span><br><span class="line">handlerAdapterDef.setSource(source);</span><br><span class="line">handlerAdapterDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);</span><br><span class="line">handlerAdapterDef.getPropertyValues().add(<span class="string">"contentNegotiationManager"</span>, contentNegotiationManager);</span><br><span class="line">handlerAdapterDef.getPropertyValues().add(<span class="string">"webBindingInitializer"</span>, bindingDef);</span><br><span class="line">handlerAdapterDef.getPropertyValues().add(<span class="string">"messageConverters"</span>, messageConverters);</span><br><span class="line">addRequestBodyAdvice(handlerAdapterDef);</span><br><span class="line">addResponseBodyAdvice(handlerAdapterDef);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (element.hasAttribute(<span class="string">"ignore-default-model-on-redirect"</span>)) &#123;</span><br><span class="line">Boolean ignoreDefaultModel = Boolean.valueOf(element.getAttribute(<span class="string">"ignore-default-model-on-redirect"</span>));</span><br><span class="line">handlerAdapterDef.getPropertyValues().add(<span class="string">"ignoreDefaultModelOnRedirect"</span>, ignoreDefaultModel);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (element.hasAttribute(<span class="string">"ignoreDefaultModelOnRedirect"</span>)) &#123;</span><br><span class="line"><span class="comment">// "ignoreDefaultModelOnRedirect" spelling is deprecated</span></span><br><span class="line">Boolean ignoreDefaultModel = Boolean.valueOf(element.getAttribute(<span class="string">"ignoreDefaultModelOnRedirect"</span>));</span><br><span class="line">handlerAdapterDef.getPropertyValues().add(<span class="string">"ignoreDefaultModelOnRedirect"</span>, ignoreDefaultModel);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (argumentResolvers != <span class="keyword">null</span>) &#123;</span><br><span class="line">handlerAdapterDef.getPropertyValues().add(<span class="string">"customArgumentResolvers"</span>, argumentResolvers);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (returnValueHandlers != <span class="keyword">null</span>) &#123;</span><br><span class="line">handlerAdapterDef.getPropertyValues().add(<span class="string">"customReturnValueHandlers"</span>, returnValueHandlers);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (asyncTimeout != <span class="keyword">null</span>) &#123;</span><br><span class="line">handlerAdapterDef.getPropertyValues().add(<span class="string">"asyncRequestTimeout"</span>, asyncTimeout);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (asyncExecutor != <span class="keyword">null</span>) &#123;</span><br><span class="line">handlerAdapterDef.getPropertyValues().add(<span class="string">"taskExecutor"</span>, asyncExecutor);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">handlerAdapterDef.getPropertyValues().add(<span class="string">"callableInterceptors"</span>, callableInterceptors);</span><br><span class="line">handlerAdapterDef.getPropertyValues().add(<span class="string">"deferredResultInterceptors"</span>, deferredResultInterceptors);</span><br><span class="line">String handlerAdapterName = parserContext.getReaderContext().registerWithGeneratedName(handlerAdapterDef);</span><br><span class="line"></span><br><span class="line">String uriCompContribName = MvcUriComponentsBuilder.MVC_URI_COMPONENTS_CONTRIBUTOR_BEAN_NAME;</span><br><span class="line">RootBeanDefinition uriCompContribDef = <span class="keyword">new</span> RootBeanDefinition(CompositeUriComponentsContributorFactoryBean.class);</span><br><span class="line">uriCompContribDef.setSource(source);</span><br><span class="line">uriCompContribDef.getPropertyValues().addPropertyValue(<span class="string">"handlerAdapter"</span>, handlerAdapterDef);</span><br><span class="line">uriCompContribDef.getPropertyValues().addPropertyValue(<span class="string">"conversionService"</span>, conversionService);</span><br><span class="line">parserContext.getReaderContext().getRegistry().registerBeanDefinition(uriCompContribName, uriCompContribDef);</span><br><span class="line"></span><br><span class="line">RootBeanDefinition csInterceptorDef = <span class="keyword">new</span> RootBeanDefinition(ConversionServiceExposingInterceptor.class);</span><br><span class="line">csInterceptorDef.setSource(source);</span><br><span class="line">csInterceptorDef.getConstructorArgumentValues().addIndexedArgumentValue(<span class="number">0</span>, conversionService);</span><br><span class="line">RootBeanDefinition mappedCsInterceptorDef = <span class="keyword">new</span> RootBeanDefinition(MappedInterceptor.class);</span><br><span class="line">mappedCsInterceptorDef.setSource(source);</span><br><span class="line">mappedCsInterceptorDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);</span><br><span class="line">mappedCsInterceptorDef.getConstructorArgumentValues().addIndexedArgumentValue(<span class="number">0</span>, (Object) <span class="keyword">null</span>);</span><br><span class="line">mappedCsInterceptorDef.getConstructorArgumentValues().addIndexedArgumentValue(<span class="number">1</span>, csInterceptorDef);</span><br><span class="line">String mappedInterceptorName = parserContext.getReaderContext().registerWithGeneratedName(mappedCsInterceptorDef);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建 ExceptionHandlerExceptionResolver 的 Bean 定义</span></span><br><span class="line">RootBeanDefinition exceptionHandlerExceptionResolver = <span class="keyword">new</span> RootBeanDefinition(ExceptionHandlerExceptionResolver.class);</span><br><span class="line">exceptionHandlerExceptionResolver.setSource(source);</span><br><span class="line">exceptionHandlerExceptionResolver.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);</span><br><span class="line">exceptionHandlerExceptionResolver.getPropertyValues().add(<span class="string">"contentNegotiationManager"</span>, contentNegotiationManager);</span><br><span class="line">exceptionHandlerExceptionResolver.getPropertyValues().add(<span class="string">"messageConverters"</span>, messageConverters);</span><br><span class="line">exceptionHandlerExceptionResolver.getPropertyValues().add(<span class="string">"order"</span>, <span class="number">0</span>);</span><br><span class="line">addResponseBodyAdvice(exceptionHandlerExceptionResolver);</span><br><span class="line"></span><br><span class="line">String methodExceptionResolverName =</span><br><span class="line">parserContext.getReaderContext().registerWithGeneratedName(exceptionHandlerExceptionResolver);</span><br><span class="line"></span><br><span class="line">RootBeanDefinition responseStatusExceptionResolver = <span class="keyword">new</span> RootBeanDefinition(ResponseStatusExceptionResolver.class);</span><br><span class="line">responseStatusExceptionResolver.setSource(source);</span><br><span class="line">responseStatusExceptionResolver.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);</span><br><span class="line">responseStatusExceptionResolver.getPropertyValues().add(<span class="string">"order"</span>, <span class="number">1</span>);</span><br><span class="line">String responseStatusExceptionResolverName =</span><br><span class="line">parserContext.getReaderContext().registerWithGeneratedName(responseStatusExceptionResolver);</span><br><span class="line"></span><br><span class="line">RootBeanDefinition defaultExceptionResolver = <span class="keyword">new</span> RootBeanDefinition(DefaultHandlerExceptionResolver.class);</span><br><span class="line">defaultExceptionResolver.setSource(source);</span><br><span class="line">defaultExceptionResolver.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);</span><br><span class="line">defaultExceptionResolver.getPropertyValues().add(<span class="string">"order"</span>, <span class="number">2</span>);</span><br><span class="line">String defaultExceptionResolverName =</span><br><span class="line">parserContext.getReaderContext().registerWithGeneratedName(defaultExceptionResolver);</span><br><span class="line"></span><br><span class="line">parserContext.registerComponent(<span class="keyword">new</span> BeanComponentDefinition(handlerMappingDef, methodMappingName));</span><br><span class="line">parserContext.registerComponent(<span class="keyword">new</span> BeanComponentDefinition(handlerAdapterDef, handlerAdapterName));</span><br><span class="line">parserContext.registerComponent(<span class="keyword">new</span> BeanComponentDefinition(uriCompContribDef, uriCompContribName));</span><br><span class="line">parserContext.registerComponent(<span class="keyword">new</span> BeanComponentDefinition(exceptionHandlerExceptionResolver, methodExceptionResolverName));</span><br><span class="line">parserContext.registerComponent(<span class="keyword">new</span> BeanComponentDefinition(responseStatusExceptionResolver, responseStatusExceptionResolverName));</span><br><span class="line">parserContext.registerComponent(<span class="keyword">new</span> BeanComponentDefinition(defaultExceptionResolver, defaultExceptionResolverName));</span><br><span class="line">parserContext.registerComponent(<span class="keyword">new</span> BeanComponentDefinition(mappedCsInterceptorDef, mappedInterceptorName));</span><br><span class="line"></span><br><span class="line"><span class="comment">// Ensure BeanNameUrlHandlerMapping (SPR-8289) and default HandlerAdapters are not "turned off"</span></span><br><span class="line">  <span class="comment">// 创建默认的组件 BeanNameUrlHandlerMapping、HttpRequestHandlerAdapter、SimpleControllerHandlerAdapter</span></span><br><span class="line">MvcNamespaceUtils.registerDefaultComponents(parserContext, source);</span><br><span class="line"></span><br><span class="line">parserContext.popAndRegisterContainingComponent();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Spring MVC </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>几种分布式锁的实现方式</title>
      <link href="/2016/10/26/%E6%8A%80%E6%9C%AF/java/2016-10-26-%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/"/>
      <url>/2016/10/26/%E6%8A%80%E6%9C%AF/java/2016-10-26-%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</url>
      <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>分布式是现在大多数程序必要的运行环境：单机服务如果服务器宕机了，向外提供的服务马上崩溃，整个系统陷入瘫痪；而如果存在多个服务器向外提供服务，<br>只要还存在提供服务的服务器，系统就能正常运行</p><p>分布式系统向外提供服务时，很多情况下都会出现多个服务器共享某一资源的情况，存在自愿竞争；</p><p>如：<br>商品系统提供了rpc 接口，功能是创建商品信息，这个rpc 接口的提供服务器有 A,B,C；<br>这个创建商品信息的接口，在创建新的商品之前，会检测现在是否已经存在该商品，如果存在则返回已存在该商品，否则将新建商品<br>rpc接口的消费者是E， 假设 E 第一次调用的时候调用的是A，在短时间内再次请求，创建相同的商品，这时候A 服务器还没处理完,假设请求分发到了B<br>这时候 A 服务器还没有将商品信息持久化， B 服务器已经运行到了检查是否已经存在该商品， B 服务器没有查询到商品已存在，又创建了一个商品，此时商品的唯一性时效！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">createProduct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 在持久化商品信息之前需要进行的操作</span></span><br><span class="line">  ......</span><br><span class="line">  <span class="comment">// 检测商品信息是否存在</span></span><br><span class="line">  <span class="keyword">if</span> (商品信息已存在) &#123;</span><br><span class="line">    <span class="keyword">return</span> Result.fail().withErrMsg(<span class="string">"该商品已存在！"</span>);</span><br><span class="line">  &#125;  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 保存商品信息</span></span><br><span class="line">    saveProductInfo();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// ...... 商品保存后的逻辑操作</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>面对上述问题，在单机服务器上，我们很容易想到给 <code>createProduct</code> 加锁，使该方法实现线程安全； 将这个思路扩展到分布式系统，我们能否提供一个适用于分布式系统的锁？<br>要实现分布式锁，我们需要借助工具</p><ol><li>数据库</li><li>redis</li><li>zookeeper</li></ol><h3 id="1-依赖数据库实现分布式锁"><a href="#1-依赖数据库实现分布式锁" class="headerlink" title="1. 依赖数据库实现分布式锁"></a>1. 依赖数据库实现分布式锁</h3><p>各种版本的数据库都实现了锁，这里以 <code>mysql</code> 的 <code>InnoDB</code> 存储引擎为例；</p><p><code>InnoDB</code> 的特性是：支持事务、支持行级锁、支持外键；</p><p><code>InnoDB</code> 提供了两种类型的行级锁：</p><p>1.<code>共享锁(S)</code>: 允许一个事务去读一行数据，阻止其他事务获取相同数据集的排他写锁<br>2.<code>排他锁(X)</code>: 允许获得排他锁的事务修改一行数据，阻止其他事务获取相同数据集的共享读锁和排他写锁</p><p>对于 <code>DELETE</code>、<code>UPDATE</code>、<code>INSERT</code>语句，<code>InnoDB</code>会自动给涉及到的数据集加上排他锁；<br>对于普通的 <code>SELECT</code> 语句，<code>InnoDB</code> 不会加上任务锁；<br>而 <code>事务</code> 可以通过以下语句显式的给涉及到的数据集加上共享锁或者排他锁：</p><ol><li>显式添加共享锁</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> table_name <span class="keyword">WHERE</span> ... <span class="keyword">LOCK</span> <span class="keyword">IN</span> <span class="keyword">SHARE</span> <span class="keyword">MODE</span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>显式添加排他锁</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> table_name <span class="keyword">WHERE</span> ... <span class="keyword">FOR</span> <span class="keyword">UPDATE</span>;</span><br></pre></td></tr></table></figure><p><code>FOR UPDATE</code> 添加排他锁，后一个想要获取锁的事务，会等待前一个事务的完成之后才能获取排他锁</p><p>回到正题，我们上面所说的分布式锁，需要具备排他性；<code>事务</code> 通过 <code>FOR UPDATE</code> 添加排他锁正好满足我们的需求</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">def <span class="keyword">lock</span>:</span><br><span class="line">  <span class="keyword">set</span> autocommit <span class="number">0</span>; // 取消事务的自动提交特性</span><br><span class="line">  <span class="keyword">select</span> * <span class="keyword">from</span> lock_table <span class="keyword">where</span> lock_key = ? <span class="keyword">for</span> <span class="keyword">update</span>;</span><br><span class="line"></span><br><span class="line">def <span class="keyword">unlock</span>:</span><br><span class="line">  <span class="keyword">set</span> autocommit <span class="number">1</span>;  // 提交事务，解除行级锁</span><br></pre></td></tr></table></figure><p>这里使用的 <code>事务</code> + <code>FOR UPDATE</code> 添加排他锁</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.liam.distribute.lock.db;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.liam.distribute.lock.DistributeLock;</span><br><span class="line"><span class="keyword">import</span> com.liam.distribute.lock.LockException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by chaochun.chen on 16-10-27.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ForUpdateSimpleLock</span> <span class="keyword">implements</span> <span class="title">DistributeLock</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ThreadLocal&lt;Connection&gt; localConnection = <span class="keyword">new</span> ThreadLocal&lt;Connection&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FOR_UPDATE_SQL = <span class="string">"select * from lock_table where lock_key = ? for update"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">tryLock</span><span class="params">(String lockKey)</span> </span>&#123;</span><br><span class="line">        Connection connection = localConnection.get();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">            PreparedStatement statement = connection.prepareStatement(FOR_UPDATE_SQL);</span><br><span class="line">            statement.setString(<span class="number">1</span>, lockKey);</span><br><span class="line">            ResultSet resultSet = statement.executeQuery();</span><br><span class="line">            <span class="keyword">if</span> (resultSet.next()) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="comment">// 忽略异常，默认为尝试加锁失败！</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lock</span><span class="params">(String lockKey)</span> </span>&#123;</span><br><span class="line">        Connection connection = localConnection.get();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">            <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (count &lt; <span class="number">3</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    PreparedStatement statement = connection.prepareStatement(FOR_UPDATE_SQL);</span><br><span class="line">                    statement.setString(<span class="number">1</span>, lockKey);</span><br><span class="line">                    ResultSet resultSet = statement.executeQuery();</span><br><span class="line">                    <span class="keyword">if</span> (resultSet.next()) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    <span class="comment">// 此时如果抛出异常则重试！</span></span><br><span class="line">                &#125;</span><br><span class="line">                TimeUnit.SECONDS.sleep(<span class="number">1</span>);</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="comment">// 忽略异常，默认为尝试加锁失败！</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unLock</span><span class="params">(String lockKey)</span> </span>&#123;</span><br><span class="line">        Connection connection = localConnection.get();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection.setAutoCommit(<span class="keyword">true</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setConnection</span><span class="params">(Connection connection)</span> </span>&#123;</span><br><span class="line">        localConnection.set(connection);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面这种实现分布式锁的方法存在一些问题：</p><ol><li>性能不是很高</li><li>这里加锁解锁依赖sql，必须面对sql超时问题，如果底层 jdbc 和 数据库之前的socket 超时了，此时connection 基本不可用，需要关闭；<br>因此，在使用 <code>Connection</code> 的时候，推荐的使用方式是，将  <code>Connection</code> 的生命周期控制在一个方法内；</li><li>如果调用分布式锁的消费者宕机了，没有人去解锁，其他消费者将无法获取锁</li><li>没有可重入性</li></ol><p>除了上面说的 依赖 <code>事务</code> 通过 <code>FOR UPDATE</code> 实现分布式锁； 我们还能通过 <code>唯一索引</code> 实现分布式锁</p><p>先看看建表语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> uniq_lock_table (</span><br><span class="line"><span class="string">`id`</span> <span class="built_in">INT</span> (<span class="number">10</span>) <span class="keyword">UNSIGNED</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'自增主键'</span>,</span><br><span class="line">  <span class="string">`lock_key`</span> <span class="built_in">VARCHAR</span> (<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'获取锁的key值'</span>,</span><br><span class="line">  <span class="string">`expire_time`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'1970-01-01 00:00:00'</span> <span class="keyword">COMMENT</span> <span class="string">'失效时间'</span>,</span><br><span class="line">  <span class="string">`create_time`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'1970-01-01 00:00:00'</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line"><span class="keyword">UNIQUE</span> <span class="keyword">KEY</span> <span class="string">`uniq_lock_key`</span>(<span class="string">`lock_key`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">INNODB</span> <span class="keyword">CHARSET</span> = <span class="string">'utf8mb4'</span> <span class="keyword">COMMENT</span> = <span class="string">'使用唯一索引实现分布式锁的表'</span></span><br></pre></td></tr></table></figure><p>简单定义一个dao 层接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.liam.distribute.lock.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by chaochun.chen on 16-10-28.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UniqLockTableMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">insert</span><span class="params">(String lockKey, Date createTime, Date expireTime)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">del</span><span class="params">(String lockKey)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteExpired</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分布式锁简单定义如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def <span class="keyword">lock</span>:</span><br><span class="line">    exec <span class="keyword">sql</span>: <span class="keyword">insert</span> <span class="keyword">into</span> uniq_lock_table(lock_key, create_time, expire_time) <span class="keyword">values</span>(?, ?, ?);</span><br><span class="line">    if result == 1:</span><br><span class="line">      return ture;</span><br><span class="line">    else :</span><br><span class="line">      return false;</span><br><span class="line"></span><br><span class="line">def <span class="keyword">unlock</span>:</span><br><span class="line">    <span class="keyword">delete</span> <span class="keyword">from</span> uniq_lock_table <span class="keyword">where</span> lock_key = ?;</span><br></pre></td></tr></table></figure><p>用java 实现的代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.liam.distribute.lock.db;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.liam.distribute.lock.DistributeLock;</span><br><span class="line"><span class="keyword">import</span> com.liam.distribute.lock.mapper.UniqLockTableMapper;</span><br><span class="line"><span class="keyword">import</span> com.liam.distribute.lock.mapper.UniqLockTableMapperImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.naming.OperationNotSupportedException;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by chaochun.chen on 16-10-27.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UniqIndexLock</span> <span class="keyword">implements</span> <span class="title">DistributeLock</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">tryLock</span><span class="params">(String lockKey)</span> </span>&#123;</span><br><span class="line">        UniqLockTableMapper uniqLockTableMapper = UniqLockTableMapperImpl.newInstance();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">boolean</span> insert = uniqLockTableMapper.insert(lockKey, <span class="keyword">new</span> Date(), <span class="keyword">new</span> Date());</span><br><span class="line">            <span class="keyword">if</span> (insert) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// 忽略此异常，视为加锁失败！</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lock</span><span class="params">(String lockKey)</span> </span>&#123;</span><br><span class="line">        UniqLockTableMapper uniqLockTableMapper = UniqLockTableMapperImpl.newInstance();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">boolean</span> insert = uniqLockTableMapper.insert(lockKey, <span class="keyword">new</span> Date(), <span class="keyword">new</span> Date());</span><br><span class="line">                    <span class="keyword">if</span> (insert) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    <span class="comment">// 忽略此异常，视为加锁失败！</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">tryLock</span><span class="params">(String lockKey, TimeUnit timeUnit, <span class="keyword">long</span> expireTime)</span> <span class="keyword">throws</span> OperationNotSupportedException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lock</span><span class="params">(String lockKey, TimeUnit timeUnit, <span class="keyword">long</span> expireTime)</span> <span class="keyword">throws</span> OperationNotSupportedException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unLock</span><span class="params">(String lockKey)</span> </span>&#123;</span><br><span class="line">        UniqLockTableMapper uniqLockTableMapper = UniqLockTableMapperImpl.newInstance();</span><br><span class="line">        uniqLockTableMapper.del(lockKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面这种方法的缺点很明显：</p><ol><li>分布式锁不具备可重入性</li><li>如果某一消费者在获取锁之后宕机了，其他消费者无法获取锁</li></ol><p>为了解决 上面反复提到的 失效的锁的问题，我们在获取锁的时候新增时效时间！</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">def <span class="keyword">lock</span>:</span><br><span class="line">    exec clear_expire_time;</span><br><span class="line">    exec sql: <span class="keyword">insert</span> <span class="keyword">into</span> uniq_lock_table(lock_key, create_time, expire_time) <span class="keyword">values</span>(?, ?, ?);</span><br><span class="line">    if result == 1:</span><br><span class="line">      return ture;</span><br><span class="line">    else :</span><br><span class="line">      return false;</span><br><span class="line"></span><br><span class="line">def clear_expire_time:</span><br><span class="line">    <span class="keyword">delete</span> <span class="keyword">from</span> uniq_lock_table <span class="keyword">where</span> <span class="keyword">now</span>() &gt; expire_time;</span><br><span class="line"></span><br><span class="line">def <span class="keyword">unlock</span>:</span><br><span class="line">    <span class="keyword">delete</span> <span class="keyword">from</span> uniq_lock_table <span class="keyword">where</span> lock_key = ?;</span><br></pre></td></tr></table></figure><p>java 实现如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.liam.distribute.lock.db;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.base.Function;</span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.FluentIterable;</span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.ImmutableList;</span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Iterables;</span><br><span class="line"><span class="keyword">import</span> com.liam.distribute.lock.DistributeLock;</span><br><span class="line"><span class="keyword">import</span> com.liam.distribute.lock.mapper.UniqLockTableMapper;</span><br><span class="line"><span class="keyword">import</span> com.liam.distribute.lock.mapper.UniqLockTableMapperImpl;</span><br><span class="line"><span class="keyword">import</span> com.liam.distribute.lock.model.UniqLockTable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.naming.OperationNotSupportedException;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by chaochun.chen on 16-10-28.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UniqIndexTimeLock</span> <span class="keyword">implements</span> <span class="title">DistributeLock</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> DEFAULT_EXPIRE_TIMES = <span class="number">2</span> * <span class="number">1000</span>; <span class="comment">// 默认锁时效时间是两秒！</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">tryLock</span><span class="params">(String lockKey)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> tryLock(lockKey, TimeUnit.MILLISECONDS, DEFAULT_EXPIRE_TIMES);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (OperationNotSupportedException e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lock</span><span class="params">(String lockKey)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> lock(lockKey, TimeUnit.MILLISECONDS, DEFAULT_EXPIRE_TIMES);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (OperationNotSupportedException e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">tryLock</span><span class="params">(String lockKey, TimeUnit timeUnit, <span class="keyword">long</span> expireTime)</span> <span class="keyword">throws</span> OperationNotSupportedException </span>&#123;</span><br><span class="line">        UniqLockTableMapper uniqLockTableMapper = UniqLockTableMapperImpl.newInstance();</span><br><span class="line">        <span class="keyword">long</span> expireMillis = timeUnit.toMillis(expireTime);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            clearExpiredLock();</span><br><span class="line">            <span class="keyword">long</span> cur = System.currentTimeMillis();</span><br><span class="line">            Date now = <span class="keyword">new</span> Date(cur);</span><br><span class="line">            Date expired = <span class="keyword">new</span> Date(cur + expireMillis);</span><br><span class="line">            <span class="keyword">boolean</span> insert = uniqLockTableMapper.insert(lockKey, now, expired);</span><br><span class="line">            <span class="keyword">if</span> (insert) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// 忽略此异常，视为加锁失败！</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lock</span><span class="params">(String lockKey, TimeUnit timeUnit, <span class="keyword">long</span> expireTime)</span> <span class="keyword">throws</span> OperationNotSupportedException </span>&#123;</span><br><span class="line">        UniqLockTableMapper uniqLockTableMapper = UniqLockTableMapperImpl.newInstance();</span><br><span class="line">        <span class="keyword">long</span> expireMillis = timeUnit.toMillis(expireTime);</span><br><span class="line">        <span class="keyword">long</span> currentTimeMillis = System.currentTimeMillis();</span><br><span class="line">        Date now = <span class="keyword">new</span> Date(currentTimeMillis);</span><br><span class="line">        Date expired = <span class="keyword">new</span> Date(currentTimeMillis + expireMillis);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            clearExpiredLock();</span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">boolean</span> insert = uniqLockTableMapper.insert(lockKey, now, expired);</span><br><span class="line">                    <span class="keyword">if</span> (insert) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    <span class="comment">// 忽略此异常，视为加锁失败！</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unLock</span><span class="params">(String lockKey)</span> </span>&#123;</span><br><span class="line">        UniqLockTableMapper uniqLockTableMapper = UniqLockTableMapperImpl.newInstance();</span><br><span class="line">        uniqLockTableMapper.del(lockKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">clearExpiredLock</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        UniqLockTableMapper uniqLockTableMapper = UniqLockTableMapperImpl.newInstance();</span><br><span class="line">        uniqLockTableMapper.deleteExpired();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面这些方法都没能实现分布式锁的可重入性，这里需要新增一个字段，标明分布式锁是谁加的, 再来看看新增分布式锁调用方标识之后的分布式锁定义</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">def <span class="keyword">lock</span>:</span><br><span class="line">  clear_expire_time;</span><br><span class="line">  exec sql: <span class="keyword">insert</span> <span class="keyword">into</span> uniq_lock_table(lock_key, create_time, expire_time, biz_uniq_code) <span class="keyword">values</span>(?, ?, ?, ?);</span><br><span class="line">  if result == 1 :</span><br><span class="line">    return true;</span><br><span class="line">  else :</span><br><span class="line">    exec sql : <span class="keyword">select</span> * <span class="keyword">from</span> uniq_lock_table <span class="keyword">where</span> lock_key = ? <span class="keyword">and</span> biz_uniq_code = ?;</span><br><span class="line">    if query_result &gt; 0 :</span><br><span class="line">      return true;</span><br><span class="line">    else :</span><br><span class="line">      return false;</span><br></pre></td></tr></table></figure><p>在使用上面这种方式实现可重入性的时候，需要将表中的唯一索引修改一下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">add</span> <span class="keyword">UNIQUE</span> <span class="keyword">INDEX</span> <span class="string">`uniq_lock_key_biz_uniq_code`</span>(<span class="string">`lock_key`</span>, <span class="string">`biz_uniq_code`</span>);</span><br></pre></td></tr></table></figure><h5 id="注意：-上面说的这些依赖数据库实现分布式锁，都要避免单数据库示例的问题，如果只有一个数据库示例，而数据库宕机了，分布式锁将不能提供服务；因此，分布式锁依赖的数据库必须配置多数据库实例，利用数据库的主从复制逻辑，保证数据同步！"><a href="#注意：-上面说的这些依赖数据库实现分布式锁，都要避免单数据库示例的问题，如果只有一个数据库示例，而数据库宕机了，分布式锁将不能提供服务；因此，分布式锁依赖的数据库必须配置多数据库实例，利用数据库的主从复制逻辑，保证数据同步！" class="headerlink" title="注意： 上面说的这些依赖数据库实现分布式锁，都要避免单数据库示例的问题，如果只有一个数据库示例，而数据库宕机了，分布式锁将不能提供服务；因此，分布式锁依赖的数据库必须配置多数据库实例，利用数据库的主从复制逻辑，保证数据同步！"></a>注意： 上面说的这些依赖数据库实现分布式锁，都要避免单数据库示例的问题，如果只有一个数据库示例，而数据库宕机了，分布式锁将不能提供服务；因此，分布式锁依赖的数据库必须配置多数据库实例，利用数据库的主从复制逻辑，保证数据同步！</h5><h3 id="2-依赖redis实现分布式锁"><a href="#2-依赖redis实现分布式锁" class="headerlink" title="2. 依赖redis实现分布式锁"></a>2. 依赖redis实现分布式锁</h3><p><code>redis</code> 作为内存数据存储系统，相比数据库具有更好的高可用性<br>先来看看一个 <code>redis</code> 命令, <code>setnx</code></p><pre><code>\&gt; help setnxSETNX key valueTIME COMPLEXITY: O(1)RETURN VALUE: Integer reply, specifically:1 if the key was set0 if the key was not set</code></pre><p>从帮助信息能看明白， <code>setnx</code> 功能和 <code>set</code>指令类似， 不同在于 <code>setnx</code> 只有插入的key 不存在的时候才能插入成功，成功之后返回 1， 失败返回 0<br>我们依赖 <code>setnx</code> 实现分布式锁，定义如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def lock:</span><br><span class="line">  exec cmd: setnx lock_key lock_value;</span><br><span class="line">  if result == 1 :</span><br><span class="line">    return true;</span><br><span class="line">  else result = 0 :</span><br><span class="line">    return false;</span><br><span class="line"></span><br><span class="line">def unlock:</span><br><span class="line">  del lock_key;</span><br></pre></td></tr></table></figure><p>上面的定义存在的问题有:</p><ol><li>调用分布式锁的消费者如果在获取锁之后宕机了，这个失效锁将导致其他消费者无法获取锁</li><li>分布式锁不具备可重入性</li></ol><p>为了提供更好用的分布式锁，我们必须给分布式锁加上时效性<br>下面来看看 <code>redis</code> 的 <code>set</code> 指令</p><pre><code>&gt; help setSET key valueTIME COMPLEXITY: O(1)OptionsEX seconds -- Set the specified expire time, in seconds.PX milliseconds -- Set the specified expire time, in milliseconds.NX -- Only set the key if it does not already exist.XX -- Only set the key if it already exist.RETURN VALUE: Status code reply: OK if SET was executed correctly. Null multi-bulk reply: a Null Bulk Reply is returned if the SET operation was not performed becase the user specified the NX or XX option but the condition was not met.</code></pre><p>从这个可以看出来，<code>set</code> 指令可以做到 <code>setnx</code> 指令的目的，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set key value NX</span><br></pre></td></tr></table></figure><p>再看看下面的指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set key value EX 10 NX; //插入一个 k-v 数据，只有key不存在的时候才能插入成功，插入成功好，10s 内数据有效，10s 后数据失效将被删除</span><br><span class="line">set key value PX 100 NX; //插入一个 k-v 数据，只有key不存在的时候才能插入成功，插入成功好，10 毫秒内数据有效，10 毫秒后数据失效将被删除</span><br></pre></td></tr></table></figure><p>加入有效时间后，分布式锁不需要在每次加锁之前清除无效锁, 得到优化的分布式锁如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def <span class="keyword">lock</span>:</span><br><span class="line">  exec: <span class="keyword">set</span> lock_key lock_value PX expire_time NX; // 这里选择时效时间单位为毫秒，增加锁有效时间的精确性</span><br><span class="line">  if result == OK :</span><br><span class="line">    return true;</span><br><span class="line">  else :</span><br><span class="line">    return false;</span><br><span class="line"></span><br><span class="line">def <span class="keyword">unlock</span>:</span><br><span class="line">  del lock_key;</span><br></pre></td></tr></table></figure><p>上面的分布式锁还是没有实现可重入性， 改进如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">def <span class="keyword">lock</span>:</span><br><span class="line">  exec: <span class="keyword">set</span> lock_key biz_uniq_code PX expire_time NX; // 插入的value 是 biz_uniq_code, 可以唯一表示加锁的调用方</span><br><span class="line">  if result == OK :</span><br><span class="line">    return true;</span><br><span class="line">  else :</span><br><span class="line">    exec: get lock_key</span><br><span class="line">    if value == biz_uniq_code :</span><br><span class="line">      return true;</span><br><span class="line">    else :</span><br><span class="line">      return false;</span><br></pre></td></tr></table></figure><p>依赖 <code>redis</code> 实现 <code>分布式锁</code> 存在一个难以解决的问题，<code>redis</code> 不能保证数据的 <code>强一致性</code>， 因为；</p><h6 id="redis-集群使用异步复制"><a href="#redis-集群使用异步复制" class="headerlink" title="redis 集群使用异步复制"></a>redis 集群使用异步复制</h6><p>如果在加锁的时候 <code>redis</code> 的 <code>master</code> 宕机了，异步复制到 <code>slave</code> 失败了，加锁就失败了！</p><p>为了解决这个问题，<code>redis</code> 的作者提出了 <code>redLock</code></p><h4 id="RedLock"><a href="#RedLock" class="headerlink" title="RedLock"></a>RedLock</h4><p>这里不对 <code>RedLock</code> 进行介绍，详情见 <code>并发编程网</code> 翻译<br><a href="http://ifeve.com/redis-lock/" target="_blank" rel="noopener">http://ifeve.com/redis-lock/</a></p><h3 id="3-依赖zookeeper-实现分布式锁"><a href="#3-依赖zookeeper-实现分布式锁" class="headerlink" title="3. 依赖zookeeper 实现分布式锁"></a>3. 依赖zookeeper 实现分布式锁</h3><p><code>ZooKeeper</code> 能被用来实现分布式锁的原因取决于他的以下几个特性：</p><ol><li><code>ZooKeeper</code> 的视图结构和 unix 系统的文件系统类似，都是采用树结构，不同的是 <code>ZooKeeper</code> 的树结构上是新定义的 <code>数据节点</code> —— <code>ZNode</code>，<code>ZNode</code> 是 <code>ZooKeeper</code> 中数据的最小单元，可以保存数据，也可以挂靠子节点；</li><li><code>ZooKeeper</code> 中的 <code>ZNode</code> 的类型分为 <code>持久节点</code>、 <code>临时节点</code>、 <code>顺序节点</code> 三大类型；通过组合使用可以生成四种节点：<br>1) <code>持久节点</code>：是指该数据节点被创建之后，就一直存在于 <code>ZooKeeper</code> 服务器上，直到有删除操作来主动清除这个节点；<br>2) <code>持久有序节点</code>：和 <code>持久节点</code> 的基本特性一致，不同的特性在于顺序性上；在 <code>ZooKeeper</code> 中父节点会为它的第一级节点维护一份顺序，用于记录下每个子节点创建的先后顺序。<br>3) <code>临时节点</code>：和 <code>持久节点</code> 不同的是，临时节点的生命周期和客户端的会话相关，如果客户端会话失效了，<code>临时节点</code> 将被自动清除。<br>4) <code>临时有序节点</code>：和 <code>临时节点</code> 的基本特性一致，不同的特性也在于顺序性上；</li><li><code>ZooKeeper</code> 机制规定：同一个目录下只能有一个唯一的文件名。例如：我们在 <code>Zookeeper</code> 目录一个目录下创建，两个客户端创建一个名为 <code>new_node</code> 节点，只有一个能够成功。</li><li><code>ZooKeeper</code> 提供 <code>Watcher</code> 机制，客户端可以在服务端注册一个 <code>Watcher</code> 监听，当服务端的一些指定事件触动了这个 <code>Watcher</code>，就会向客户端发送通知</li></ol><h4 id="获取锁"><a href="#获取锁" class="headerlink" title="获取锁"></a>获取锁</h4><p>依赖上述特性，我们可以在 <code>ZooKeeper</code> 的树结构上，创建一个临时节点 <code>/distribute_lock/lock</code>, 只要有一个客户端创建了节点，表示该客户端获取到了锁；<br>而其他没有获取到锁的客户端，需要到 <code>ZooKeeper</code> 的 <code>/distribute_lock</code> 节点上注册一个子节点变更的 <code>Watcher</code> 监听，以便见听到子节点的变更情况。</p><blockquote><p>— distribute_lock <br></p><blockquote><p>— lock</p></blockquote></blockquote><p><img src="/assets/picture/zk_simple_lock.png" alt="图片"></p><h4 id="释放锁"><a href="#释放锁" class="headerlink" title="释放锁"></a>释放锁</h4><p>1) 客户端执行完业务逻辑后，主动删除自己创建的临时节点；<br>2) 客户端宕机后，<code>ZooKeeper</code> 和客户端之间的对话失效、连接断开，客户端创建的临时节点将被自动删除<br>3) 客户端释放锁之后，其他客户端通过 <code>Watcher</code> 监控得到锁被释放的通知，而来竞争获取锁</p>]]></content>
      
      <categories>
          
          <category> 分布式锁 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分布式锁 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mybatis 中的 Configuration</title>
      <link href="/2016/10/16/%E6%8A%80%E6%9C%AF/mybatis/2016-10-16-mybatis-Configuration/"/>
      <url>/2016/10/16/%E6%8A%80%E6%9C%AF/mybatis/2016-10-16-mybatis-Configuration/</url>
      <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *    Copyright 2009-2016 the original author or authors.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *    Licensed under the Apache License, Version 2.0 (the "License");</span></span><br><span class="line"><span class="comment"> *    you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"> *    You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *    Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"> *    distributed under the License is distributed on an "AS IS" BASIS,</span></span><br><span class="line"><span class="comment"> *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"> *    See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"> *    limitations under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> org.apache.ibatis.session;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.binding.MapperRegistry;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.builder.CacheRefResolver;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.builder.ResultMapResolver;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.builder.annotation.MethodResolver;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.builder.xml.XMLStatementBuilder;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.cache.Cache;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.cache.decorators.FifoCache;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.cache.decorators.LruCache;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.cache.decorators.SoftCache;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.cache.decorators.WeakCache;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.cache.impl.PerpetualCache;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.datasource.jndi.JndiDataSourceFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.datasource.pooled.PooledDataSourceFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.datasource.unpooled.UnpooledDataSourceFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.BatchExecutor;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.CachingExecutor;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.Executor;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.ReuseExecutor;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.SimpleExecutor;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.keygen.KeyGenerator;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.loader.ProxyFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.loader.cglib.CglibProxyFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.loader.javassist.JavassistProxyFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.parameter.ParameterHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.resultset.DefaultResultSetHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.resultset.ResultSetHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.statement.RoutingStatementHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.statement.StatementHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.VFS;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.logging.Log;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.logging.LogFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.logging.jdk14.Jdk14LoggingImpl;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.logging.log4j.Log4jImpl;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.logging.log4j2.Log4j2Impl;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.logging.nologging.NoLoggingImpl;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.logging.slf4j.Slf4jImpl;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.logging.stdout.StdOutImpl;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.BoundSql;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.Environment;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.MappedStatement;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.ParameterMap;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.ResultMap;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.VendorDatabaseIdProvider;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.parsing.XNode;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.plugin.Interceptor;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.plugin.InterceptorChain;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.DefaultReflectorFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.MetaObject;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.ReflectorFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.factory.DefaultObjectFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.factory.ObjectFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.wrapper.DefaultObjectWrapperFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.wrapper.ObjectWrapperFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.scripting.LanguageDriver;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.scripting.LanguageDriverRegistry;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.scripting.defaults.RawLanguageDriver;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.scripting.xmltags.XMLLanguageDriver;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.transaction.Transaction;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.transaction.jdbc.JdbcTransactionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.transaction.managed.ManagedTransactionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.type.JdbcType;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.type.TypeAliasRegistry;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.type.TypeHandlerRegistry;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Clinton Begin</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Configuration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">protected</span> Environment environment;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">boolean</span> safeRowBoundsEnabled = <span class="keyword">false</span>;</span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">boolean</span> safeResultHandlerEnabled = <span class="keyword">true</span>;</span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">boolean</span> mapUnderscoreToCamelCase = <span class="keyword">false</span>;</span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">boolean</span> aggressiveLazyLoading = <span class="keyword">true</span>;</span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">boolean</span> multipleResultSetsEnabled = <span class="keyword">true</span>;</span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">boolean</span> useGeneratedKeys = <span class="keyword">false</span>;</span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">boolean</span> useColumnLabel = <span class="keyword">true</span>;</span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">boolean</span> cacheEnabled = <span class="keyword">true</span>;</span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">boolean</span> callSettersOnNulls = <span class="keyword">false</span>;</span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">boolean</span> useActualParamName = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">protected</span> String logPrefix;</span><br><span class="line">  <span class="keyword">protected</span> Class &lt;? extends Log&gt; logImpl;</span><br><span class="line">  <span class="keyword">protected</span> Class &lt;? extends VFS&gt; vfsImpl;</span><br><span class="line">  <span class="keyword">protected</span> LocalCacheScope localCacheScope = LocalCacheScope.SESSION;</span><br><span class="line">  <span class="keyword">protected</span> JdbcType jdbcTypeForNull = JdbcType.OTHER;</span><br><span class="line">  <span class="keyword">protected</span> Set&lt;String&gt; lazyLoadTriggerMethods = <span class="keyword">new</span> HashSet&lt;String&gt;(Arrays.asList(<span class="keyword">new</span> String[] &#123; <span class="string">"equals"</span>, <span class="string">"clone"</span>, <span class="string">"hashCode"</span>, <span class="string">"toString"</span> &#125;));</span><br><span class="line">  <span class="keyword">protected</span> Integer defaultStatementTimeout;</span><br><span class="line">  <span class="keyword">protected</span> Integer defaultFetchSize;</span><br><span class="line">  <span class="keyword">protected</span> ExecutorType defaultExecutorType = ExecutorType.SIMPLE;</span><br><span class="line">  <span class="keyword">protected</span> AutoMappingBehavior autoMappingBehavior = AutoMappingBehavior.PARTIAL;</span><br><span class="line">  <span class="keyword">protected</span> AutoMappingUnknownColumnBehavior autoMappingUnknownColumnBehavior = AutoMappingUnknownColumnBehavior.NONE;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">protected</span> Properties variables = <span class="keyword">new</span> Properties();</span><br><span class="line">  <span class="keyword">protected</span> ReflectorFactory reflectorFactory = <span class="keyword">new</span> DefaultReflectorFactory();</span><br><span class="line">  <span class="keyword">protected</span> ObjectFactory objectFactory = <span class="keyword">new</span> DefaultObjectFactory();</span><br><span class="line">  <span class="keyword">protected</span> ObjectWrapperFactory objectWrapperFactory = <span class="keyword">new</span> DefaultObjectWrapperFactory();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">boolean</span> lazyLoadingEnabled = <span class="keyword">false</span>;</span><br><span class="line">  <span class="keyword">protected</span> ProxyFactory proxyFactory = <span class="keyword">new</span> JavassistProxyFactory(); <span class="comment">// #224 Using internal Javassist instead of OGNL</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">protected</span> String databaseId;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Configuration factory class.</span></span><br><span class="line"><span class="comment">   * Used to create Configuration for loading deserialized unread properties.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@see</span> &lt;a href='https://code.google.com/p/mybatis/issues/detail?id=300'&gt;Issue 300 (google code)&lt;/a&gt;</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">protected</span> Class&lt;?&gt; configurationFactory;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">final</span> MapperRegistry mapperRegistry = <span class="keyword">new</span> MapperRegistry(<span class="keyword">this</span>);</span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">final</span> InterceptorChain interceptorChain = <span class="keyword">new</span> InterceptorChain();</span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">final</span> TypeHandlerRegistry typeHandlerRegistry = <span class="keyword">new</span> TypeHandlerRegistry();</span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">final</span> TypeAliasRegistry typeAliasRegistry = <span class="keyword">new</span> TypeAliasRegistry();</span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">final</span> LanguageDriverRegistry languageRegistry = <span class="keyword">new</span> LanguageDriverRegistry();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">final</span> Map&lt;String, MappedStatement&gt; mappedStatements = <span class="keyword">new</span> StrictMap&lt;MappedStatement&gt;(<span class="string">"Mapped Statements collection"</span>);</span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">final</span> Map&lt;String, Cache&gt; caches = <span class="keyword">new</span> StrictMap&lt;Cache&gt;(<span class="string">"Caches collection"</span>);</span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">final</span> Map&lt;String, ResultMap&gt; resultMaps = <span class="keyword">new</span> StrictMap&lt;ResultMap&gt;(<span class="string">"Result Maps collection"</span>);</span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">final</span> Map&lt;String, ParameterMap&gt; parameterMaps = <span class="keyword">new</span> StrictMap&lt;ParameterMap&gt;(<span class="string">"Parameter Maps collection"</span>);</span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">final</span> Map&lt;String, KeyGenerator&gt; keyGenerators = <span class="keyword">new</span> StrictMap&lt;KeyGenerator&gt;(<span class="string">"Key Generators collection"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">final</span> Set&lt;String&gt; loadedResources = <span class="keyword">new</span> HashSet&lt;String&gt;();</span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">final</span> Map&lt;String, XNode&gt; sqlFragments = <span class="keyword">new</span> StrictMap&lt;XNode&gt;(<span class="string">"XML fragments parsed from previous mappers"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">final</span> Collection&lt;XMLStatementBuilder&gt; incompleteStatements = <span class="keyword">new</span> LinkedList&lt;XMLStatementBuilder&gt;();</span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">final</span> Collection&lt;CacheRefResolver&gt; incompleteCacheRefs = <span class="keyword">new</span> LinkedList&lt;CacheRefResolver&gt;();</span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">final</span> Collection&lt;ResultMapResolver&gt; incompleteResultMaps = <span class="keyword">new</span> LinkedList&lt;ResultMapResolver&gt;();</span><br><span class="line">  <span class="comment">// Configuration 中待解析的 Method</span></span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">final</span> Collection&lt;MethodResolver&gt; incompleteMethods = <span class="keyword">new</span> LinkedList&lt;MethodResolver&gt;();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">   * A map holds cache-ref relationship. The key is the namespace that</span></span><br><span class="line"><span class="comment">   * references a cache bound to another namespace and the value is the</span></span><br><span class="line"><span class="comment">   * namespace which the actual cache is bound to.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">final</span> Map&lt;String, String&gt; cacheRefMap = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Configuration</span><span class="params">(Environment environment)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>();</span><br><span class="line">    <span class="keyword">this</span>.environment = environment;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Configuration</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    typeAliasRegistry.registerAlias(<span class="string">"JDBC"</span>, JdbcTransactionFactory.class);</span><br><span class="line">    typeAliasRegistry.registerAlias(<span class="string">"MANAGED"</span>, ManagedTransactionFactory.class);</span><br><span class="line"></span><br><span class="line">    typeAliasRegistry.registerAlias(<span class="string">"JNDI"</span>, JndiDataSourceFactory.class);</span><br><span class="line">    typeAliasRegistry.registerAlias(<span class="string">"POOLED"</span>, PooledDataSourceFactory.class);</span><br><span class="line">    typeAliasRegistry.registerAlias(<span class="string">"UNPOOLED"</span>, UnpooledDataSourceFactory.class);</span><br><span class="line"></span><br><span class="line">    typeAliasRegistry.registerAlias(<span class="string">"PERPETUAL"</span>, PerpetualCache.class);</span><br><span class="line">    typeAliasRegistry.registerAlias(<span class="string">"FIFO"</span>, FifoCache.class);</span><br><span class="line">    typeAliasRegistry.registerAlias(<span class="string">"LRU"</span>, LruCache.class);</span><br><span class="line">    typeAliasRegistry.registerAlias(<span class="string">"SOFT"</span>, SoftCache.class);</span><br><span class="line">    typeAliasRegistry.registerAlias(<span class="string">"WEAK"</span>, WeakCache.class);</span><br><span class="line"></span><br><span class="line">    typeAliasRegistry.registerAlias(<span class="string">"DB_VENDOR"</span>, VendorDatabaseIdProvider.class);</span><br><span class="line"></span><br><span class="line">    typeAliasRegistry.registerAlias(<span class="string">"XML"</span>, XMLLanguageDriver.class);</span><br><span class="line">    typeAliasRegistry.registerAlias(<span class="string">"RAW"</span>, RawLanguageDriver.class);</span><br><span class="line"></span><br><span class="line">    typeAliasRegistry.registerAlias(<span class="string">"SLF4J"</span>, Slf4jImpl.class);</span><br><span class="line">    typeAliasRegistry.registerAlias(<span class="string">"COMMONS_LOGGING"</span>, JakartaCommonsLoggingImpl.class);</span><br><span class="line">    typeAliasRegistry.registerAlias(<span class="string">"LOG4J"</span>, Log4jImpl.class);</span><br><span class="line">    typeAliasRegistry.registerAlias(<span class="string">"LOG4J2"</span>, Log4j2Impl.class);</span><br><span class="line">    typeAliasRegistry.registerAlias(<span class="string">"JDK_LOGGING"</span>, Jdk14LoggingImpl.class);</span><br><span class="line">    typeAliasRegistry.registerAlias(<span class="string">"STDOUT_LOGGING"</span>, StdOutImpl.class);</span><br><span class="line">    typeAliasRegistry.registerAlias(<span class="string">"NO_LOGGING"</span>, NoLoggingImpl.class);</span><br><span class="line"></span><br><span class="line">    typeAliasRegistry.registerAlias(<span class="string">"CGLIB"</span>, CglibProxyFactory.class);</span><br><span class="line">    typeAliasRegistry.registerAlias(<span class="string">"JAVASSIST"</span>, JavassistProxyFactory.class);</span><br><span class="line"></span><br><span class="line">    languageRegistry.setDefaultDriverClass(XMLLanguageDriver.class);</span><br><span class="line">    languageRegistry.register(RawLanguageDriver.class);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">getLogPrefix</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> logPrefix;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLogPrefix</span><span class="params">(String logPrefix)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.logPrefix = logPrefix;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> Class&lt;? extends Log&gt; getLogImpl() &#123;</span><br><span class="line">    <span class="keyword">return</span> logImpl;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLogImpl</span><span class="params">(Class&lt;? extends Log&gt; logImpl)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (logImpl != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">this</span>.logImpl = logImpl;</span><br><span class="line">      LogFactory.useCustomLogging(<span class="keyword">this</span>.logImpl);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> Class&lt;? extends VFS&gt; getVfsImpl() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.vfsImpl;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setVfsImpl</span><span class="params">(Class&lt;? extends VFS&gt; vfsImpl)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (vfsImpl != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">this</span>.vfsImpl = vfsImpl;</span><br><span class="line">      VFS.addImplClass(<span class="keyword">this</span>.vfsImpl);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isCallSettersOnNulls</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> callSettersOnNulls;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCallSettersOnNulls</span><span class="params">(<span class="keyword">boolean</span> callSettersOnNulls)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.callSettersOnNulls = callSettersOnNulls;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isUseActualParamName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> useActualParamName;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUseActualParamName</span><span class="params">(<span class="keyword">boolean</span> useActualParamName)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.useActualParamName = useActualParamName;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">getDatabaseId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> databaseId;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDatabaseId</span><span class="params">(String databaseId)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.databaseId = databaseId;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> Class&lt;?&gt; getConfigurationFactory() &#123;</span><br><span class="line">    <span class="keyword">return</span> configurationFactory;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setConfigurationFactory</span><span class="params">(Class&lt;?&gt; configurationFactory)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.configurationFactory = configurationFactory;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSafeResultHandlerEnabled</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> safeResultHandlerEnabled;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSafeResultHandlerEnabled</span><span class="params">(<span class="keyword">boolean</span> safeResultHandlerEnabled)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.safeResultHandlerEnabled = safeResultHandlerEnabled;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSafeRowBoundsEnabled</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> safeRowBoundsEnabled;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSafeRowBoundsEnabled</span><span class="params">(<span class="keyword">boolean</span> safeRowBoundsEnabled)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.safeRowBoundsEnabled = safeRowBoundsEnabled;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isMapUnderscoreToCamelCase</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> mapUnderscoreToCamelCase;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMapUnderscoreToCamelCase</span><span class="params">(<span class="keyword">boolean</span> mapUnderscoreToCamelCase)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.mapUnderscoreToCamelCase = mapUnderscoreToCamelCase;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addLoadedResource</span><span class="params">(String resource)</span> </span>&#123;</span><br><span class="line">    loadedResources.add(resource);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isResourceLoaded</span><span class="params">(String resource)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> loadedResources.contains(resource);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Environment <span class="title">getEnvironment</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> environment;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEnvironment</span><span class="params">(Environment environment)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.environment = environment;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> AutoMappingBehavior <span class="title">getAutoMappingBehavior</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> autoMappingBehavior;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAutoMappingBehavior</span><span class="params">(AutoMappingBehavior autoMappingBehavior)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.autoMappingBehavior = autoMappingBehavior;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@since</span> 3.4.0</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> AutoMappingUnknownColumnBehavior <span class="title">getAutoMappingUnknownColumnBehavior</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> autoMappingUnknownColumnBehavior;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@since</span> 3.4.0</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAutoMappingUnknownColumnBehavior</span><span class="params">(AutoMappingUnknownColumnBehavior autoMappingUnknownColumnBehavior)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.autoMappingUnknownColumnBehavior = autoMappingUnknownColumnBehavior;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isLazyLoadingEnabled</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> lazyLoadingEnabled;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLazyLoadingEnabled</span><span class="params">(<span class="keyword">boolean</span> lazyLoadingEnabled)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.lazyLoadingEnabled = lazyLoadingEnabled;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> ProxyFactory <span class="title">getProxyFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> proxyFactory;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setProxyFactory</span><span class="params">(ProxyFactory proxyFactory)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (proxyFactory == <span class="keyword">null</span>) &#123;</span><br><span class="line">      proxyFactory = <span class="keyword">new</span> JavassistProxyFactory();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.proxyFactory = proxyFactory;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isAggressiveLazyLoading</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> aggressiveLazyLoading;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAggressiveLazyLoading</span><span class="params">(<span class="keyword">boolean</span> aggressiveLazyLoading)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.aggressiveLazyLoading = aggressiveLazyLoading;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isMultipleResultSetsEnabled</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> multipleResultSetsEnabled;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMultipleResultSetsEnabled</span><span class="params">(<span class="keyword">boolean</span> multipleResultSetsEnabled)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.multipleResultSetsEnabled = multipleResultSetsEnabled;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">getLazyLoadTriggerMethods</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> lazyLoadTriggerMethods;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLazyLoadTriggerMethods</span><span class="params">(Set&lt;String&gt; lazyLoadTriggerMethods)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.lazyLoadTriggerMethods = lazyLoadTriggerMethods;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isUseGeneratedKeys</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> useGeneratedKeys;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUseGeneratedKeys</span><span class="params">(<span class="keyword">boolean</span> useGeneratedKeys)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.useGeneratedKeys = useGeneratedKeys;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> ExecutorType <span class="title">getDefaultExecutorType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> defaultExecutorType;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDefaultExecutorType</span><span class="params">(ExecutorType defaultExecutorType)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.defaultExecutorType = defaultExecutorType;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isCacheEnabled</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> cacheEnabled;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCacheEnabled</span><span class="params">(<span class="keyword">boolean</span> cacheEnabled)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.cacheEnabled = cacheEnabled;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Integer <span class="title">getDefaultStatementTimeout</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> defaultStatementTimeout;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDefaultStatementTimeout</span><span class="params">(Integer defaultStatementTimeout)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.defaultStatementTimeout = defaultStatementTimeout;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@since</span> 3.3.0</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Integer <span class="title">getDefaultFetchSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> defaultFetchSize;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@since</span> 3.3.0</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDefaultFetchSize</span><span class="params">(Integer defaultFetchSize)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.defaultFetchSize = defaultFetchSize;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isUseColumnLabel</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> useColumnLabel;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUseColumnLabel</span><span class="params">(<span class="keyword">boolean</span> useColumnLabel)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.useColumnLabel = useColumnLabel;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> LocalCacheScope <span class="title">getLocalCacheScope</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> localCacheScope;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLocalCacheScope</span><span class="params">(LocalCacheScope localCacheScope)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.localCacheScope = localCacheScope;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> JdbcType <span class="title">getJdbcTypeForNull</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> jdbcTypeForNull;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setJdbcTypeForNull</span><span class="params">(JdbcType jdbcTypeForNull)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.jdbcTypeForNull = jdbcTypeForNull;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Properties <span class="title">getVariables</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> variables;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setVariables</span><span class="params">(Properties variables)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.variables = variables;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> TypeHandlerRegistry <span class="title">getTypeHandlerRegistry</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> typeHandlerRegistry;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> TypeAliasRegistry <span class="title">getTypeAliasRegistry</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> typeAliasRegistry;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@since</span> 3.2.2</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> MapperRegistry <span class="title">getMapperRegistry</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> mapperRegistry;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> ReflectorFactory <span class="title">getReflectorFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> reflectorFactory;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setReflectorFactory</span><span class="params">(ReflectorFactory reflectorFactory)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.reflectorFactory = reflectorFactory;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> ObjectFactory <span class="title">getObjectFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> objectFactory;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setObjectFactory</span><span class="params">(ObjectFactory objectFactory)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.objectFactory = objectFactory;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> ObjectWrapperFactory <span class="title">getObjectWrapperFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> objectWrapperFactory;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setObjectWrapperFactory</span><span class="params">(ObjectWrapperFactory objectWrapperFactory)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.objectWrapperFactory = objectWrapperFactory;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@since</span> 3.2.2</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> List&lt;Interceptor&gt; <span class="title">getInterceptors</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> interceptorChain.getInterceptors();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> LanguageDriverRegistry <span class="title">getLanguageRegistry</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> languageRegistry;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDefaultScriptingLanguage</span><span class="params">(Class&lt;?&gt; driver)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (driver == <span class="keyword">null</span>) &#123;</span><br><span class="line">      driver = XMLLanguageDriver.class;</span><br><span class="line">    &#125;</span><br><span class="line">    getLanguageRegistry().setDefaultDriverClass(driver);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> LanguageDriver <span class="title">getDefaultScriptingLanuageInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> languageRegistry.getDefaultDriver();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> MetaObject <span class="title">newMetaObject</span><span class="params">(Object object)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> MetaObject.forObject(object, objectFactory, objectWrapperFactory, reflectorFactory);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> ParameterHandler <span class="title">newParameterHandler</span><span class="params">(MappedStatement mappedStatement, Object parameterObject, BoundSql boundSql)</span> </span>&#123;</span><br><span class="line">    ParameterHandler parameterHandler = mappedStatement.getLang().createParameterHandler(mappedStatement, parameterObject, boundSql);</span><br><span class="line">    parameterHandler = (ParameterHandler) interceptorChain.pluginAll(parameterHandler);</span><br><span class="line">    <span class="keyword">return</span> parameterHandler;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> ResultSetHandler <span class="title">newResultSetHandler</span><span class="params">(Executor executor, MappedStatement mappedStatement, RowBounds rowBounds, ParameterHandler parameterHandler,</span></span></span><br><span class="line"><span class="function"><span class="params">      ResultHandler resultHandler, BoundSql boundSql)</span> </span>&#123;</span><br><span class="line">    ResultSetHandler resultSetHandler = <span class="keyword">new</span> DefaultResultSetHandler(executor, mappedStatement, parameterHandler, resultHandler, boundSql, rowBounds);</span><br><span class="line">    resultSetHandler = (ResultSetHandler) interceptorChain.pluginAll(resultSetHandler);</span><br><span class="line">    <span class="keyword">return</span> resultSetHandler;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> StatementHandler <span class="title">newStatementHandler</span><span class="params">(Executor executor, MappedStatement mappedStatement, Object parameterObject, RowBounds rowBounds, ResultHandler resultHandler, BoundSql boundSql)</span> </span>&#123;</span><br><span class="line">    StatementHandler statementHandler = <span class="keyword">new</span> RoutingStatementHandler(executor, mappedStatement, parameterObject, rowBounds, resultHandler, boundSql);</span><br><span class="line">    statementHandler = (StatementHandler) interceptorChain.pluginAll(statementHandler);</span><br><span class="line">    <span class="keyword">return</span> statementHandler;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Executor <span class="title">newExecutor</span><span class="params">(Transaction transaction)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> newExecutor(transaction, defaultExecutorType);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Executor <span class="title">newExecutor</span><span class="params">(Transaction transaction, ExecutorType executorType)</span> </span>&#123;</span><br><span class="line">    executorType = executorType == <span class="keyword">null</span> ? defaultExecutorType : executorType;</span><br><span class="line">    executorType = executorType == <span class="keyword">null</span> ? ExecutorType.SIMPLE : executorType;</span><br><span class="line">    Executor executor;</span><br><span class="line">    <span class="keyword">if</span> (ExecutorType.BATCH == executorType) &#123;</span><br><span class="line">      executor = <span class="keyword">new</span> BatchExecutor(<span class="keyword">this</span>, transaction);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ExecutorType.REUSE == executorType) &#123;</span><br><span class="line">      executor = <span class="keyword">new</span> ReuseExecutor(<span class="keyword">this</span>, transaction);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      executor = <span class="keyword">new</span> SimpleExecutor(<span class="keyword">this</span>, transaction);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (cacheEnabled) &#123;</span><br><span class="line">      executor = <span class="keyword">new</span> CachingExecutor(executor);</span><br><span class="line">    &#125;</span><br><span class="line">    executor = (Executor) interceptorChain.pluginAll(executor);</span><br><span class="line">    <span class="keyword">return</span> executor;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addKeyGenerator</span><span class="params">(String id, KeyGenerator keyGenerator)</span> </span>&#123;</span><br><span class="line">    keyGenerators.put(id, keyGenerator);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Collection&lt;String&gt; <span class="title">getKeyGeneratorNames</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> keyGenerators.keySet();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Collection&lt;KeyGenerator&gt; <span class="title">getKeyGenerators</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> keyGenerators.values();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> KeyGenerator <span class="title">getKeyGenerator</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> keyGenerators.get(id);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasKeyGenerator</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> keyGenerators.containsKey(id);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addCache</span><span class="params">(Cache cache)</span> </span>&#123;</span><br><span class="line">    caches.put(cache.getId(), cache);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Collection&lt;String&gt; <span class="title">getCacheNames</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> caches.keySet();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Collection&lt;Cache&gt; <span class="title">getCaches</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> caches.values();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Cache <span class="title">getCache</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> caches.get(id);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasCache</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> caches.containsKey(id);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addResultMap</span><span class="params">(ResultMap rm)</span> </span>&#123;</span><br><span class="line">    resultMaps.put(rm.getId(), rm);</span><br><span class="line">    checkLocallyForDiscriminatedNestedResultMaps(rm);</span><br><span class="line">    checkGloballyForDiscriminatedNestedResultMaps(rm);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Collection&lt;String&gt; <span class="title">getResultMapNames</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> resultMaps.keySet();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Collection&lt;ResultMap&gt; <span class="title">getResultMaps</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> resultMaps.values();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> ResultMap <span class="title">getResultMap</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> resultMaps.get(id);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasResultMap</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> resultMaps.containsKey(id);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addParameterMap</span><span class="params">(ParameterMap pm)</span> </span>&#123;</span><br><span class="line">    parameterMaps.put(pm.getId(), pm);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Collection&lt;String&gt; <span class="title">getParameterMapNames</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> parameterMaps.keySet();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Collection&lt;ParameterMap&gt; <span class="title">getParameterMaps</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> parameterMaps.values();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> ParameterMap <span class="title">getParameterMap</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> parameterMaps.get(id);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasParameterMap</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> parameterMaps.containsKey(id);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addMappedStatement</span><span class="params">(MappedStatement ms)</span> </span>&#123;</span><br><span class="line">    mappedStatements.put(ms.getId(), ms);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Collection&lt;String&gt; <span class="title">getMappedStatementNames</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    buildAllStatements();</span><br><span class="line">    <span class="keyword">return</span> mappedStatements.keySet();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Collection&lt;MappedStatement&gt; <span class="title">getMappedStatements</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    buildAllStatements();</span><br><span class="line">    <span class="keyword">return</span> mappedStatements.values();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Collection&lt;XMLStatementBuilder&gt; <span class="title">getIncompleteStatements</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> incompleteStatements;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addIncompleteStatement</span><span class="params">(XMLStatementBuilder incompleteStatement)</span> </span>&#123;</span><br><span class="line">    incompleteStatements.add(incompleteStatement);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Collection&lt;CacheRefResolver&gt; <span class="title">getIncompleteCacheRefs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> incompleteCacheRefs;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addIncompleteCacheRef</span><span class="params">(CacheRefResolver incompleteCacheRef)</span> </span>&#123;</span><br><span class="line">    incompleteCacheRefs.add(incompleteCacheRef);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Collection&lt;ResultMapResolver&gt; <span class="title">getIncompleteResultMaps</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> incompleteResultMaps;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addIncompleteResultMap</span><span class="params">(ResultMapResolver resultMapResolver)</span> </span>&#123;</span><br><span class="line">    incompleteResultMaps.add(resultMapResolver);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addIncompleteMethod</span><span class="params">(MethodResolver builder)</span> </span>&#123;</span><br><span class="line">    incompleteMethods.add(builder);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Collection&lt;MethodResolver&gt; <span class="title">getIncompleteMethods</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> incompleteMethods;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> MappedStatement <span class="title">getMappedStatement</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.getMappedStatement(id, <span class="keyword">true</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> MappedStatement <span class="title">getMappedStatement</span><span class="params">(String id, <span class="keyword">boolean</span> validateIncompleteStatements)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (validateIncompleteStatements) &#123;</span><br><span class="line">      buildAllStatements();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> mappedStatements.get(id);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Map&lt;String, XNode&gt; <span class="title">getSqlFragments</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> sqlFragments;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptor</span><span class="params">(Interceptor interceptor)</span> </span>&#123;</span><br><span class="line">    interceptorChain.addInterceptor(interceptor);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addMappers</span><span class="params">(String packageName, Class&lt;?&gt; superType)</span> </span>&#123;</span><br><span class="line">    mapperRegistry.addMappers(packageName, superType);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addMappers</span><span class="params">(String packageName)</span> </span>&#123;</span><br><span class="line">    mapperRegistry.addMappers(packageName);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> &lt;T&gt; <span class="function"><span class="keyword">void</span> <span class="title">addMapper</span><span class="params">(Class&lt;T&gt; type)</span> </span>&#123;</span><br><span class="line">    mapperRegistry.addMapper(type);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">getMapper</span><span class="params">(Class&lt;T&gt; type, SqlSession sqlSession)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> mapperRegistry.getMapper(type, sqlSession);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasMapper</span><span class="params">(Class&lt;?&gt; type)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> mapperRegistry.hasMapper(type);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasStatement</span><span class="params">(String statementName)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> hasStatement(statementName, <span class="keyword">true</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasStatement</span><span class="params">(String statementName, <span class="keyword">boolean</span> validateIncompleteStatements)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (validateIncompleteStatements) &#123;</span><br><span class="line">      buildAllStatements();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> mappedStatements.containsKey(statementName);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addCacheRef</span><span class="params">(String namespace, String referencedNamespace)</span> </span>&#123;</span><br><span class="line">    cacheRefMap.put(namespace, referencedNamespace);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">   * Parses all the unprocessed statement nodes in the cache. It is recommended</span></span><br><span class="line"><span class="comment">   * to call this method once all the mappers are added as it provides fail-fast</span></span><br><span class="line"><span class="comment">   * statement validation.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">buildAllStatements</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!incompleteResultMaps.isEmpty()) &#123;</span><br><span class="line">      <span class="keyword">synchronized</span> (incompleteResultMaps) &#123;</span><br><span class="line">        <span class="comment">// This always throws a BuilderException.</span></span><br><span class="line">        incompleteResultMaps.iterator().next().resolve();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!incompleteCacheRefs.isEmpty()) &#123;</span><br><span class="line">      <span class="keyword">synchronized</span> (incompleteCacheRefs) &#123;</span><br><span class="line">        <span class="comment">// This always throws a BuilderException.</span></span><br><span class="line">        incompleteCacheRefs.iterator().next().resolveCacheRef();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!incompleteStatements.isEmpty()) &#123;</span><br><span class="line">      <span class="keyword">synchronized</span> (incompleteStatements) &#123;</span><br><span class="line">        <span class="comment">// This always throws a BuilderException.</span></span><br><span class="line">        incompleteStatements.iterator().next().parseStatementNode();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!incompleteMethods.isEmpty()) &#123;</span><br><span class="line">      <span class="keyword">synchronized</span> (incompleteMethods) &#123;</span><br><span class="line">        <span class="comment">// This always throws a BuilderException.</span></span><br><span class="line">        incompleteMethods.iterator().next().resolve();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">   * Extracts namespace from fully qualified statement id.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * @param statementId</span></span><br><span class="line"><span class="comment">   * @return namespace or null when id does not contain period.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> String <span class="title">extractNamespace</span><span class="params">(String statementId)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> lastPeriod = statementId.lastIndexOf(<span class="string">'.'</span>);</span><br><span class="line">    <span class="keyword">return</span> lastPeriod &gt; <span class="number">0</span> ? statementId.substring(<span class="number">0</span>, lastPeriod) : <span class="keyword">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Slow but a one time cost. A better solution is welcome.</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">checkGloballyForDiscriminatedNestedResultMaps</span><span class="params">(ResultMap rm)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (rm.hasNestedResultMaps()) &#123;</span><br><span class="line">      <span class="keyword">for</span> (Map.Entry&lt;String, ResultMap&gt; entry : resultMaps.entrySet()) &#123;</span><br><span class="line">        Object value = entry.getValue();</span><br><span class="line">        <span class="keyword">if</span> (value <span class="keyword">instanceof</span> ResultMap) &#123;</span><br><span class="line">          ResultMap entryResultMap = (ResultMap) value;</span><br><span class="line">          <span class="keyword">if</span> (!entryResultMap.hasNestedResultMaps() &amp;&amp; entryResultMap.getDiscriminator() != <span class="keyword">null</span>) &#123;</span><br><span class="line">            Collection&lt;String&gt; discriminatedResultMapNames = entryResultMap.getDiscriminator().getDiscriminatorMap().values();</span><br><span class="line">            <span class="keyword">if</span> (discriminatedResultMapNames.contains(rm.getId())) &#123;</span><br><span class="line">              entryResultMap.forceNestedResultMaps();</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Slow but a one time cost. A better solution is welcome.</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">checkLocallyForDiscriminatedNestedResultMaps</span><span class="params">(ResultMap rm)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!rm.hasNestedResultMaps() &amp;&amp; rm.getDiscriminator() != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; entry : rm.getDiscriminator().getDiscriminatorMap().entrySet()) &#123;</span><br><span class="line">        String discriminatedResultMapName = entry.getValue();</span><br><span class="line">        <span class="keyword">if</span> (hasResultMap(discriminatedResultMapName)) &#123;</span><br><span class="line">          ResultMap discriminatedResultMap = resultMaps.get(discriminatedResultMapName);</span><br><span class="line">          <span class="keyword">if</span> (discriminatedResultMap.hasNestedResultMaps()) &#123;</span><br><span class="line">            rm.forceNestedResultMaps();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">StrictMap</span>&lt;<span class="title">V</span>&gt; <span class="keyword">extends</span> <span class="title">HashMap</span>&lt;<span class="title">String</span>, <span class="title">V</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">4950446264854982944L</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">StrictMap</span><span class="params">(String name, <span class="keyword">int</span> initialCapacity, <span class="keyword">float</span> loadFactor)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">super</span>(initialCapacity, loadFactor);</span><br><span class="line">      <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">StrictMap</span><span class="params">(String name, <span class="keyword">int</span> initialCapacity)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">super</span>(initialCapacity);</span><br><span class="line">      <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">StrictMap</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">super</span>();</span><br><span class="line">      <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">StrictMap</span><span class="params">(String name, Map&lt;String, ? extends V&gt; m)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">super</span>(m);</span><br><span class="line">      <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> V <span class="title">put</span><span class="params">(String key, V value)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (containsKey(key)) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(name + <span class="string">" already contains value for "</span> + key);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (key.contains(<span class="string">"."</span>)) &#123;</span><br><span class="line">        <span class="keyword">final</span> String shortKey = getShortName(key);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">super</span>.get(shortKey) == <span class="keyword">null</span>) &#123;</span><br><span class="line">          <span class="keyword">super</span>.put(shortKey, value);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">super</span>.put(shortKey, (V) <span class="keyword">new</span> Ambiguity(shortKey));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">super</span>.put(key, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> V <span class="title">get</span><span class="params">(Object key)</span> </span>&#123;</span><br><span class="line">      V value = <span class="keyword">super</span>.get(key);</span><br><span class="line">      <span class="keyword">if</span> (value == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(name + <span class="string">" does not contain value for "</span> + key);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (value <span class="keyword">instanceof</span> Ambiguity) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(((Ambiguity) value).getSubject() + <span class="string">" is ambiguous in "</span> + name</span><br><span class="line">            + <span class="string">" (try using the full name including the namespace, or rename one of the entries)"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getShortName</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">final</span> String[] keyParts = key.split(<span class="string">"\\."</span>);</span><br><span class="line">      <span class="keyword">return</span> keyParts[keyParts.length - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Ambiguity</span> </span>&#123;</span><br><span class="line">      <span class="keyword">final</span> <span class="keyword">private</span> String subject;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">Ambiguity</span><span class="params">(String subject)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.subject = subject;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> String <span class="title">getSubject</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> subject;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> MyBatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> MyBatis </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mybatis 中的 Configuration</title>
      <link href="/2016/10/16/%E6%8A%80%E6%9C%AF/mybatis/2016-10-16-mybatis-XMLMapperBuilder/"/>
      <url>/2016/10/16/%E6%8A%80%E6%9C%AF/mybatis/2016-10-16-mybatis-XMLMapperBuilder/</url>
      <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *    Copyright 2009-2016 the original author or authors.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *    Licensed under the Apache License, Version 2.0 (the "License");</span></span><br><span class="line"><span class="comment"> *    you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"> *    You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *    Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"> *    distributed under the License is distributed on an "AS IS" BASIS,</span></span><br><span class="line"><span class="comment"> *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"> *    See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"> *    limitations under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> org.apache.ibatis.builder.xml;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.Reader;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.builder.BaseBuilder;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.builder.BuilderException;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.builder.CacheRefResolver;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.builder.IncompleteElementException;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.builder.MapperBuilderAssistant;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.builder.ResultMapResolver;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.cache.Cache;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.ErrorContext;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.Discriminator;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.ParameterMapping;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.ParameterMode;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.ResultFlag;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.ResultMap;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.ResultMapping;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.parsing.XNode;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.parsing.XPathParser;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.type.JdbcType;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.type.TypeHandler;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Clinton Begin</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XMLMapperBuilder</span> <span class="keyword">extends</span> <span class="title">BaseBuilder</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// xml 文件解析器</span></span><br><span class="line">  <span class="keyword">private</span> XPathParser parser;</span><br><span class="line">  <span class="comment">// 用于缓存、sql参数、查询返回的结果集处理。</span></span><br><span class="line">  <span class="keyword">private</span> MapperBuilderAssistant builderAssistant;</span><br><span class="line">  <span class="keyword">private</span> Map&lt;String, XNode&gt; sqlFragments;</span><br><span class="line">  <span class="keyword">private</span> String resource;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Deprecated</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">XMLMapperBuilder</span><span class="params">(Reader reader, Configuration configuration, String resource, Map&lt;String, XNode&gt; sqlFragments, String namespace)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>(reader, configuration, resource, sqlFragments);</span><br><span class="line">    <span class="keyword">this</span>.builderAssistant.setCurrentNamespace(namespace);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Deprecated</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">XMLMapperBuilder</span><span class="params">(Reader reader, Configuration configuration, String resource, Map&lt;String, XNode&gt; sqlFragments)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>(<span class="keyword">new</span> XPathParser(reader, <span class="keyword">true</span>, configuration.getVariables(), <span class="keyword">new</span> XMLMapperEntityResolver()),</span><br><span class="line">        configuration, resource, sqlFragments);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">XMLMapperBuilder</span><span class="params">(InputStream inputStream, Configuration configuration, String resource, Map&lt;String, XNode&gt; sqlFragments, String namespace)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>(inputStream, configuration, resource, sqlFragments);</span><br><span class="line">    <span class="keyword">this</span>.builderAssistant.setCurrentNamespace(namespace);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">XMLMapperBuilder</span><span class="params">(InputStream inputStream, Configuration configuration, String resource, Map&lt;String, XNode&gt; sqlFragments)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>(<span class="keyword">new</span> XPathParser(inputStream, <span class="keyword">true</span>, configuration.getVariables(), <span class="keyword">new</span> XMLMapperEntityResolver()),</span><br><span class="line">        configuration, resource, sqlFragments);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="title">XMLMapperBuilder</span><span class="params">(XPathParser parser, Configuration configuration, String resource, Map&lt;String, XNode&gt; sqlFragments)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(configuration);</span><br><span class="line">    <span class="keyword">this</span>.builderAssistant = <span class="keyword">new</span> MapperBuilderAssistant(configuration, resource);</span><br><span class="line">    <span class="keyword">this</span>.parser = parser;</span><br><span class="line">    <span class="keyword">this</span>.sqlFragments = sqlFragments;</span><br><span class="line">    <span class="keyword">this</span>.resource = resource;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">parse</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!configuration.isResourceLoaded(resource)) &#123;</span><br><span class="line">      configurationElement(parser.evalNode(<span class="string">"/mapper"</span>));</span><br><span class="line">      configuration.addLoadedResource(resource);</span><br><span class="line">      bindMapperForNamespace();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    parsePendingResultMaps();</span><br><span class="line">    parsePendingChacheRefs();</span><br><span class="line">    parsePendingStatements();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> XNode <span class="title">getSqlFragment</span><span class="params">(String refid)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> sqlFragments.get(refid);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">configurationElement</span><span class="params">(XNode context)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      String namespace = context.getStringAttribute(<span class="string">"namespace"</span>);</span><br><span class="line">      <span class="keyword">if</span> (namespace == <span class="keyword">null</span> || namespace.equals(<span class="string">""</span>)) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> BuilderException(<span class="string">"Mapper's namespace cannot be empty"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      builderAssistant.setCurrentNamespace(namespace);</span><br><span class="line">      cacheRefElement(context.evalNode(<span class="string">"cache-ref"</span>));</span><br><span class="line">      cacheElement(context.evalNode(<span class="string">"cache"</span>));</span><br><span class="line">      parameterMapElement(context.evalNodes(<span class="string">"/mapper/parameterMap"</span>));</span><br><span class="line">      resultMapElements(context.evalNodes(<span class="string">"/mapper/resultMap"</span>));</span><br><span class="line">      sqlElement(context.evalNodes(<span class="string">"/mapper/sql"</span>));</span><br><span class="line">      buildStatementFromContext(context.evalNodes(<span class="string">"select|insert|update|delete"</span>));</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> BuilderException(<span class="string">"Error parsing Mapper XML. Cause: "</span> + e, e);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">buildStatementFromContext</span><span class="params">(List&lt;XNode&gt; list)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (configuration.getDatabaseId() != <span class="keyword">null</span>) &#123;</span><br><span class="line">      buildStatementFromContext(list, configuration.getDatabaseId());</span><br><span class="line">    &#125;</span><br><span class="line">    buildStatementFromContext(list, <span class="keyword">null</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">buildStatementFromContext</span><span class="params">(List&lt;XNode&gt; list, String requiredDatabaseId)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (XNode context : list) &#123;</span><br><span class="line">      <span class="keyword">final</span> XMLStatementBuilder statementParser = <span class="keyword">new</span> XMLStatementBuilder(configuration, builderAssistant, context, requiredDatabaseId);</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        statementParser.parseStatementNode();</span><br><span class="line">      &#125; <span class="keyword">catch</span> (IncompleteElementException e) &#123;</span><br><span class="line">        configuration.addIncompleteStatement(statementParser);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">parsePendingResultMaps</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Collection&lt;ResultMapResolver&gt; incompleteResultMaps = configuration.getIncompleteResultMaps();</span><br><span class="line">    <span class="keyword">synchronized</span> (incompleteResultMaps) &#123;</span><br><span class="line">      Iterator&lt;ResultMapResolver&gt; iter = incompleteResultMaps.iterator();</span><br><span class="line">      <span class="keyword">while</span> (iter.hasNext()) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          iter.next().resolve();</span><br><span class="line">          iter.remove();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IncompleteElementException e) &#123;</span><br><span class="line">          <span class="comment">// ResultMap is still missing a resource...</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">parsePendingChacheRefs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Collection&lt;CacheRefResolver&gt; incompleteCacheRefs = configuration.getIncompleteCacheRefs();</span><br><span class="line">    <span class="keyword">synchronized</span> (incompleteCacheRefs) &#123;</span><br><span class="line">      Iterator&lt;CacheRefResolver&gt; iter = incompleteCacheRefs.iterator();</span><br><span class="line">      <span class="keyword">while</span> (iter.hasNext()) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          iter.next().resolveCacheRef();</span><br><span class="line">          iter.remove();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IncompleteElementException e) &#123;</span><br><span class="line">          <span class="comment">// Cache ref is still missing a resource...</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">parsePendingStatements</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Collection&lt;XMLStatementBuilder&gt; incompleteStatements = configuration.getIncompleteStatements();</span><br><span class="line">    <span class="keyword">synchronized</span> (incompleteStatements) &#123;</span><br><span class="line">      Iterator&lt;XMLStatementBuilder&gt; iter = incompleteStatements.iterator();</span><br><span class="line">      <span class="keyword">while</span> (iter.hasNext()) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          iter.next().parseStatementNode();</span><br><span class="line">          iter.remove();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IncompleteElementException e) &#123;</span><br><span class="line">          <span class="comment">// Statement is still missing a resource...</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">cacheRefElement</span><span class="params">(XNode context)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (context != <span class="keyword">null</span>) &#123;</span><br><span class="line">      configuration.addCacheRef(builderAssistant.getCurrentNamespace(), context.getStringAttribute(<span class="string">"namespace"</span>));</span><br><span class="line">      CacheRefResolver cacheRefResolver = <span class="keyword">new</span> CacheRefResolver(builderAssistant, context.getStringAttribute(<span class="string">"namespace"</span>));</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        cacheRefResolver.resolveCacheRef();</span><br><span class="line">      &#125; <span class="keyword">catch</span> (IncompleteElementException e) &#123;</span><br><span class="line">        configuration.addIncompleteCacheRef(cacheRefResolver);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">cacheElement</span><span class="params">(XNode context)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (context != <span class="keyword">null</span>) &#123;</span><br><span class="line">      String type = context.getStringAttribute(<span class="string">"type"</span>, <span class="string">"PERPETUAL"</span>);</span><br><span class="line">      Class&lt;? extends Cache&gt; typeClass = typeAliasRegistry.resolveAlias(type);</span><br><span class="line">      String eviction = context.getStringAttribute(<span class="string">"eviction"</span>, <span class="string">"LRU"</span>);</span><br><span class="line">      Class&lt;? extends Cache&gt; evictionClass = typeAliasRegistry.resolveAlias(eviction);</span><br><span class="line">      Long flushInterval = context.getLongAttribute(<span class="string">"flushInterval"</span>);</span><br><span class="line">      Integer size = context.getIntAttribute(<span class="string">"size"</span>);</span><br><span class="line">      <span class="keyword">boolean</span> readWrite = !context.getBooleanAttribute(<span class="string">"readOnly"</span>, <span class="keyword">false</span>);</span><br><span class="line">      <span class="keyword">boolean</span> blocking = context.getBooleanAttribute(<span class="string">"blocking"</span>, <span class="keyword">false</span>);</span><br><span class="line">      Properties props = context.getChildrenAsProperties();</span><br><span class="line">      builderAssistant.useNewCache(typeClass, evictionClass, flushInterval, size, readWrite, blocking, props);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">parameterMapElement</span><span class="params">(List&lt;XNode&gt; list)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (XNode parameterMapNode : list) &#123;</span><br><span class="line">      String id = parameterMapNode.getStringAttribute(<span class="string">"id"</span>);</span><br><span class="line">      String type = parameterMapNode.getStringAttribute(<span class="string">"type"</span>);</span><br><span class="line">      Class&lt;?&gt; parameterClass = resolveClass(type);</span><br><span class="line">      List&lt;XNode&gt; parameterNodes = parameterMapNode.evalNodes(<span class="string">"parameter"</span>);</span><br><span class="line">      List&lt;ParameterMapping&gt; parameterMappings = <span class="keyword">new</span> ArrayList&lt;ParameterMapping&gt;();</span><br><span class="line">      <span class="keyword">for</span> (XNode parameterNode : parameterNodes) &#123;</span><br><span class="line">        String property = parameterNode.getStringAttribute(<span class="string">"property"</span>);</span><br><span class="line">        String javaType = parameterNode.getStringAttribute(<span class="string">"javaType"</span>);</span><br><span class="line">        String jdbcType = parameterNode.getStringAttribute(<span class="string">"jdbcType"</span>);</span><br><span class="line">        String resultMap = parameterNode.getStringAttribute(<span class="string">"resultMap"</span>);</span><br><span class="line">        String mode = parameterNode.getStringAttribute(<span class="string">"mode"</span>);</span><br><span class="line">        String typeHandler = parameterNode.getStringAttribute(<span class="string">"typeHandler"</span>);</span><br><span class="line">        Integer numericScale = parameterNode.getIntAttribute(<span class="string">"numericScale"</span>);</span><br><span class="line">        ParameterMode modeEnum = resolveParameterMode(mode);</span><br><span class="line">        Class&lt;?&gt; javaTypeClass = resolveClass(javaType);</span><br><span class="line">        JdbcType jdbcTypeEnum = resolveJdbcType(jdbcType);</span><br><span class="line">        <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">        Class&lt;? extends TypeHandler&lt;?&gt;&gt; typeHandlerClass = (Class&lt;? extends TypeHandler&lt;?&gt;&gt;) resolveClass(typeHandler);</span><br><span class="line">        ParameterMapping parameterMapping = builderAssistant.buildParameterMapping(parameterClass, property, javaTypeClass, jdbcTypeEnum, resultMap, modeEnum, typeHandlerClass, numericScale);</span><br><span class="line">        parameterMappings.add(parameterMapping);</span><br><span class="line">      &#125;</span><br><span class="line">      builderAssistant.addParameterMap(id, parameterClass, parameterMappings);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">resultMapElements</span><span class="params">(List&lt;XNode&gt; list)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (XNode resultMapNode : list) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        resultMapElement(resultMapNode);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (IncompleteElementException e) &#123;</span><br><span class="line">        <span class="comment">// ignore, it will be retried</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> ResultMap <span class="title">resultMapElement</span><span class="params">(XNode resultMapNode)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> resultMapElement(resultMapNode, Collections.&lt;ResultMapping&gt; emptyList());</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> ResultMap <span class="title">resultMapElement</span><span class="params">(XNode resultMapNode, List&lt;ResultMapping&gt; additionalResultMappings)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    ErrorContext.instance().activity(<span class="string">"processing "</span> + resultMapNode.getValueBasedIdentifier());</span><br><span class="line">    String id = resultMapNode.getStringAttribute(<span class="string">"id"</span>,</span><br><span class="line">        resultMapNode.getValueBasedIdentifier());</span><br><span class="line">    String type = resultMapNode.getStringAttribute(<span class="string">"type"</span>,</span><br><span class="line">        resultMapNode.getStringAttribute(<span class="string">"ofType"</span>,</span><br><span class="line">            resultMapNode.getStringAttribute(<span class="string">"resultType"</span>,</span><br><span class="line">                resultMapNode.getStringAttribute(<span class="string">"javaType"</span>))));</span><br><span class="line">    String extend = resultMapNode.getStringAttribute(<span class="string">"extends"</span>);</span><br><span class="line">    Boolean autoMapping = resultMapNode.getBooleanAttribute(<span class="string">"autoMapping"</span>);</span><br><span class="line">    Class&lt;?&gt; typeClass = resolveClass(type);</span><br><span class="line">    Discriminator discriminator = <span class="keyword">null</span>;</span><br><span class="line">    List&lt;ResultMapping&gt; resultMappings = <span class="keyword">new</span> ArrayList&lt;ResultMapping&gt;();</span><br><span class="line">    resultMappings.addAll(additionalResultMappings);</span><br><span class="line">    List&lt;XNode&gt; resultChildren = resultMapNode.getChildren();</span><br><span class="line">    <span class="keyword">for</span> (XNode resultChild : resultChildren) &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="string">"constructor"</span>.equals(resultChild.getName())) &#123;</span><br><span class="line">        processConstructorElement(resultChild, typeClass, resultMappings);</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"discriminator"</span>.equals(resultChild.getName())) &#123;</span><br><span class="line">        discriminator = processDiscriminatorElement(resultChild, typeClass, resultMappings);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        List&lt;ResultFlag&gt; flags = <span class="keyword">new</span> ArrayList&lt;ResultFlag&gt;();</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"id"</span>.equals(resultChild.getName())) &#123;</span><br><span class="line">          flags.add(ResultFlag.ID);</span><br><span class="line">        &#125;</span><br><span class="line">        resultMappings.add(buildResultMappingFromContext(resultChild, typeClass, flags));</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ResultMapResolver resultMapResolver = <span class="keyword">new</span> ResultMapResolver(builderAssistant, id, typeClass, extend, discriminator, resultMappings, autoMapping);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> resultMapResolver.resolve();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IncompleteElementException  e) &#123;</span><br><span class="line">      configuration.addIncompleteResultMap(resultMapResolver);</span><br><span class="line">      <span class="keyword">throw</span> e;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">processConstructorElement</span><span class="params">(XNode resultChild, Class&lt;?&gt; resultType, List&lt;ResultMapping&gt; resultMappings)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    List&lt;XNode&gt; argChildren = resultChild.getChildren();</span><br><span class="line">    <span class="keyword">for</span> (XNode argChild : argChildren) &#123;</span><br><span class="line">      List&lt;ResultFlag&gt; flags = <span class="keyword">new</span> ArrayList&lt;ResultFlag&gt;();</span><br><span class="line">      flags.add(ResultFlag.CONSTRUCTOR);</span><br><span class="line">      <span class="keyword">if</span> (<span class="string">"idArg"</span>.equals(argChild.getName())) &#123;</span><br><span class="line">        flags.add(ResultFlag.ID);</span><br><span class="line">      &#125;</span><br><span class="line">      resultMappings.add(buildResultMappingFromContext(argChild, resultType, flags));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> Discriminator <span class="title">processDiscriminatorElement</span><span class="params">(XNode context, Class&lt;?&gt; resultType, List&lt;ResultMapping&gt; resultMappings)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    String column = context.getStringAttribute(<span class="string">"column"</span>);</span><br><span class="line">    String javaType = context.getStringAttribute(<span class="string">"javaType"</span>);</span><br><span class="line">    String jdbcType = context.getStringAttribute(<span class="string">"jdbcType"</span>);</span><br><span class="line">    String typeHandler = context.getStringAttribute(<span class="string">"typeHandler"</span>);</span><br><span class="line">    Class&lt;?&gt; javaTypeClass = resolveClass(javaType);</span><br><span class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">    Class&lt;? extends TypeHandler&lt;?&gt;&gt; typeHandlerClass = (Class&lt;? extends TypeHandler&lt;?&gt;&gt;) resolveClass(typeHandler);</span><br><span class="line">    JdbcType jdbcTypeEnum = resolveJdbcType(jdbcType);</span><br><span class="line">    Map&lt;String, String&gt; discriminatorMap = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">    <span class="keyword">for</span> (XNode caseChild : context.getChildren()) &#123;</span><br><span class="line">      String value = caseChild.getStringAttribute(<span class="string">"value"</span>);</span><br><span class="line">      String resultMap = caseChild.getStringAttribute(<span class="string">"resultMap"</span>, processNestedResultMappings(caseChild, resultMappings));</span><br><span class="line">      discriminatorMap.put(value, resultMap);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> builderAssistant.buildDiscriminator(resultType, column, javaTypeClass, jdbcTypeEnum, typeHandlerClass, discriminatorMap);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">sqlElement</span><span class="params">(List&lt;XNode&gt; list)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (configuration.getDatabaseId() != <span class="keyword">null</span>) &#123;</span><br><span class="line">      sqlElement(list, configuration.getDatabaseId());</span><br><span class="line">    &#125;</span><br><span class="line">    sqlElement(list, <span class="keyword">null</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">sqlElement</span><span class="params">(List&lt;XNode&gt; list, String requiredDatabaseId)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (XNode context : list) &#123;</span><br><span class="line">      String databaseId = context.getStringAttribute(<span class="string">"databaseId"</span>);</span><br><span class="line">      String id = context.getStringAttribute(<span class="string">"id"</span>);</span><br><span class="line">      id = builderAssistant.applyCurrentNamespace(id, <span class="keyword">false</span>);</span><br><span class="line">      <span class="keyword">if</span> (databaseIdMatchesCurrent(id, databaseId, requiredDatabaseId)) &#123;</span><br><span class="line">        sqlFragments.put(id, context);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">databaseIdMatchesCurrent</span><span class="params">(String id, String databaseId, String requiredDatabaseId)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (requiredDatabaseId != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!requiredDatabaseId.equals(databaseId)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (databaseId != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// skip this fragment if there is a previous one with a not null databaseId</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.sqlFragments.containsKey(id)) &#123;</span><br><span class="line">        XNode context = <span class="keyword">this</span>.sqlFragments.get(id);</span><br><span class="line">        <span class="keyword">if</span> (context.getStringAttribute(<span class="string">"databaseId"</span>) != <span class="keyword">null</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> ResultMapping <span class="title">buildResultMappingFromContext</span><span class="params">(XNode context, Class&lt;?&gt; resultType, List&lt;ResultFlag&gt; flags)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    String property = context.getStringAttribute(<span class="string">"property"</span>);</span><br><span class="line">    String column = context.getStringAttribute(<span class="string">"column"</span>);</span><br><span class="line">    String javaType = context.getStringAttribute(<span class="string">"javaType"</span>);</span><br><span class="line">    String jdbcType = context.getStringAttribute(<span class="string">"jdbcType"</span>);</span><br><span class="line">    String nestedSelect = context.getStringAttribute(<span class="string">"select"</span>);</span><br><span class="line">    String nestedResultMap = context.getStringAttribute(<span class="string">"resultMap"</span>,</span><br><span class="line">        processNestedResultMappings(context, Collections.&lt;ResultMapping&gt; emptyList()));</span><br><span class="line">    String notNullColumn = context.getStringAttribute(<span class="string">"notNullColumn"</span>);</span><br><span class="line">    String columnPrefix = context.getStringAttribute(<span class="string">"columnPrefix"</span>);</span><br><span class="line">    String typeHandler = context.getStringAttribute(<span class="string">"typeHandler"</span>);</span><br><span class="line">    String resultSet = context.getStringAttribute(<span class="string">"resultSet"</span>);</span><br><span class="line">    String foreignColumn = context.getStringAttribute(<span class="string">"foreignColumn"</span>);</span><br><span class="line">    <span class="keyword">boolean</span> lazy = <span class="string">"lazy"</span>.equals(context.getStringAttribute(<span class="string">"fetchType"</span>, configuration.isLazyLoadingEnabled() ? <span class="string">"lazy"</span> : <span class="string">"eager"</span>));</span><br><span class="line">    Class&lt;?&gt; javaTypeClass = resolveClass(javaType);</span><br><span class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">    Class&lt;? extends TypeHandler&lt;?&gt;&gt; typeHandlerClass = (Class&lt;? extends TypeHandler&lt;?&gt;&gt;) resolveClass(typeHandler);</span><br><span class="line">    JdbcType jdbcTypeEnum = resolveJdbcType(jdbcType);</span><br><span class="line">    <span class="keyword">return</span> builderAssistant.buildResultMapping(resultType, property, column, javaTypeClass, jdbcTypeEnum, nestedSelect, nestedResultMap, notNullColumn, columnPrefix, typeHandlerClass, flags, resultSet, foreignColumn, lazy);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> String <span class="title">processNestedResultMappings</span><span class="params">(XNode context, List&lt;ResultMapping&gt; resultMappings)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"association"</span>.equals(context.getName())</span><br><span class="line">        || <span class="string">"collection"</span>.equals(context.getName())</span><br><span class="line">        || <span class="string">"case"</span>.equals(context.getName())) &#123;</span><br><span class="line">      <span class="keyword">if</span> (context.getStringAttribute(<span class="string">"select"</span>) == <span class="keyword">null</span>) &#123;</span><br><span class="line">        ResultMap resultMap = resultMapElement(context, resultMappings);</span><br><span class="line">        <span class="keyword">return</span> resultMap.getId();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">bindMapperForNamespace</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    String namespace = builderAssistant.getCurrentNamespace();</span><br><span class="line">    <span class="keyword">if</span> (namespace != <span class="keyword">null</span>) &#123;</span><br><span class="line">      Class&lt;?&gt; boundType = <span class="keyword">null</span>;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        boundType = Resources.classForName(namespace);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">        <span class="comment">//ignore, bound type is not required</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (boundType != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!configuration.hasMapper(boundType)) &#123;</span><br><span class="line">          <span class="comment">// Spring may not know the real resource name so we set a flag</span></span><br><span class="line">          <span class="comment">// to prevent loading again this resource from the mapper interface</span></span><br><span class="line">          <span class="comment">// look at MapperAnnotationBuilder#loadXmlResource</span></span><br><span class="line">          configuration.addLoadedResource(<span class="string">"namespace:"</span> + namespace);</span><br><span class="line">          configuration.addMapper(boundType);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> MyBatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> MyBatis </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mybatis 中的 MapperMethod</title>
      <link href="/2016/10/16/%E6%8A%80%E6%9C%AF/mybatis/2016-10-16-mybatis-MapperMethod/"/>
      <url>/2016/10/16/%E6%8A%80%E6%9C%AF/mybatis/2016-10-16-mybatis-MapperMethod/</url>
      <content type="html"><![CDATA[<p>mybatis 中的 <code>MapperMethod</code> 源码阅读</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *    Copyright 2009-2016 the original author or authors.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *    Licensed under the Apache License, Version 2.0 (the "License");</span></span><br><span class="line"><span class="comment"> *    you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"> *    You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *    Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"> *    distributed under the License is distributed on an "AS IS" BASIS,</span></span><br><span class="line"><span class="comment"> *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"> *    See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"> *    limitations under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> org.apache.ibatis.binding;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Flush;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.MapKey;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.cursor.Cursor;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.MappedStatement;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.SqlCommandType;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.MetaObject;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.ParamNameResolver;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.TypeParameterResolver;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.ResultHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.RowBounds;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Array;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.ParameterizedType;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Type;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Clinton Begin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Eduardo Macarron</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Lasse Voss</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  mybatis 核心类，封装了 SqlSession 的操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MapperMethod</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// mybatis 中 封装了的sql 指令的类型</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> SqlCommand command;</span><br><span class="line">  <span class="comment">// mybatis 中封装了方法返回值信息，参数信息等的model</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> MethodSignature method;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">MapperMethod</span><span class="params">(Class&lt;?&gt; mapperInterface, Method method, Configuration config)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.command = <span class="keyword">new</span> SqlCommand(config, mapperInterface, method);</span><br><span class="line">    <span class="keyword">this</span>.method = <span class="keyword">new</span> MethodSignature(config, mapperInterface, method);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Object <span class="title">execute</span><span class="params">(SqlSession sqlSession, Object[] args)</span> </span>&#123;</span><br><span class="line">    Object result;</span><br><span class="line">    <span class="comment">// 根据命令类型分发处理</span></span><br><span class="line">    <span class="keyword">switch</span> (command.getType()) &#123;</span><br><span class="line">      <span class="keyword">case</span> INSERT: &#123;</span><br><span class="line">        <span class="comment">// 这里将命令的参数转换为sql 执行语句的参数， 这里基本每个case 都会执行这句指令</span></span><br><span class="line">        <span class="comment">// 不知道为什么这里不把这条语句提取到 switch 语句之前</span></span><br><span class="line">      Object param = method.convertArgsToSqlCommandParam(args);</span><br><span class="line">        result = rowCountResult(sqlSession.insert(command.getName(), param));</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">case</span> UPDATE: &#123;</span><br><span class="line">        Object param = method.convertArgsToSqlCommandParam(args);</span><br><span class="line">        result = rowCountResult(sqlSession.update(command.getName(), param));</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">case</span> DELETE: &#123;</span><br><span class="line">        Object param = method.convertArgsToSqlCommandParam(args);</span><br><span class="line">        result = rowCountResult(sqlSession.delete(command.getName(), param));</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">case</span> SELECT:</span><br><span class="line">        <span class="keyword">if</span> (method.returnsVoid() &amp;&amp; method.hasResultHandler()) &#123;</span><br><span class="line">          executeWithResultHandler(sqlSession, args);</span><br><span class="line">          result = <span class="keyword">null</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (method.returnsMany()) &#123;</span><br><span class="line">          result = executeForMany(sqlSession, args);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (method.returnsMap()) &#123;</span><br><span class="line">          result = executeForMap(sqlSession, args);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (method.returnsCursor()) &#123;</span><br><span class="line">          result = executeForCursor(sqlSession, args);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          Object param = method.convertArgsToSqlCommandParam(args);</span><br><span class="line">          result = sqlSession.selectOne(command.getName(), param);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> FLUSH:</span><br><span class="line">        result = sqlSession.flushStatements();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> BindingException(<span class="string">"Unknown execution method for: "</span> + command.getName());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (result == <span class="keyword">null</span> &amp;&amp; method.getReturnType().isPrimitive() &amp;&amp; !method.returnsVoid()) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> BindingException(<span class="string">"Mapper method '"</span> + command.getName()</span><br><span class="line">          + <span class="string">" attempted to return null from a method with a primitive return type ("</span> + method.getReturnType() + <span class="string">")."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 封装sql 指令的处理结果</span></span><br><span class="line">  <span class="function"><span class="keyword">private</span> Object <span class="title">rowCountResult</span><span class="params">(<span class="keyword">int</span> rowCount)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> Object result;</span><br><span class="line">    <span class="keyword">if</span> (method.returnsVoid()) &#123;</span><br><span class="line">      result = <span class="keyword">null</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Integer.class.equals(method.getReturnType()) || Integer.TYPE.equals(method.getReturnType())) &#123;</span><br><span class="line">      result = rowCount;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Long.class.equals(method.getReturnType()) || Long.TYPE.equals(method.getReturnType())) &#123;</span><br><span class="line">      result = (<span class="keyword">long</span>)rowCount;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Boolean.class.equals(method.getReturnType()) || Boolean.TYPE.equals(method.getReturnType())) &#123;</span><br><span class="line">      result = rowCount &gt; <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> BindingException(<span class="string">"Mapper method '"</span> + command.getName() + <span class="string">"' has an unsupported return type: "</span> + method.getReturnType());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">executeWithResultHandler</span><span class="params">(SqlSession sqlSession, Object[] args)</span> </span>&#123;</span><br><span class="line">    MappedStatement ms = sqlSession.getConfiguration().getMappedStatement(command.getName());</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">void</span>.class.equals(ms.getResultMaps().get(<span class="number">0</span>).getType())) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> BindingException(<span class="string">"method "</span> + command.getName()</span><br><span class="line">          + <span class="string">" needs either a @ResultMap annotation, a @ResultType annotation,"</span></span><br><span class="line">          + <span class="string">" or a resultType attribute in XML so a ResultHandler can be used as a parameter."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    Object param = method.convertArgsToSqlCommandParam(args);</span><br><span class="line">    <span class="keyword">if</span> (method.hasRowBounds()) &#123;</span><br><span class="line">      RowBounds rowBounds = method.extractRowBounds(args);</span><br><span class="line">      sqlSession.select(command.getName(), param, rowBounds, method.extractResultHandler(args));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      sqlSession.select(command.getName(), param, method.extractResultHandler(args));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> &lt;E&gt; <span class="function">Object <span class="title">executeForMany</span><span class="params">(SqlSession sqlSession, Object[] args)</span> </span>&#123;</span><br><span class="line">    List&lt;E&gt; result;</span><br><span class="line">    Object param = method.convertArgsToSqlCommandParam(args);</span><br><span class="line">    <span class="keyword">if</span> (method.hasRowBounds()) &#123;</span><br><span class="line">      RowBounds rowBounds = method.extractRowBounds(args);</span><br><span class="line">      result = sqlSession.&lt;E&gt;selectList(command.getName(), param, rowBounds);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      result = sqlSession.&lt;E&gt;selectList(command.getName(), param);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// issue #510 Collections &amp; arrays support</span></span><br><span class="line">    <span class="keyword">if</span> (!method.getReturnType().isAssignableFrom(result.getClass())) &#123;</span><br><span class="line">      <span class="keyword">if</span> (method.getReturnType().isArray()) &#123;</span><br><span class="line">        <span class="keyword">return</span> convertToArray(result);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> convertToDeclaredCollection(sqlSession.getConfiguration(), result);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> &lt;T&gt; <span class="function">Cursor&lt;T&gt; <span class="title">executeForCursor</span><span class="params">(SqlSession sqlSession, Object[] args)</span> </span>&#123;</span><br><span class="line">    Cursor&lt;T&gt; result;</span><br><span class="line">    Object param = method.convertArgsToSqlCommandParam(args);</span><br><span class="line">    <span class="keyword">if</span> (method.hasRowBounds()) &#123;</span><br><span class="line">      RowBounds rowBounds = method.extractRowBounds(args);</span><br><span class="line">      result = sqlSession.&lt;T&gt;selectCursor(command.getName(), param, rowBounds);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      result = sqlSession.&lt;T&gt;selectCursor(command.getName(), param);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> &lt;E&gt; <span class="function">Object <span class="title">convertToDeclaredCollection</span><span class="params">(Configuration config, List&lt;E&gt; list)</span> </span>&#123;</span><br><span class="line">    Object collection = config.getObjectFactory().create(method.getReturnType());</span><br><span class="line">    MetaObject metaObject = config.newMetaObject(collection);</span><br><span class="line">    metaObject.addAll(list);</span><br><span class="line">    <span class="keyword">return</span> collection;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">  <span class="keyword">private</span> &lt;E&gt; E[] convertToArray(List&lt;E&gt; list) &#123;</span><br><span class="line">    E[] array = (E[]) Array.newInstance(method.getReturnType().getComponentType(), list.size());</span><br><span class="line">    array = list.toArray(array);</span><br><span class="line">    <span class="keyword">return</span> array;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> &lt;K, V&gt; <span class="function">Map&lt;K, V&gt; <span class="title">executeForMap</span><span class="params">(SqlSession sqlSession, Object[] args)</span> </span>&#123;</span><br><span class="line">    Map&lt;K, V&gt; result;</span><br><span class="line">    Object param = method.convertArgsToSqlCommandParam(args);</span><br><span class="line">    <span class="keyword">if</span> (method.hasRowBounds()) &#123;</span><br><span class="line">      RowBounds rowBounds = method.extractRowBounds(args);</span><br><span class="line">      result = sqlSession.&lt;K, V&gt;selectMap(command.getName(), param, method.getMapKey(), rowBounds);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      result = sqlSession.&lt;K, V&gt;selectMap(command.getName(), param, method.getMapKey());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ParamMap</span>&lt;<span class="title">V</span>&gt; <span class="keyword">extends</span> <span class="title">HashMap</span>&lt;<span class="title">String</span>, <span class="title">V</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">2212268410512043556L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> V <span class="title">get</span><span class="params">(Object key)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (!<span class="keyword">super</span>.containsKey(key)) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> BindingException(<span class="string">"Parameter '"</span> + key + <span class="string">"' not found. Available parameters are "</span> + keySet());</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">super</span>.get(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SqlCommand</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// mapper 接口中的方法的全限定名</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String name;</span><br><span class="line">    <span class="comment">// sql 指令的类型，如：INSERT、SELECT、UPDATE、DELETE</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> SqlCommandType type;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SqlCommand</span><span class="params">(Configuration configuration, Class&lt;?&gt; mapperInterface, Method method)</span> </span>&#123;</span><br><span class="line">      String statementName = mapperInterface.getName() + <span class="string">"."</span> + method.getName();</span><br><span class="line">      MappedStatement ms = <span class="keyword">null</span>;</span><br><span class="line">      <span class="keyword">if</span> (configuration.hasStatement(statementName)) &#123;</span><br><span class="line">        ms = configuration.getMappedStatement(statementName);</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!mapperInterface.equals(method.getDeclaringClass())) &#123; <span class="comment">// issue #35</span></span><br><span class="line">        String parentStatementName = method.getDeclaringClass().getName() + <span class="string">"."</span> + method.getName();</span><br><span class="line">        <span class="keyword">if</span> (configuration.hasStatement(parentStatementName)) &#123;</span><br><span class="line">          ms = configuration.getMappedStatement(parentStatementName);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (ms == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(method.getAnnotation(Flush.class) != <span class="keyword">null</span>)&#123;</span><br><span class="line">          name = <span class="keyword">null</span>;</span><br><span class="line">          type = SqlCommandType.FLUSH;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> BindingException(<span class="string">"Invalid bound statement (not found): "</span> + statementName);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        name = ms.getId();</span><br><span class="line">        type = ms.getSqlCommandType();</span><br><span class="line">        <span class="keyword">if</span> (type == SqlCommandType.UNKNOWN) &#123;</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> BindingException(<span class="string">"Unknown execution method for: "</span> + name);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlCommandType <span class="title">getType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> type;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">MethodSignature</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">boolean</span> returnsMany;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">boolean</span> returnsMap;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">boolean</span> returnsVoid;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">boolean</span> returnsCursor;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Class&lt;?&gt; returnType;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String mapKey;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Integer resultHandlerIndex;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Integer rowBoundsIndex;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ParamNameResolver paramNameResolver;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MethodSignature</span><span class="params">(Configuration configuration, Class&lt;?&gt; mapperInterface, Method method)</span> </span>&#123;</span><br><span class="line">      Type resolvedReturnType = TypeParameterResolver.resolveReturnType(method, mapperInterface);</span><br><span class="line">      <span class="keyword">if</span> (resolvedReturnType <span class="keyword">instanceof</span> Class&lt;?&gt;) &#123;</span><br><span class="line">        <span class="keyword">this</span>.returnType = (Class&lt;?&gt;) resolvedReturnType;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resolvedReturnType <span class="keyword">instanceof</span> ParameterizedType) &#123;</span><br><span class="line">        <span class="keyword">this</span>.returnType = (Class&lt;?&gt;) ((ParameterizedType) resolvedReturnType).getRawType();</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.returnType = method.getReturnType();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">this</span>.returnsVoid = <span class="keyword">void</span>.class.equals(<span class="keyword">this</span>.returnType);</span><br><span class="line">      <span class="keyword">this</span>.returnsMany = (configuration.getObjectFactory().isCollection(<span class="keyword">this</span>.returnType) || <span class="keyword">this</span>.returnType.isArray());</span><br><span class="line">      <span class="keyword">this</span>.returnsCursor = Cursor.class.equals(<span class="keyword">this</span>.returnType);</span><br><span class="line">      <span class="keyword">this</span>.mapKey = getMapKey(method);</span><br><span class="line">      <span class="keyword">this</span>.returnsMap = (<span class="keyword">this</span>.mapKey != <span class="keyword">null</span>);</span><br><span class="line">      <span class="keyword">this</span>.rowBoundsIndex = getUniqueParamIndex(method, RowBounds.class);</span><br><span class="line">      <span class="keyword">this</span>.resultHandlerIndex = getUniqueParamIndex(method, ResultHandler.class);</span><br><span class="line">      <span class="keyword">this</span>.paramNameResolver = <span class="keyword">new</span> ParamNameResolver(configuration, method);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">convertArgsToSqlCommandParam</span><span class="params">(Object[] args)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> paramNameResolver.getNamedParams(args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasRowBounds</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> rowBoundsIndex != <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RowBounds <span class="title">extractRowBounds</span><span class="params">(Object[] args)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> hasRowBounds() ? (RowBounds) args[rowBoundsIndex] : <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasResultHandler</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> resultHandlerIndex != <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResultHandler <span class="title">extractResultHandler</span><span class="params">(Object[] args)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> hasResultHandler() ? (ResultHandler) args[resultHandlerIndex] : <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMapKey</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> mapKey;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Class&lt;?&gt; getReturnType() &#123;</span><br><span class="line">      <span class="keyword">return</span> returnType;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">returnsMany</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> returnsMany;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">returnsMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> returnsMap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">returnsVoid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> returnsVoid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">returnsCursor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> returnsCursor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Integer <span class="title">getUniqueParamIndex</span><span class="params">(Method method, Class&lt;?&gt; paramType)</span> </span>&#123;</span><br><span class="line">      Integer index = <span class="keyword">null</span>;</span><br><span class="line">      <span class="keyword">final</span> Class&lt;?&gt;[] argTypes = method.getParameterTypes();</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; argTypes.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (paramType.isAssignableFrom(argTypes[i])) &#123;</span><br><span class="line">          <span class="keyword">if</span> (index == <span class="keyword">null</span>) &#123;</span><br><span class="line">            index = i;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BindingException(method.getName() + <span class="string">" cannot have multiple "</span> + paramType.getSimpleName() + <span class="string">" parameters"</span>);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> index;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getMapKey</span><span class="params">(Method method)</span> </span>&#123;</span><br><span class="line">      String mapKey = <span class="keyword">null</span>;</span><br><span class="line">      <span class="keyword">if</span> (Map.class.isAssignableFrom(method.getReturnType())) &#123;</span><br><span class="line">        <span class="keyword">final</span> MapKey mapKeyAnnotation = method.getAnnotation(MapKey.class);</span><br><span class="line">        <span class="keyword">if</span> (mapKeyAnnotation != <span class="keyword">null</span>) &#123;</span><br><span class="line">          mapKey = mapKeyAnnotation.value();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> mapKey;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> MyBatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> MyBatis </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mybatis 中的 MapperAnnotationBuilder</title>
      <link href="/2016/10/16/%E6%8A%80%E6%9C%AF/mybatis/2016-10-16-mybatis-MapperAnnotationBuilder/"/>
      <url>/2016/10/16/%E6%8A%80%E6%9C%AF/mybatis/2016-10-16-mybatis-MapperAnnotationBuilder/</url>
      <content type="html"><![CDATA[<p>mybatis 中的 <code>MapperAnnotationBuilder</code> 源码阅读</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *    Copyright 2009-2016 the original author or authors.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *    Licensed under the Apache License, Version 2.0 (the "License");</span></span><br><span class="line"><span class="comment"> *    you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"> *    You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *    Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"> *    distributed under the License is distributed on an "AS IS" BASIS,</span></span><br><span class="line"><span class="comment"> *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"> *    See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"> *    limitations under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> org.apache.ibatis.builder.annotation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Annotation;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Array;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.GenericArrayType;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.ParameterizedType;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Type;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Locale;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Arg;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.CacheNamespace;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.CacheNamespaceRef;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Case;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.ConstructorArgs;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Delete;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.DeleteProvider;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Insert;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.InsertProvider;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Lang;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.MapKey;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Options;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Result;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.ResultMap;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.ResultType;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Results;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.SelectKey;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.SelectProvider;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.TypeDiscriminator;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Update;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.UpdateProvider;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Options.FlushCachePolicy;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.binding.BindingException;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.binding.MapperMethod.ParamMap;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.builder.BuilderException;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.builder.IncompleteElementException;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.builder.MapperBuilderAssistant;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.builder.xml.XMLMapperBuilder;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.cursor.Cursor;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.keygen.Jdbc3KeyGenerator;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.keygen.KeyGenerator;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.keygen.NoKeyGenerator;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.keygen.SelectKeyGenerator;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.Discriminator;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.FetchType;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.MappedStatement;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.ResultFlag;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.ResultMapping;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.ResultSetType;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.SqlCommandType;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.SqlSource;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.StatementType;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.TypeParameterResolver;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.scripting.LanguageDriver;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.ResultHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.RowBounds;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.type.JdbcType;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.type.TypeHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.type.UnknownTypeHandler;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Clinton Begin</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MapperAnnotationBuilder</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 保存sql 语句的注解 @Select @Insert @Update @Delete 这些注解只能修饰Mapper 接口中的方法</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Set&lt;Class&lt;? extends Annotation&gt;&gt; sqlAnnotationTypes = <span class="keyword">new</span> HashSet&lt;Class&lt;? extends Annotation&gt;&gt;();</span><br><span class="line">  <span class="comment">// @SelectProvider @InsertProvider @UpdateProvider @DeleteProvider</span></span><br><span class="line">  <span class="comment">// 这些注解只能修饰方法，</span></span><br><span class="line">  <span class="comment">// 注解中的 type 是提供执行 sql 方法的接口的Class   method 是接口中的方法</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Set&lt;Class&lt;? extends Annotation&gt;&gt; sqlProviderAnnotationTypes = <span class="keyword">new</span> HashSet&lt;Class&lt;? extends Annotation&gt;&gt;();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> Configuration configuration;</span><br><span class="line">  <span class="comment">// 用于缓存、sql参数、查询返回的结果集处理。</span></span><br><span class="line">  <span class="keyword">private</span> MapperBuilderAssistant assistant;</span><br><span class="line">  <span class="keyword">private</span> Class&lt;?&gt; type;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">MapperAnnotationBuilder</span><span class="params">(Configuration configuration, Class&lt;?&gt; type)</span> </span>&#123;</span><br><span class="line">    String resource = type.getName().replace(<span class="string">'.'</span>, <span class="string">'/'</span>) + <span class="string">".java (best guess)"</span>;</span><br><span class="line">    <span class="keyword">this</span>.assistant = <span class="keyword">new</span> MapperBuilderAssistant(configuration, resource);</span><br><span class="line">    <span class="keyword">this</span>.configuration = configuration;</span><br><span class="line">    <span class="keyword">this</span>.type = type;</span><br><span class="line"></span><br><span class="line">    sqlAnnotationTypes.add(Select.class);</span><br><span class="line">    sqlAnnotationTypes.add(Insert.class);</span><br><span class="line">    sqlAnnotationTypes.add(Update.class);</span><br><span class="line">    sqlAnnotationTypes.add(Delete.class);</span><br><span class="line"></span><br><span class="line">    sqlProviderAnnotationTypes.add(SelectProvider.class);</span><br><span class="line">    sqlProviderAnnotationTypes.add(InsertProvider.class);</span><br><span class="line">    sqlProviderAnnotationTypes.add(UpdateProvider.class);</span><br><span class="line">    sqlProviderAnnotationTypes.add(DeleteProvider.class);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">parse</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    String resource = type.toString();</span><br><span class="line">    <span class="comment">// 判断 Mapper Interface 是否已经加载在 Configuration 中</span></span><br><span class="line">    <span class="keyword">if</span> (!configuration.isResourceLoaded(resource)) &#123;</span><br><span class="line">      <span class="comment">// 加载 mybatis mapper xml 文件</span></span><br><span class="line">      loadXmlResource();</span><br><span class="line">      configuration.addLoadedResource(resource);</span><br><span class="line">      <span class="comment">// 设置当前 mapper 的 namespace</span></span><br><span class="line">      assistant.setCurrentNamespace(type.getName());</span><br><span class="line">      <span class="comment">// 解析被 `@CacheNamespace` 修饰的 `Mapper` 接口</span></span><br><span class="line">      <span class="comment">// MapperBuilderAssistant 注册使用当前的注册二次缓存</span></span><br><span class="line">      parseCache();</span><br><span class="line">      <span class="comment">// 解析 @CacheNamespaceRef 修饰的 Mapper 接口</span></span><br><span class="line">      <span class="comment">// 注册二次缓存</span></span><br><span class="line">      parseCacheRef();</span><br><span class="line">      Method[] methods = type.getMethods();</span><br><span class="line">      <span class="keyword">for</span> (Method method : methods) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          <span class="comment">// issue #237</span></span><br><span class="line">          <span class="comment">// 判断接口中的方法是否是桥接方法</span></span><br><span class="line">          <span class="comment">// 桥接方法：子类中继承父类中泛型擦除为Object 的方法</span></span><br><span class="line">          <span class="comment">// http://berdy.iteye.com/blog/810488</span></span><br><span class="line">          <span class="keyword">if</span> (!method.isBridge()) &#123;</span><br><span class="line">            <span class="comment">// 解析 Mapper 接口中的方法上的@Option @SelectKey @ResultMap 注解</span></span><br><span class="line">            parseStatement(method);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IncompleteElementException e) &#123;</span><br><span class="line">          configuration.addIncompleteMethod(<span class="keyword">new</span> MethodResolver(<span class="keyword">this</span>, method));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 处理 未处理完成的 Mapper Interface 的方法</span></span><br><span class="line">    parsePendingMethods();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">parsePendingMethods</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Collection&lt;MethodResolver&gt; incompleteMethods = configuration.getIncompleteMethods();</span><br><span class="line">    <span class="keyword">synchronized</span> (incompleteMethods) &#123;</span><br><span class="line">      Iterator&lt;MethodResolver&gt; iter = incompleteMethods.iterator();</span><br><span class="line">      <span class="keyword">while</span> (iter.hasNext()) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          iter.next().resolve();</span><br><span class="line">          iter.remove();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IncompleteElementException e) &#123;</span><br><span class="line">          <span class="comment">// This method is still missing a resource</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">loadXmlResource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Spring may not know the real resource name so we check a flag</span></span><br><span class="line">    <span class="comment">// to prevent loading again a resource twice</span></span><br><span class="line">    <span class="comment">// this flag is set at XMLMapperBuilder#bindMapperForNamespace</span></span><br><span class="line">    <span class="keyword">if</span> (!configuration.isResourceLoaded(<span class="string">"namespace:"</span> + type.getName())) &#123;</span><br><span class="line">      String xmlResource = type.getName().replace(<span class="string">'.'</span>, <span class="string">'/'</span>) + <span class="string">".xml"</span>;</span><br><span class="line">      InputStream inputStream = <span class="keyword">null</span>;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        inputStream = Resources.getResourceAsStream(type.getClassLoader(), xmlResource);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        <span class="comment">// ignore, resource is not required</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (inputStream != <span class="keyword">null</span>) &#123;</span><br><span class="line">        XMLMapperBuilder xmlParser = <span class="keyword">new</span> XMLMapperBuilder(inputStream, assistant.getConfiguration(), xmlResource, configuration.getSqlFragments(), type.getName());</span><br><span class="line">        xmlParser.parse();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">parseCache</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    CacheNamespace cacheDomain = type.getAnnotation(CacheNamespace.class);</span><br><span class="line">    <span class="keyword">if</span> (cacheDomain != <span class="keyword">null</span>) &#123;</span><br><span class="line">      Integer size = cacheDomain.size() == <span class="number">0</span> ? <span class="keyword">null</span> : cacheDomain.size();</span><br><span class="line">      Long flushInterval = cacheDomain.flushInterval() == <span class="number">0</span> ? <span class="keyword">null</span> : cacheDomain.flushInterval();</span><br><span class="line">      assistant.useNewCache(cacheDomain.implementation(), cacheDomain.eviction(), flushInterval, size, cacheDomain.readWrite(), cacheDomain.blocking(), <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">parseCacheRef</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    CacheNamespaceRef cacheDomainRef = type.getAnnotation(CacheNamespaceRef.class);</span><br><span class="line">    <span class="keyword">if</span> (cacheDomainRef != <span class="keyword">null</span>) &#123;</span><br><span class="line">      assistant.useCacheRef(cacheDomainRef.value().getName());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> String <span class="title">parseResultMap</span><span class="params">(Method method)</span> </span>&#123;</span><br><span class="line">    Class&lt;?&gt; returnType = getReturnType(method);</span><br><span class="line">    ConstructorArgs args = method.getAnnotation(ConstructorArgs.class);</span><br><span class="line">    Results results = method.getAnnotation(Results.class);</span><br><span class="line">    TypeDiscriminator typeDiscriminator = method.getAnnotation(TypeDiscriminator.class);</span><br><span class="line">    String resultMapId = generateResultMapName(method);</span><br><span class="line">    applyResultMap(resultMapId, returnType, argsIf(args), resultsIf(results), typeDiscriminator);</span><br><span class="line">    <span class="keyword">return</span> resultMapId;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> String <span class="title">generateResultMapName</span><span class="params">(Method method)</span> </span>&#123;</span><br><span class="line">    Results results = method.getAnnotation(Results.class);</span><br><span class="line">    <span class="keyword">if</span> (results != <span class="keyword">null</span> &amp;&amp; !results.id().isEmpty()) &#123;</span><br><span class="line">      <span class="keyword">return</span> type.getName() + <span class="string">"."</span> + results.id();</span><br><span class="line">    &#125;</span><br><span class="line">    StringBuilder suffix = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">    <span class="keyword">for</span> (Class&lt;?&gt; c : method.getParameterTypes()) &#123;</span><br><span class="line">      suffix.append(<span class="string">"-"</span>);</span><br><span class="line">      suffix.append(c.getSimpleName());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (suffix.length() &lt; <span class="number">1</span>) &#123;</span><br><span class="line">      suffix.append(<span class="string">"-void"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> type.getName() + <span class="string">"."</span> + method.getName() + suffix;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">applyResultMap</span><span class="params">(String resultMapId, Class&lt;?&gt; returnType, Arg[] args, Result[] results, TypeDiscriminator discriminator)</span> </span>&#123;</span><br><span class="line">    List&lt;ResultMapping&gt; resultMappings = <span class="keyword">new</span> ArrayList&lt;ResultMapping&gt;();</span><br><span class="line">    applyConstructorArgs(args, returnType, resultMappings);</span><br><span class="line">    applyResults(results, returnType, resultMappings);</span><br><span class="line">    Discriminator disc = applyDiscriminator(resultMapId, returnType, discriminator);</span><br><span class="line">    <span class="comment">// TODO add AutoMappingBehaviour</span></span><br><span class="line">    assistant.addResultMap(resultMapId, returnType, <span class="keyword">null</span>, disc, resultMappings, <span class="keyword">null</span>);</span><br><span class="line">    createDiscriminatorResultMaps(resultMapId, returnType, discriminator);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">createDiscriminatorResultMaps</span><span class="params">(String resultMapId, Class&lt;?&gt; resultType, TypeDiscriminator discriminator)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (discriminator != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">for</span> (Case c : discriminator.cases()) &#123;</span><br><span class="line">        String caseResultMapId = resultMapId + <span class="string">"-"</span> + c.value();</span><br><span class="line">        List&lt;ResultMapping&gt; resultMappings = <span class="keyword">new</span> ArrayList&lt;ResultMapping&gt;();</span><br><span class="line">        <span class="comment">// issue #136</span></span><br><span class="line">        applyConstructorArgs(c.constructArgs(), resultType, resultMappings);</span><br><span class="line">        applyResults(c.results(), resultType, resultMappings);</span><br><span class="line">        <span class="comment">// TODO add AutoMappingBehaviour</span></span><br><span class="line">        assistant.addResultMap(caseResultMapId, c.type(), resultMapId, <span class="keyword">null</span>, resultMappings, <span class="keyword">null</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> Discriminator <span class="title">applyDiscriminator</span><span class="params">(String resultMapId, Class&lt;?&gt; resultType, TypeDiscriminator discriminator)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (discriminator != <span class="keyword">null</span>) &#123;</span><br><span class="line">      String column = discriminator.column();</span><br><span class="line">      Class&lt;?&gt; javaType = discriminator.javaType() == <span class="keyword">void</span>.class ? String.class : discriminator.javaType();</span><br><span class="line">      JdbcType jdbcType = discriminator.jdbcType() == JdbcType.UNDEFINED ? <span class="keyword">null</span> : discriminator.jdbcType();</span><br><span class="line">      <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">      Class&lt;? extends TypeHandler&lt;?&gt;&gt; typeHandler = (Class&lt;? extends TypeHandler&lt;?&gt;&gt;)</span><br><span class="line">              (discriminator.typeHandler() == UnknownTypeHandler.class ? <span class="keyword">null</span> : discriminator.typeHandler());</span><br><span class="line">      Case[] cases = discriminator.cases();</span><br><span class="line">      Map&lt;String, String&gt; discriminatorMap = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">      <span class="keyword">for</span> (Case c : cases) &#123;</span><br><span class="line">        String value = c.value();</span><br><span class="line">        String caseResultMapId = resultMapId + <span class="string">"-"</span> + value;</span><br><span class="line">        discriminatorMap.put(value, caseResultMapId);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> assistant.buildDiscriminator(resultType, column, javaType, jdbcType, typeHandler, discriminatorMap);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">parseStatement</span><span class="params">(Method method)</span> </span>&#123;</span><br><span class="line">    Class&lt;?&gt; parameterTypeClass = getParameterType(method);</span><br><span class="line">    LanguageDriver languageDriver = getLanguageDriver(method);</span><br><span class="line">    SqlSource sqlSource = getSqlSourceFromAnnotations(method, parameterTypeClass, languageDriver);</span><br><span class="line">    <span class="keyword">if</span> (sqlSource != <span class="keyword">null</span>) &#123;</span><br><span class="line">      Options options = method.getAnnotation(Options.class);</span><br><span class="line">      <span class="keyword">final</span> String mappedStatementId = type.getName() + <span class="string">"."</span> + method.getName();</span><br><span class="line">      Integer fetchSize = <span class="keyword">null</span>;</span><br><span class="line">      Integer timeout = <span class="keyword">null</span>;</span><br><span class="line">      StatementType statementType = StatementType.PREPARED;</span><br><span class="line">      ResultSetType resultSetType = ResultSetType.FORWARD_ONLY;</span><br><span class="line">      SqlCommandType sqlCommandType = getSqlCommandType(method);</span><br><span class="line">      <span class="keyword">boolean</span> isSelect = sqlCommandType == SqlCommandType.SELECT;</span><br><span class="line">      <span class="keyword">boolean</span> flushCache = !isSelect;</span><br><span class="line">      <span class="keyword">boolean</span> useCache = isSelect;</span><br><span class="line"></span><br><span class="line">      KeyGenerator keyGenerator;</span><br><span class="line">      String keyProperty = <span class="string">"id"</span>;</span><br><span class="line">      String keyColumn = <span class="keyword">null</span>;</span><br><span class="line">      <span class="keyword">if</span> (SqlCommandType.INSERT.equals(sqlCommandType) || SqlCommandType.UPDATE.equals(sqlCommandType)) &#123;</span><br><span class="line">        <span class="comment">// first check for SelectKey annotation - that overrides everything else</span></span><br><span class="line">        SelectKey selectKey = method.getAnnotation(SelectKey.class);</span><br><span class="line">        <span class="keyword">if</span> (selectKey != <span class="keyword">null</span>) &#123;</span><br><span class="line">          keyGenerator = handleSelectKeyAnnotation(selectKey, mappedStatementId, getParameterType(method), languageDriver);</span><br><span class="line">          keyProperty = selectKey.keyProperty();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (options == <span class="keyword">null</span>) &#123;</span><br><span class="line">          keyGenerator = configuration.isUseGeneratedKeys() ? <span class="keyword">new</span> Jdbc3KeyGenerator() : <span class="keyword">new</span> NoKeyGenerator();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          keyGenerator = options.useGeneratedKeys() ? <span class="keyword">new</span> Jdbc3KeyGenerator() : <span class="keyword">new</span> NoKeyGenerator();</span><br><span class="line">          keyProperty = options.keyProperty();</span><br><span class="line">          keyColumn = options.keyColumn();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        keyGenerator = <span class="keyword">new</span> NoKeyGenerator();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (options != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (FlushCachePolicy.TRUE.equals(options.flushCache())) &#123;</span><br><span class="line">          flushCache = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (FlushCachePolicy.FALSE.equals(options.flushCache())) &#123;</span><br><span class="line">          flushCache = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        useCache = options.useCache();</span><br><span class="line">        fetchSize = options.fetchSize() &gt; -<span class="number">1</span> || options.fetchSize() == Integer.MIN_VALUE ? options.fetchSize() : <span class="keyword">null</span>; <span class="comment">//issue #348</span></span><br><span class="line">        timeout = options.timeout() &gt; -<span class="number">1</span> ? options.timeout() : <span class="keyword">null</span>;</span><br><span class="line">        statementType = options.statementType();</span><br><span class="line">        resultSetType = options.resultSetType();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      String resultMapId = <span class="keyword">null</span>;</span><br><span class="line">      ResultMap resultMapAnnotation = method.getAnnotation(ResultMap.class);</span><br><span class="line">      <span class="keyword">if</span> (resultMapAnnotation != <span class="keyword">null</span>) &#123;</span><br><span class="line">        String[] resultMaps = resultMapAnnotation.value();</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span> (String resultMap : resultMaps) &#123;</span><br><span class="line">          <span class="keyword">if</span> (sb.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            sb.append(<span class="string">","</span>);</span><br><span class="line">          &#125;</span><br><span class="line">          sb.append(resultMap);</span><br><span class="line">        &#125;</span><br><span class="line">        resultMapId = sb.toString();</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isSelect) &#123;</span><br><span class="line">        resultMapId = parseResultMap(method);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      assistant.addMappedStatement(</span><br><span class="line">          mappedStatementId,</span><br><span class="line">          sqlSource,</span><br><span class="line">          statementType,</span><br><span class="line">          sqlCommandType,</span><br><span class="line">          fetchSize,</span><br><span class="line">          timeout,</span><br><span class="line">          <span class="comment">// ParameterMapID</span></span><br><span class="line">          <span class="keyword">null</span>,</span><br><span class="line">          parameterTypeClass,</span><br><span class="line">          resultMapId,</span><br><span class="line">          getReturnType(method),</span><br><span class="line">          resultSetType,</span><br><span class="line">          flushCache,</span><br><span class="line">          useCache,</span><br><span class="line">          <span class="comment">// TODO gcode issue #577</span></span><br><span class="line">          <span class="keyword">false</span>,</span><br><span class="line">          keyGenerator,</span><br><span class="line">          keyProperty,</span><br><span class="line">          keyColumn,</span><br><span class="line">          <span class="comment">// DatabaseID</span></span><br><span class="line">          <span class="keyword">null</span>,</span><br><span class="line">          languageDriver,</span><br><span class="line">          <span class="comment">// ResultSets</span></span><br><span class="line">          options != <span class="keyword">null</span> ? nullOrEmpty(options.resultSets()) : <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> LanguageDriver <span class="title">getLanguageDriver</span><span class="params">(Method method)</span> </span>&#123;</span><br><span class="line">    Lang lang = method.getAnnotation(Lang.class);</span><br><span class="line">    Class&lt;?&gt; langClass = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (lang != <span class="keyword">null</span>) &#123;</span><br><span class="line">      langClass = lang.value();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> assistant.getLanguageDriver(langClass);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> Class&lt;?&gt; getParameterType(Method method) &#123;</span><br><span class="line">    Class&lt;?&gt; parameterType = <span class="keyword">null</span>;</span><br><span class="line">    Class&lt;?&gt;[] parameterTypes = method.getParameterTypes();</span><br><span class="line">    <span class="keyword">for</span> (Class&lt;?&gt; currentParameterType : parameterTypes) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!RowBounds.class.isAssignableFrom(currentParameterType) &amp;&amp; !ResultHandler.class.isAssignableFrom(currentParameterType)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (parameterType == <span class="keyword">null</span>) &#123;</span><br><span class="line">          parameterType = currentParameterType;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">// issue #135</span></span><br><span class="line">          parameterType = ParamMap.class;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> parameterType;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> Class&lt;?&gt; getReturnType(Method method) &#123;</span><br><span class="line">    Class&lt;?&gt; returnType = method.getReturnType();</span><br><span class="line">    Type resolvedReturnType = TypeParameterResolver.resolveReturnType(method, type);</span><br><span class="line">    <span class="keyword">if</span> (resolvedReturnType <span class="keyword">instanceof</span> Class) &#123;</span><br><span class="line">      returnType = (Class&lt;?&gt;) resolvedReturnType;</span><br><span class="line">      <span class="keyword">if</span> (returnType.isArray()) &#123;</span><br><span class="line">        returnType = returnType.getComponentType();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// gcode issue #508</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">void</span>.class.equals(returnType)) &#123;</span><br><span class="line">        ResultType rt = method.getAnnotation(ResultType.class);</span><br><span class="line">        <span class="keyword">if</span> (rt != <span class="keyword">null</span>) &#123;</span><br><span class="line">          returnType = rt.value();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resolvedReturnType <span class="keyword">instanceof</span> ParameterizedType) &#123;</span><br><span class="line">      ParameterizedType parameterizedType = (ParameterizedType) resolvedReturnType;</span><br><span class="line">      Class&lt;?&gt; rawType = (Class&lt;?&gt;) parameterizedType.getRawType();</span><br><span class="line">      <span class="keyword">if</span> (Collection.class.isAssignableFrom(rawType) || Cursor.class.isAssignableFrom(rawType)) &#123;</span><br><span class="line">        Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();</span><br><span class="line">        <span class="keyword">if</span> (actualTypeArguments != <span class="keyword">null</span> &amp;&amp; actualTypeArguments.length == <span class="number">1</span>) &#123;</span><br><span class="line">          Type returnTypeParameter = actualTypeArguments[<span class="number">0</span>];</span><br><span class="line">          <span class="keyword">if</span> (returnTypeParameter <span class="keyword">instanceof</span> Class&lt;?&gt;) &#123;</span><br><span class="line">            returnType = (Class&lt;?&gt;) returnTypeParameter;</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (returnTypeParameter <span class="keyword">instanceof</span> ParameterizedType) &#123;</span><br><span class="line">            <span class="comment">// (gcode issue #443) actual type can be a also a parameterized type</span></span><br><span class="line">            returnType = (Class&lt;?&gt;) ((ParameterizedType) returnTypeParameter).getRawType();</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (returnTypeParameter <span class="keyword">instanceof</span> GenericArrayType) &#123;</span><br><span class="line">            Class&lt;?&gt; componentType = (Class&lt;?&gt;) ((GenericArrayType) returnTypeParameter).getGenericComponentType();</span><br><span class="line">            <span class="comment">// (gcode issue #525) support List&lt;byte[]&gt;</span></span><br><span class="line">            returnType = Array.newInstance(componentType, <span class="number">0</span>).getClass();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (method.isAnnotationPresent(MapKey.class) &amp;&amp; Map.class.isAssignableFrom(rawType)) &#123;</span><br><span class="line">        <span class="comment">// (gcode issue 504) Do not look into Maps if there is not MapKey annotation</span></span><br><span class="line">        Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();</span><br><span class="line">          <span class="keyword">if</span> (actualTypeArguments != <span class="keyword">null</span> &amp;&amp; actualTypeArguments.length == <span class="number">2</span>) &#123;</span><br><span class="line">            Type returnTypeParameter = actualTypeArguments[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span> (returnTypeParameter <span class="keyword">instanceof</span> Class&lt;?&gt;) &#123;</span><br><span class="line">              returnType = (Class&lt;?&gt;) returnTypeParameter;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (returnTypeParameter <span class="keyword">instanceof</span> ParameterizedType) &#123;</span><br><span class="line">              <span class="comment">// (gcode issue 443) actual type can be a also a parameterized type</span></span><br><span class="line">              returnType = (Class&lt;?&gt;) ((ParameterizedType) returnTypeParameter).getRawType();</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> returnType;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> SqlSource <span class="title">getSqlSourceFromAnnotations</span><span class="params">(Method method, Class&lt;?&gt; parameterType, LanguageDriver languageDriver)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      Class&lt;? extends Annotation&gt; sqlAnnotationType = getSqlAnnotationType(method);</span><br><span class="line">      Class&lt;? extends Annotation&gt; sqlProviderAnnotationType = getSqlProviderAnnotationType(method);</span><br><span class="line">      <span class="keyword">if</span> (sqlAnnotationType != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (sqlProviderAnnotationType != <span class="keyword">null</span>) &#123;</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> BindingException(<span class="string">"You cannot supply both a static SQL and SqlProvider to method named "</span> + method.getName());</span><br><span class="line">        &#125;</span><br><span class="line">        Annotation sqlAnnotation = method.getAnnotation(sqlAnnotationType);</span><br><span class="line">        <span class="keyword">final</span> String[] strings = (String[]) sqlAnnotation.getClass().getMethod(<span class="string">"value"</span>).invoke(sqlAnnotation);</span><br><span class="line">        <span class="keyword">return</span> buildSqlSourceFromStrings(strings, parameterType, languageDriver);</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (sqlProviderAnnotationType != <span class="keyword">null</span>) &#123;</span><br><span class="line">        Annotation sqlProviderAnnotation = method.getAnnotation(sqlProviderAnnotationType);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ProviderSqlSource(assistant.getConfiguration(), sqlProviderAnnotation);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> BuilderException(<span class="string">"Could not find value method on SQL annotation.  Cause: "</span> + e, e);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> SqlSource <span class="title">buildSqlSourceFromStrings</span><span class="params">(String[] strings, Class&lt;?&gt; parameterTypeClass, LanguageDriver languageDriver)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> StringBuilder sql = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">    <span class="keyword">for</span> (String fragment : strings) &#123;</span><br><span class="line">      sql.append(fragment);</span><br><span class="line">      sql.append(<span class="string">" "</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> languageDriver.createSqlSource(configuration, sql.toString().trim(), parameterTypeClass);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> SqlCommandType <span class="title">getSqlCommandType</span><span class="params">(Method method)</span> </span>&#123;</span><br><span class="line">    Class&lt;? extends Annotation&gt; type = getSqlAnnotationType(method);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (type == <span class="keyword">null</span>) &#123;</span><br><span class="line">      type = getSqlProviderAnnotationType(method);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (type == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> SqlCommandType.UNKNOWN;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (type == SelectProvider.class) &#123;</span><br><span class="line">        type = Select.class;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type == InsertProvider.class) &#123;</span><br><span class="line">        type = Insert.class;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type == UpdateProvider.class) &#123;</span><br><span class="line">        type = Update.class;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type == DeleteProvider.class) &#123;</span><br><span class="line">        type = Delete.class;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> SqlCommandType.valueOf(type.getSimpleName().toUpperCase(Locale.ENGLISH));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> Class&lt;? extends Annotation&gt; getSqlAnnotationType(Method method) &#123;</span><br><span class="line">    <span class="keyword">return</span> chooseAnnotationType(method, sqlAnnotationTypes);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> Class&lt;? extends Annotation&gt; getSqlProviderAnnotationType(Method method) &#123;</span><br><span class="line">    <span class="keyword">return</span> chooseAnnotationType(method, sqlProviderAnnotationTypes);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> Class&lt;? extends Annotation&gt; chooseAnnotationType(Method method, Set&lt;Class&lt;? extends Annotation&gt;&gt; types) &#123;</span><br><span class="line">    <span class="keyword">for</span> (Class&lt;? extends Annotation&gt; type : types) &#123;</span><br><span class="line">      Annotation annotation = method.getAnnotation(type);</span><br><span class="line">      <span class="keyword">if</span> (annotation != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> type;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">applyResults</span><span class="params">(Result[] results, Class&lt;?&gt; resultType, List&lt;ResultMapping&gt; resultMappings)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (Result result : results) &#123;</span><br><span class="line">      List&lt;ResultFlag&gt; flags = <span class="keyword">new</span> ArrayList&lt;ResultFlag&gt;();</span><br><span class="line">      <span class="keyword">if</span> (result.id()) &#123;</span><br><span class="line">        flags.add(ResultFlag.ID);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">      Class&lt;? extends TypeHandler&lt;?&gt;&gt; typeHandler = (Class&lt;? extends TypeHandler&lt;?&gt;&gt;)</span><br><span class="line">              ((result.typeHandler() == UnknownTypeHandler.class) ? <span class="keyword">null</span> : result.typeHandler());</span><br><span class="line">      ResultMapping resultMapping = assistant.buildResultMapping(</span><br><span class="line">          resultType,</span><br><span class="line">          nullOrEmpty(result.property()),</span><br><span class="line">          nullOrEmpty(result.column()),</span><br><span class="line">          result.javaType() == <span class="keyword">void</span>.class ? <span class="keyword">null</span> : result.javaType(),</span><br><span class="line">          result.jdbcType() == JdbcType.UNDEFINED ? <span class="keyword">null</span> : result.jdbcType(),</span><br><span class="line">          hasNestedSelect(result) ? nestedSelectId(result) : <span class="keyword">null</span>,</span><br><span class="line">          <span class="keyword">null</span>,</span><br><span class="line">          <span class="keyword">null</span>,</span><br><span class="line">          <span class="keyword">null</span>,</span><br><span class="line">          typeHandler,</span><br><span class="line">          flags,</span><br><span class="line">          <span class="keyword">null</span>,</span><br><span class="line">          <span class="keyword">null</span>,</span><br><span class="line">          isLazy(result));</span><br><span class="line">      resultMappings.add(resultMapping);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> String <span class="title">nestedSelectId</span><span class="params">(Result result)</span> </span>&#123;</span><br><span class="line">    String nestedSelect = result.one().select();</span><br><span class="line">    <span class="keyword">if</span> (nestedSelect.length() &lt; <span class="number">1</span>) &#123;</span><br><span class="line">      nestedSelect = result.many().select();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!nestedSelect.contains(<span class="string">"."</span>)) &#123;</span><br><span class="line">      nestedSelect = type.getName() + <span class="string">"."</span> + nestedSelect;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> nestedSelect;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isLazy</span><span class="params">(Result result)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> isLazy = configuration.isLazyLoadingEnabled();</span><br><span class="line">    <span class="keyword">if</span> (result.one().select().length() &gt; <span class="number">0</span> &amp;&amp; FetchType.DEFAULT != result.one().fetchType()) &#123;</span><br><span class="line">      isLazy = (result.one().fetchType() == FetchType.LAZY);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (result.many().select().length() &gt; <span class="number">0</span> &amp;&amp; FetchType.DEFAULT != result.many().fetchType()) &#123;</span><br><span class="line">      isLazy = (result.many().fetchType() == FetchType.LAZY);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> isLazy;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">hasNestedSelect</span><span class="params">(Result result)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (result.one().select().length() &gt; <span class="number">0</span> &amp;&amp; result.many().select().length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> BuilderException(<span class="string">"Cannot use both @One and @Many annotations in the same @Result"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result.one().select().length() &gt; <span class="number">0</span> || result.many().select().length() &gt; <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">applyConstructorArgs</span><span class="params">(Arg[] args, Class&lt;?&gt; resultType, List&lt;ResultMapping&gt; resultMappings)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (Arg arg : args) &#123;</span><br><span class="line">      List&lt;ResultFlag&gt; flags = <span class="keyword">new</span> ArrayList&lt;ResultFlag&gt;();</span><br><span class="line">      flags.add(ResultFlag.CONSTRUCTOR);</span><br><span class="line">      <span class="keyword">if</span> (arg.id()) &#123;</span><br><span class="line">        flags.add(ResultFlag.ID);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">      Class&lt;? extends TypeHandler&lt;?&gt;&gt; typeHandler = (Class&lt;? extends TypeHandler&lt;?&gt;&gt;)</span><br><span class="line">              (arg.typeHandler() == UnknownTypeHandler.class ? <span class="keyword">null</span> : arg.typeHandler());</span><br><span class="line">      ResultMapping resultMapping = assistant.buildResultMapping(</span><br><span class="line">          resultType,</span><br><span class="line">          <span class="keyword">null</span>,</span><br><span class="line">          nullOrEmpty(arg.column()),</span><br><span class="line">          arg.javaType() == <span class="keyword">void</span>.class ? <span class="keyword">null</span> : arg.javaType(),</span><br><span class="line">          arg.jdbcType() == JdbcType.UNDEFINED ? <span class="keyword">null</span> : arg.jdbcType(),</span><br><span class="line">          nullOrEmpty(arg.select()),</span><br><span class="line">          nullOrEmpty(arg.resultMap()),</span><br><span class="line">          <span class="keyword">null</span>,</span><br><span class="line">          <span class="keyword">null</span>,</span><br><span class="line">          typeHandler,</span><br><span class="line">          flags,</span><br><span class="line">          <span class="keyword">null</span>,</span><br><span class="line">          <span class="keyword">null</span>,</span><br><span class="line">          <span class="keyword">false</span>);</span><br><span class="line">      resultMappings.add(resultMapping);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> MyBatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> MyBatis </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mybatis 中的 MapperBuilderAssistant</title>
      <link href="/2016/10/16/%E6%8A%80%E6%9C%AF/mybatis/2016-10-16-mybatis-MapperBuilderAssistant/"/>
      <url>/2016/10/16/%E6%8A%80%E6%9C%AF/mybatis/2016-10-16-mybatis-MapperBuilderAssistant/</url>
      <content type="html"><![CDATA[<p>mybatis 中的 <code>MapperBuilderAssistant</code> 源码阅读</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *    Copyright 2009-2016 the original author or authors.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *    Licensed under the Apache License, Version 2.0 (the "License");</span></span><br><span class="line"><span class="comment"> *    you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"> *    You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *    Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"> *    distributed under the License is distributed on an "AS IS" BASIS,</span></span><br><span class="line"><span class="comment"> *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"> *    See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"> *    limitations under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> org.apache.ibatis.builder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.cache.Cache;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.cache.decorators.LruCache;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.cache.impl.PerpetualCache;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.ErrorContext;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.keygen.KeyGenerator;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.CacheBuilder;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.Discriminator;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.MappedStatement;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.ParameterMap;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.ParameterMapping;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.ParameterMode;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.ResultFlag;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.ResultMap;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.ResultMapping;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.ResultSetType;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.SqlCommandType;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.SqlSource;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.StatementType;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.MetaClass;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.scripting.LanguageDriver;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.type.JdbcType;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.type.TypeHandler;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Clinton Begin</span></span><br><span class="line"><span class="comment"> * 用于缓存、sql参数、查询返回的结果集处理。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MapperBuilderAssistant</span> <span class="keyword">extends</span> <span class="title">BaseBuilder</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 当前 mapper 中方法级别的 的 namespace</span></span><br><span class="line">  <span class="keyword">private</span> String currentNamespace;</span><br><span class="line">  <span class="comment">// 保存错误信息 resource</span></span><br><span class="line">  <span class="keyword">private</span> String resource;</span><br><span class="line">  <span class="comment">// 保存当前使用的二次缓存</span></span><br><span class="line">  <span class="keyword">private</span> Cache currentCache;</span><br><span class="line">  <span class="comment">// 当前缓存能否被解析， 如果为false 在新增MappedStatement 的时候会抛出异常</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">boolean</span> unresolvedCacheRef; <span class="comment">// issue #676</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">MapperBuilderAssistant</span><span class="params">(Configuration configuration, String resource)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(configuration);</span><br><span class="line">    ErrorContext.instance().resource(resource);</span><br><span class="line">    <span class="keyword">this</span>.resource = resource;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">getCurrentNamespace</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> currentNamespace;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCurrentNamespace</span><span class="params">(String currentNamespace)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (currentNamespace == <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> BuilderException(<span class="string">"The mapper element requires a namespace attribute to be specified."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.currentNamespace != <span class="keyword">null</span> &amp;&amp; !<span class="keyword">this</span>.currentNamespace.equals(currentNamespace)) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> BuilderException(<span class="string">"Wrong namespace. Expected '"</span></span><br><span class="line">          + <span class="keyword">this</span>.currentNamespace + <span class="string">"' but found '"</span> + currentNamespace + <span class="string">"'."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.currentNamespace = currentNamespace;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取当前mapper 中的 namespace.methodName</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">applyCurrentNamespace</span><span class="params">(String base, <span class="keyword">boolean</span> isReference)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (base == <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (isReference) &#123;</span><br><span class="line">      <span class="comment">// is it qualified with any namespace yet?</span></span><br><span class="line">      <span class="keyword">if</span> (base.contains(<span class="string">"."</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> base;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// is it qualified with this namespace yet?</span></span><br><span class="line">      <span class="keyword">if</span> (base.startsWith(currentNamespace + <span class="string">"."</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> base;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (base.contains(<span class="string">"."</span>)) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> BuilderException(<span class="string">"Dots are not allowed in element names, please remove it from "</span> + base);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> currentNamespace + <span class="string">"."</span> + base;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 替换当前保存的 缓存信息； 如果替换失败，将抛出异常</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Cache <span class="title">useCacheRef</span><span class="params">(String namespace)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (namespace == <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> BuilderException(<span class="string">"cache-ref element requires a namespace attribute."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 默认缓存信息无法解析</span></span><br><span class="line">      unresolvedCacheRef = <span class="keyword">true</span>;</span><br><span class="line">      <span class="comment">// 获取 namespace 对应的缓存</span></span><br><span class="line">      Cache cache = configuration.getCache(namespace);</span><br><span class="line">      <span class="comment">// 如果没有获取缓存则抛出异常</span></span><br><span class="line">      <span class="keyword">if</span> (cache == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IncompleteElementException(<span class="string">"No cache for namespace '"</span> + namespace + <span class="string">"' could be found."</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      currentCache = cache;</span><br><span class="line">      unresolvedCacheRef = <span class="keyword">false</span>;</span><br><span class="line">      <span class="keyword">return</span> cache;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IllegalArgumentException e) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> IncompleteElementException(<span class="string">"No cache for namespace '"</span> + namespace + <span class="string">"' could be found."</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 在 Configuration 中新增缓存信息， 并且保存当前缓存信息</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Cache <span class="title">useNewCache</span><span class="params">(Class&lt;? extends Cache&gt; typeClass,</span></span></span><br><span class="line"><span class="function"><span class="params">      Class&lt;? extends Cache&gt; evictionClass,</span></span></span><br><span class="line"><span class="function"><span class="params">      Long flushInterval,</span></span></span><br><span class="line"><span class="function"><span class="params">      Integer size,</span></span></span><br><span class="line"><span class="function"><span class="params">      <span class="keyword">boolean</span> readWrite,</span></span></span><br><span class="line"><span class="function"><span class="params">      <span class="keyword">boolean</span> blocking,</span></span></span><br><span class="line"><span class="function"><span class="params">      Properties props)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 创建新的缓存</span></span><br><span class="line">    Cache cache = <span class="keyword">new</span> CacheBuilder(currentNamespace)</span><br><span class="line">        .implementation(valueOrDefault(typeClass, PerpetualCache.class))</span><br><span class="line">        .addDecorator(valueOrDefault(evictionClass, LruCache.class))</span><br><span class="line">        .clearInterval(flushInterval)</span><br><span class="line">        .size(size)</span><br><span class="line">        .readWrite(readWrite)</span><br><span class="line">        .blocking(blocking)</span><br><span class="line">        .properties(props)</span><br><span class="line">        .build();</span><br><span class="line">    <span class="comment">// 设置二次缓存</span></span><br><span class="line">    configuration.addCache(cache);</span><br><span class="line">    <span class="comment">// 保存新创建的当前缓存</span></span><br><span class="line">    currentCache = cache;</span><br><span class="line">    <span class="keyword">return</span> cache;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> ParameterMap <span class="title">addParameterMap</span><span class="params">(String id, Class&lt;?&gt; parameterClass, List&lt;ParameterMapping&gt; parameterMappings)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 当前 namespace 中的</span></span><br><span class="line">    id = applyCurrentNamespace(id, <span class="keyword">false</span>);</span><br><span class="line">    ParameterMap parameterMap = <span class="keyword">new</span> ParameterMap.Builder(configuration, id, parameterClass, parameterMappings).build();</span><br><span class="line">    configuration.addParameterMap(parameterMap);</span><br><span class="line">    <span class="keyword">return</span> parameterMap;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> ParameterMapping <span class="title">buildParameterMapping</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">      Class&lt;?&gt; parameterType,</span></span></span><br><span class="line"><span class="function"><span class="params">      String property,</span></span></span><br><span class="line"><span class="function"><span class="params">      Class&lt;?&gt; javaType,</span></span></span><br><span class="line"><span class="function"><span class="params">      JdbcType jdbcType,</span></span></span><br><span class="line"><span class="function"><span class="params">      String resultMap,</span></span></span><br><span class="line"><span class="function"><span class="params">      ParameterMode parameterMode,</span></span></span><br><span class="line"><span class="function"><span class="params">      Class&lt;? extends TypeHandler&lt;?&gt;&gt; typeHandler,</span></span></span><br><span class="line"><span class="function"><span class="params">      Integer numericScale)</span> </span>&#123;</span><br><span class="line">    resultMap = applyCurrentNamespace(resultMap, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Class parameterType = parameterMapBuilder.type();</span></span><br><span class="line">    Class&lt;?&gt; javaTypeClass = resolveParameterJavaType(parameterType, property, javaType, jdbcType);</span><br><span class="line">    TypeHandler&lt;?&gt; typeHandlerInstance = resolveTypeHandler(javaTypeClass, typeHandler);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ParameterMapping.Builder(configuration, property, javaTypeClass)</span><br><span class="line">        .jdbcType(jdbcType)</span><br><span class="line">        .resultMapId(resultMap)</span><br><span class="line">        .mode(parameterMode)</span><br><span class="line">        .numericScale(numericScale)</span><br><span class="line">        .typeHandler(typeHandlerInstance)</span><br><span class="line">        .build();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> ResultMap <span class="title">addResultMap</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">      String id,</span></span></span><br><span class="line"><span class="function"><span class="params">      Class&lt;?&gt; type,</span></span></span><br><span class="line"><span class="function"><span class="params">      String extend,</span></span></span><br><span class="line"><span class="function"><span class="params">      Discriminator discriminator,</span></span></span><br><span class="line"><span class="function"><span class="params">      List&lt;ResultMapping&gt; resultMappings,</span></span></span><br><span class="line"><span class="function"><span class="params">      Boolean autoMapping)</span> </span>&#123;</span><br><span class="line">    id = applyCurrentNamespace(id, <span class="keyword">false</span>);</span><br><span class="line">    extend = applyCurrentNamespace(extend, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (extend != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!configuration.hasResultMap(extend)) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IncompleteElementException(<span class="string">"Could not find a parent resultmap with id '"</span> + extend + <span class="string">"'"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      ResultMap resultMap = configuration.getResultMap(extend);</span><br><span class="line">      List&lt;ResultMapping&gt; extendedResultMappings = <span class="keyword">new</span> ArrayList&lt;ResultMapping&gt;(resultMap.getResultMappings());</span><br><span class="line">      extendedResultMappings.removeAll(resultMappings);</span><br><span class="line">      <span class="comment">// Remove parent constructor if this resultMap declares a constructor.</span></span><br><span class="line">      <span class="keyword">boolean</span> declaresConstructor = <span class="keyword">false</span>;</span><br><span class="line">      <span class="keyword">for</span> (ResultMapping resultMapping : resultMappings) &#123;</span><br><span class="line">        <span class="keyword">if</span> (resultMapping.getFlags().contains(ResultFlag.CONSTRUCTOR)) &#123;</span><br><span class="line">          declaresConstructor = <span class="keyword">true</span>;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (declaresConstructor) &#123;</span><br><span class="line">        Iterator&lt;ResultMapping&gt; extendedResultMappingsIter = extendedResultMappings.iterator();</span><br><span class="line">        <span class="keyword">while</span> (extendedResultMappingsIter.hasNext()) &#123;</span><br><span class="line">          <span class="keyword">if</span> (extendedResultMappingsIter.next().getFlags().contains(ResultFlag.CONSTRUCTOR)) &#123;</span><br><span class="line">            extendedResultMappingsIter.remove();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      resultMappings.addAll(extendedResultMappings);</span><br><span class="line">    &#125;</span><br><span class="line">    ResultMap resultMap = <span class="keyword">new</span> ResultMap.Builder(configuration, id, type, resultMappings, autoMapping)</span><br><span class="line">        .discriminator(discriminator)</span><br><span class="line">        .build();</span><br><span class="line">    configuration.addResultMap(resultMap);</span><br><span class="line">    <span class="keyword">return</span> resultMap;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Discriminator <span class="title">buildDiscriminator</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">      Class&lt;?&gt; resultType,</span></span></span><br><span class="line"><span class="function"><span class="params">      String column,</span></span></span><br><span class="line"><span class="function"><span class="params">      Class&lt;?&gt; javaType,</span></span></span><br><span class="line"><span class="function"><span class="params">      JdbcType jdbcType,</span></span></span><br><span class="line"><span class="function"><span class="params">      Class&lt;? extends TypeHandler&lt;?&gt;&gt; typeHandler,</span></span></span><br><span class="line"><span class="function"><span class="params">      Map&lt;String, String&gt; discriminatorMap)</span> </span>&#123;</span><br><span class="line">    ResultMapping resultMapping = buildResultMapping(</span><br><span class="line">        resultType,</span><br><span class="line">        <span class="keyword">null</span>,</span><br><span class="line">        column,</span><br><span class="line">        javaType,</span><br><span class="line">        jdbcType,</span><br><span class="line">        <span class="keyword">null</span>,</span><br><span class="line">        <span class="keyword">null</span>,</span><br><span class="line">        <span class="keyword">null</span>,</span><br><span class="line">        <span class="keyword">null</span>,</span><br><span class="line">        typeHandler,</span><br><span class="line">        <span class="keyword">new</span> ArrayList&lt;ResultFlag&gt;(),</span><br><span class="line">        <span class="keyword">null</span>,</span><br><span class="line">        <span class="keyword">null</span>,</span><br><span class="line">        <span class="keyword">false</span>);</span><br><span class="line">    Map&lt;String, String&gt; namespaceDiscriminatorMap = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">    <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; e : discriminatorMap.entrySet()) &#123;</span><br><span class="line">      String resultMap = e.getValue();</span><br><span class="line">      resultMap = applyCurrentNamespace(resultMap, <span class="keyword">true</span>);</span><br><span class="line">      namespaceDiscriminatorMap.put(e.getKey(), resultMap);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Discriminator.Builder(configuration, resultMapping, namespaceDiscriminatorMap).build();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> MappedStatement <span class="title">addMappedStatement</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">      String id,</span></span></span><br><span class="line"><span class="function"><span class="params">      SqlSource sqlSource,</span></span></span><br><span class="line"><span class="function"><span class="params">      StatementType statementType,</span></span></span><br><span class="line"><span class="function"><span class="params">      SqlCommandType sqlCommandType,</span></span></span><br><span class="line"><span class="function"><span class="params">      Integer fetchSize,</span></span></span><br><span class="line"><span class="function"><span class="params">      Integer timeout,</span></span></span><br><span class="line"><span class="function"><span class="params">      String parameterMap,</span></span></span><br><span class="line"><span class="function"><span class="params">      Class&lt;?&gt; parameterType,</span></span></span><br><span class="line"><span class="function"><span class="params">      String resultMap,</span></span></span><br><span class="line"><span class="function"><span class="params">      Class&lt;?&gt; resultType,</span></span></span><br><span class="line"><span class="function"><span class="params">      ResultSetType resultSetType,</span></span></span><br><span class="line"><span class="function"><span class="params">      <span class="keyword">boolean</span> flushCache,</span></span></span><br><span class="line"><span class="function"><span class="params">      <span class="keyword">boolean</span> useCache,</span></span></span><br><span class="line"><span class="function"><span class="params">      <span class="keyword">boolean</span> resultOrdered,</span></span></span><br><span class="line"><span class="function"><span class="params">      KeyGenerator keyGenerator,</span></span></span><br><span class="line"><span class="function"><span class="params">      String keyProperty,</span></span></span><br><span class="line"><span class="function"><span class="params">      String keyColumn,</span></span></span><br><span class="line"><span class="function"><span class="params">      String databaseId,</span></span></span><br><span class="line"><span class="function"><span class="params">      LanguageDriver lang,</span></span></span><br><span class="line"><span class="function"><span class="params">      String resultSets)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (unresolvedCacheRef) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> IncompleteElementException(<span class="string">"Cache-ref not yet resolved"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    id = applyCurrentNamespace(id, <span class="keyword">false</span>);</span><br><span class="line">    <span class="keyword">boolean</span> isSelect = sqlCommandType == SqlCommandType.SELECT;</span><br><span class="line"></span><br><span class="line">    MappedStatement.Builder statementBuilder = <span class="keyword">new</span> MappedStatement.Builder(configuration, id, sqlSource, sqlCommandType)</span><br><span class="line">        .resource(resource)</span><br><span class="line">        .fetchSize(fetchSize)</span><br><span class="line">        .timeout(timeout)</span><br><span class="line">        .statementType(statementType)</span><br><span class="line">        .keyGenerator(keyGenerator)</span><br><span class="line">        .keyProperty(keyProperty)</span><br><span class="line">        .keyColumn(keyColumn)</span><br><span class="line">        .databaseId(databaseId)</span><br><span class="line">        .lang(lang)</span><br><span class="line">        .resultOrdered(resultOrdered)</span><br><span class="line">        .resultSets(resultSets)</span><br><span class="line">        .resultMaps(getStatementResultMaps(resultMap, resultType, id))</span><br><span class="line">        .resultSetType(resultSetType)</span><br><span class="line">        .flushCacheRequired(valueOrDefault(flushCache, !isSelect))</span><br><span class="line">        .useCache(valueOrDefault(useCache, isSelect))</span><br><span class="line">        .cache(currentCache);</span><br><span class="line"></span><br><span class="line">    ParameterMap statementParameterMap = getStatementParameterMap(parameterMap, parameterType, id);</span><br><span class="line">    <span class="keyword">if</span> (statementParameterMap != <span class="keyword">null</span>) &#123;</span><br><span class="line">      statementBuilder.parameterMap(statementParameterMap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    MappedStatement statement = statementBuilder.build();</span><br><span class="line">    configuration.addMappedStatement(statement);</span><br><span class="line">    <span class="keyword">return</span> statement;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> &lt;T&gt; <span class="function">T <span class="title">valueOrDefault</span><span class="params">(T value, T defaultValue)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> value == <span class="keyword">null</span> ? defaultValue : value;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> ParameterMap <span class="title">getStatementParameterMap</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">      String parameterMapName,</span></span></span><br><span class="line"><span class="function"><span class="params">      Class&lt;?&gt; parameterTypeClass,</span></span></span><br><span class="line"><span class="function"><span class="params">      String statementId)</span> </span>&#123;</span><br><span class="line">    parameterMapName = applyCurrentNamespace(parameterMapName, <span class="keyword">true</span>);</span><br><span class="line">    ParameterMap parameterMap = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (parameterMapName != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        parameterMap = configuration.getParameterMap(parameterMapName);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (IllegalArgumentException e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IncompleteElementException(<span class="string">"Could not find parameter map "</span> + parameterMapName, e);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (parameterTypeClass != <span class="keyword">null</span>) &#123;</span><br><span class="line">      List&lt;ParameterMapping&gt; parameterMappings = <span class="keyword">new</span> ArrayList&lt;ParameterMapping&gt;();</span><br><span class="line">      parameterMap = <span class="keyword">new</span> ParameterMap.Builder(</span><br><span class="line">          configuration,</span><br><span class="line">          statementId + <span class="string">"-Inline"</span>,</span><br><span class="line">          parameterTypeClass,</span><br><span class="line">          parameterMappings).build();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> parameterMap;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> List&lt;ResultMap&gt; <span class="title">getStatementResultMaps</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">      String resultMap,</span></span></span><br><span class="line"><span class="function"><span class="params">      Class&lt;?&gt; resultType,</span></span></span><br><span class="line"><span class="function"><span class="params">      String statementId)</span> </span>&#123;</span><br><span class="line">    resultMap = applyCurrentNamespace(resultMap, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">    List&lt;ResultMap&gt; resultMaps = <span class="keyword">new</span> ArrayList&lt;ResultMap&gt;();</span><br><span class="line">    <span class="keyword">if</span> (resultMap != <span class="keyword">null</span>) &#123;</span><br><span class="line">      String[] resultMapNames = resultMap.split(<span class="string">","</span>);</span><br><span class="line">      <span class="keyword">for</span> (String resultMapName : resultMapNames) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          resultMaps.add(configuration.getResultMap(resultMapName.trim()));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalArgumentException e) &#123;</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> IncompleteElementException(<span class="string">"Could not find result map "</span> + resultMapName, e);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resultType != <span class="keyword">null</span>) &#123;</span><br><span class="line">      ResultMap inlineResultMap = <span class="keyword">new</span> ResultMap.Builder(</span><br><span class="line">          configuration,</span><br><span class="line">          statementId + <span class="string">"-Inline"</span>,</span><br><span class="line">          resultType,</span><br><span class="line">          <span class="keyword">new</span> ArrayList&lt;ResultMapping&gt;(),</span><br><span class="line">          <span class="keyword">null</span>).build();</span><br><span class="line">      resultMaps.add(inlineResultMap);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> resultMaps;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> ResultMapping <span class="title">buildResultMapping</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">      Class&lt;?&gt; resultType,</span></span></span><br><span class="line"><span class="function"><span class="params">      String property,</span></span></span><br><span class="line"><span class="function"><span class="params">      String column,</span></span></span><br><span class="line"><span class="function"><span class="params">      Class&lt;?&gt; javaType,</span></span></span><br><span class="line"><span class="function"><span class="params">      JdbcType jdbcType,</span></span></span><br><span class="line"><span class="function"><span class="params">      String nestedSelect,</span></span></span><br><span class="line"><span class="function"><span class="params">      String nestedResultMap,</span></span></span><br><span class="line"><span class="function"><span class="params">      String notNullColumn,</span></span></span><br><span class="line"><span class="function"><span class="params">      String columnPrefix,</span></span></span><br><span class="line"><span class="function"><span class="params">      Class&lt;? extends TypeHandler&lt;?&gt;&gt; typeHandler,</span></span></span><br><span class="line"><span class="function"><span class="params">      List&lt;ResultFlag&gt; flags,</span></span></span><br><span class="line"><span class="function"><span class="params">      String resultSet,</span></span></span><br><span class="line"><span class="function"><span class="params">      String foreignColumn,</span></span></span><br><span class="line"><span class="function"><span class="params">      <span class="keyword">boolean</span> lazy)</span> </span>&#123;</span><br><span class="line">    Class&lt;?&gt; javaTypeClass = resolveResultJavaType(resultType, property, javaType);</span><br><span class="line">    TypeHandler&lt;?&gt; typeHandlerInstance = resolveTypeHandler(javaTypeClass, typeHandler);</span><br><span class="line">    List&lt;ResultMapping&gt; composites = parseCompositeColumnName(column);</span><br><span class="line">    <span class="keyword">if</span> (composites.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      column = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ResultMapping.Builder(configuration, property, column, javaTypeClass)</span><br><span class="line">        .jdbcType(jdbcType)</span><br><span class="line">        .nestedQueryId(applyCurrentNamespace(nestedSelect, <span class="keyword">true</span>))</span><br><span class="line">        .nestedResultMapId(applyCurrentNamespace(nestedResultMap, <span class="keyword">true</span>))</span><br><span class="line">        .resultSet(resultSet)</span><br><span class="line">        .typeHandler(typeHandlerInstance)</span><br><span class="line">        .flags(flags == <span class="keyword">null</span> ? <span class="keyword">new</span> ArrayList&lt;ResultFlag&gt;() : flags)</span><br><span class="line">        .composites(composites)</span><br><span class="line">        .notNullColumns(parseMultipleColumnNames(notNullColumn))</span><br><span class="line">        .columnPrefix(columnPrefix)</span><br><span class="line">        .foreignColumn(foreignColumn)</span><br><span class="line">        .lazy(lazy)</span><br><span class="line">        .build();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> Set&lt;String&gt; <span class="title">parseMultipleColumnNames</span><span class="params">(String columnName)</span> </span>&#123;</span><br><span class="line">    Set&lt;String&gt; columns = <span class="keyword">new</span> HashSet&lt;String&gt;();</span><br><span class="line">    <span class="keyword">if</span> (columnName != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (columnName.indexOf(<span class="string">','</span>) &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">        StringTokenizer parser = <span class="keyword">new</span> StringTokenizer(columnName, <span class="string">"&#123;&#125;, "</span>, <span class="keyword">false</span>);</span><br><span class="line">        <span class="keyword">while</span> (parser.hasMoreTokens()) &#123;</span><br><span class="line">          String column = parser.nextToken();</span><br><span class="line">          columns.add(column);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        columns.add(columnName);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> columns;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> List&lt;ResultMapping&gt; <span class="title">parseCompositeColumnName</span><span class="params">(String columnName)</span> </span>&#123;</span><br><span class="line">    List&lt;ResultMapping&gt; composites = <span class="keyword">new</span> ArrayList&lt;ResultMapping&gt;();</span><br><span class="line">    <span class="keyword">if</span> (columnName != <span class="keyword">null</span> &amp;&amp; (columnName.indexOf(<span class="string">'='</span>) &gt; -<span class="number">1</span> || columnName.indexOf(<span class="string">','</span>) &gt; -<span class="number">1</span>)) &#123;</span><br><span class="line">      StringTokenizer parser = <span class="keyword">new</span> StringTokenizer(columnName, <span class="string">"&#123;&#125;=, "</span>, <span class="keyword">false</span>);</span><br><span class="line">      <span class="keyword">while</span> (parser.hasMoreTokens()) &#123;</span><br><span class="line">        String property = parser.nextToken();</span><br><span class="line">        String column = parser.nextToken();</span><br><span class="line">        ResultMapping complexResultMapping = <span class="keyword">new</span> ResultMapping.Builder(</span><br><span class="line">            configuration, property, column, configuration.getTypeHandlerRegistry().getUnknownTypeHandler()).build();</span><br><span class="line">        composites.add(complexResultMapping);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> composites;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> Class&lt;?&gt; resolveResultJavaType(Class&lt;?&gt; resultType, String property, Class&lt;?&gt; javaType) &#123;</span><br><span class="line">    <span class="keyword">if</span> (javaType == <span class="keyword">null</span> &amp;&amp; property != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        MetaClass metaResultType = MetaClass.forClass(resultType, configuration.getReflectorFactory());</span><br><span class="line">        javaType = metaResultType.getSetterType(property);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        <span class="comment">//ignore, following null check statement will deal with the situation</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (javaType == <span class="keyword">null</span>) &#123;</span><br><span class="line">      javaType = Object.class;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> javaType;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> Class&lt;?&gt; resolveParameterJavaType(Class&lt;?&gt; resultType, String property, Class&lt;?&gt; javaType, JdbcType jdbcType) &#123;</span><br><span class="line">    <span class="keyword">if</span> (javaType == <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (JdbcType.CURSOR.equals(jdbcType)) &#123;</span><br><span class="line">        javaType = java.sql.ResultSet.class;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Map.class.isAssignableFrom(resultType)) &#123;</span><br><span class="line">        javaType = Object.class;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        MetaClass metaResultType = MetaClass.forClass(resultType, configuration.getReflectorFactory());</span><br><span class="line">        javaType = metaResultType.getGetterType(property);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (javaType == <span class="keyword">null</span>) &#123;</span><br><span class="line">      javaType = Object.class;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> javaType;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** Backward compatibility signature */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> ResultMapping <span class="title">buildResultMapping</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">      Class&lt;?&gt; resultType,</span></span></span><br><span class="line"><span class="function"><span class="params">      String property,</span></span></span><br><span class="line"><span class="function"><span class="params">      String column,</span></span></span><br><span class="line"><span class="function"><span class="params">      Class&lt;?&gt; javaType,</span></span></span><br><span class="line"><span class="function"><span class="params">      JdbcType jdbcType,</span></span></span><br><span class="line"><span class="function"><span class="params">      String nestedSelect,</span></span></span><br><span class="line"><span class="function"><span class="params">      String nestedResultMap,</span></span></span><br><span class="line"><span class="function"><span class="params">      String notNullColumn,</span></span></span><br><span class="line"><span class="function"><span class="params">      String columnPrefix,</span></span></span><br><span class="line"><span class="function"><span class="params">      Class&lt;? extends TypeHandler&lt;?&gt;&gt; typeHandler,</span></span></span><br><span class="line"><span class="function"><span class="params">      List&lt;ResultFlag&gt; flags)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> buildResultMapping(</span><br><span class="line">        resultType, property, column, javaType, jdbcType, nestedSelect,</span><br><span class="line">        nestedResultMap, notNullColumn, columnPrefix, typeHandler, flags, <span class="keyword">null</span>, <span class="keyword">null</span>, configuration.isLazyLoadingEnabled());</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> LanguageDriver <span class="title">getLanguageDriver</span><span class="params">(Class&lt;?&gt; langClass)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (langClass != <span class="keyword">null</span>) &#123;</span><br><span class="line">      configuration.getLanguageRegistry().register(langClass);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      langClass = configuration.getLanguageRegistry().getDefaultDriverClass();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> configuration.getLanguageRegistry().getDriver(langClass);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** Backward compatibility signature */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> MappedStatement <span class="title">addMappedStatement</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    String id,</span></span></span><br><span class="line"><span class="function"><span class="params">    SqlSource sqlSource,</span></span></span><br><span class="line"><span class="function"><span class="params">    StatementType statementType,</span></span></span><br><span class="line"><span class="function"><span class="params">    SqlCommandType sqlCommandType,</span></span></span><br><span class="line"><span class="function"><span class="params">    Integer fetchSize,</span></span></span><br><span class="line"><span class="function"><span class="params">    Integer timeout,</span></span></span><br><span class="line"><span class="function"><span class="params">    String parameterMap,</span></span></span><br><span class="line"><span class="function"><span class="params">    Class&lt;?&gt; parameterType,</span></span></span><br><span class="line"><span class="function"><span class="params">    String resultMap,</span></span></span><br><span class="line"><span class="function"><span class="params">    Class&lt;?&gt; resultType,</span></span></span><br><span class="line"><span class="function"><span class="params">    ResultSetType resultSetType,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">boolean</span> flushCache,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">boolean</span> useCache,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">boolean</span> resultOrdered,</span></span></span><br><span class="line"><span class="function"><span class="params">    KeyGenerator keyGenerator,</span></span></span><br><span class="line"><span class="function"><span class="params">    String keyProperty,</span></span></span><br><span class="line"><span class="function"><span class="params">    String keyColumn,</span></span></span><br><span class="line"><span class="function"><span class="params">    String databaseId,</span></span></span><br><span class="line"><span class="function"><span class="params">    LanguageDriver lang)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> addMappedStatement(</span><br><span class="line">      id, sqlSource, statementType, sqlCommandType, fetchSize, timeout,</span><br><span class="line">      parameterMap, parameterType, resultMap, resultType, resultSetType,</span><br><span class="line">      flushCache, useCache, resultOrdered, keyGenerator, keyProperty,</span><br><span class="line">      keyColumn, databaseId, lang, <span class="keyword">null</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> MyBatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> MyBatis </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mybatis 源码阅读(一)</title>
      <link href="/2016/09/20/%E6%8A%80%E6%9C%AF/mybatis/2016-09-20-mybatis%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/"/>
      <url>/2016/09/20/%E6%8A%80%E6%9C%AF/mybatis/2016-09-20-mybatis%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/</url>
      <content type="html"><![CDATA[<h6 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h6><p>我们开始从mybatis 启动流程开始阅读源码</p><p><code>mybatis</code> 的配置信息层次结构：</p><blockquote><p>configuration</p><blockquote><p>properties</p></blockquote><blockquote><p>settings</p></blockquote><blockquote><p>typeAliases</p></blockquote><blockquote><p>typeHandlers</p></blockquote><blockquote><p>objectFactory</p><p>objectWrapperFactory</p><p>reflectorFactory</p><p>plugins</p><p>environments</p><blockquote><p>transactionManager</p></blockquote><blockquote><p>dataSource</p></blockquote><p>databaseIdProvider</p><p>mappers</p></blockquote></blockquote><p>无论是结合 <code>Spring</code> 使用 <code>Mybatis</code> 还是单独使用，在启动的时候都需要经过这个入口 <code>SqlSessionFactoryBuilder</code> 来构建  <code>SqlSessionFactory</code></p><p>使用 <code>SqlSessionFactoryBuilder</code> 构建  <code>SqlSessionFactory</code> 有两种方：编码方式，Xml 配置方式；</p><p>获取  <code>SqlSessionFactory</code> 的主体调用流程如下：<br>org.apache.ibatis.session.SqlSessionFactoryBuilder#build(Reader or InputStream);<br>org.apache.ibatis.builder.xml.XMLConfigBuilder#XMLConfigBuilder();<br>org.apache.ibatis.builder.xml.XMLConfigBuilder#parse<br>org.apache.ibatis.builder.xml.XMLConfigBuilder#parseConfiguration<br>org.apache.ibatis.session.SqlSessionFactoryBuilder#build(org.apache.ibatis.session.Configuration)<br>得到的 <code>SqlSessionFactory</code> 的默认实现 <code>DefaultSqlSessionFactory</code></p><p>编码方式这里不做赘述， 配置文件的方式主要流程如下得到 <code>Configuration</code><br><img src="/assets/picture/mybatis_source_to_configuration.png" alt="图片" title="加载mybatis 配置信息的途径"></p><p>xml 配置方式主要依赖 <code>XMLConfigBuilder</code> 来解析配置文件</p><pre><code>private void parseConfiguration(XNode root) {    try {      //issue #117 read properties first      //解析 xml 中 &lt;properties&gt; 标签，主要是解析url 和 resource， 需要注意的是这两个配置不能同时存在      propertiesElement(root.evalNode(&quot;properties&quot;));      // 注册 type aliase 可以使用 package 扫描一个文件夹中的所有 带@Alias 注解的所有类      // [注意] alias 会忽略大小写 toLowCase      typeAliasesElement(root.evalNode(&quot;typeAliases&quot;));      pluginElement(root.evalNode(&quot;plugins&quot;));      // MyBatis uses an `ObjectFactory` to create all needed new Objects.      objectFactoryElement(root.evalNode(&quot;objectFactory&quot;));      //      objectWrapperFactoryElement(root.evalNode(&quot;objectWrapperFactory&quot;));      reflectionFactoryElement(root.evalNode(&quot;reflectionFactory&quot;));      settingsElement(root.evalNode(&quot;settings&quot;));      // read it after objectFactory and objectWrapperFactory issue #631      //      environmentsElement(root.evalNode(&quot;environments&quot;));      // 通过xml 中设置的type 别名构建 DatabaseIdProvider， 默认为 VendorDatabaseIdProvider      // 再通过 DatabaseIdProvider 获取 databaseId， 设置到 Configuration.databaseId      databaseIdProviderElement(root.evalNode(&quot;databaseIdProvider&quot;));      // TypeHander 对应一个 Class 以及一个 JdbcType      // 注册 TypeHander 时可以一个个的注册，也可以注册一个 package 中所有实现了 `TypeHandler` 接口的类      // 通过继承 BaseTypeHandler 自定义的TypeHander      // TypeHandler 如果没有通过 @MappedJdbcTypes 指定的JdbcType 则为null      typeHandlerElement(root.evalNode(&quot;typeHandlers&quot;));      mapperElement(root.evalNode(&quot;mappers&quot;));    } catch (Exception e) {      throw new BuilderException(&quot;Error parsing SQL Mapper Configuration. Cause: &quot; + e, e);    }  }</code></pre><p>mybatis 的重要组成部分是 mapper xml 文件，对于这些文件的解析很重要<br>解析 package 中的接口时，获取 package 下的所有接口， 依次直接使用 <code>MapperRegister</code> 注册 Interface –&gt; MapperProxyFactory</p><p>使用 <mapper> 标签中的 <code>mapperClass</code> 配置接口信息， 也是 <code>MapperRegister</code> 注册 Interface –&gt; MapperProxyFactory</mapper></p><p>使用 <mapper> 标签中的 <code>url</code> 或 <code>resource</code> 配置 mapper xml 文件的路径， 使用 <code>XmlMappperBuilder</code> 解析 xml 文件</mapper></p><p>这里先介绍 <code>MapperRegister</code> <code>MapperProxyFactory</code></p><p><code>MapperRegister</code> 中保存了 Interface –&gt; MapperProxyFactory 的map</p><p><code>mybatis</code> 中大量使用了设计模式， <code>MapperProxyFactory</code> 使用了工厂模式<br><code>MapperProxyFactory</code> 一看就是生产 <code>MapperProxy</code> 的工厂类， 提供 org.apache.ibatis.binding.MapperProxyFactory#newInstance(org.apache.ibatis.session.SqlSession)<br>方法获取 Mapper Interface 的实现类</p><p><code>MapperProxy</code> 是java 动态代理的使用，<code>MapperProxy</code> 实现了 <code>InvocationHandler</code> 接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *    Copyright 2009-2015 the original author or authors.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *    Licensed under the Apache License, Version 2.0 (the "License");</span></span><br><span class="line"><span class="comment"> *    you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"> *    You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *    Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"> *    distributed under the License is distributed on an "AS IS" BASIS,</span></span><br><span class="line"><span class="comment"> *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"> *    See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"> *    limitations under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> org.apache.ibatis.binding;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ConcurrentHashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Lasse Voss</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MapperProxyFactory</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// MapperProxy 代理的 Mapper 接口</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Class&lt;T&gt; mapperInterface;</span><br><span class="line">  <span class="comment">// 这里的Key 是 Mapper 接口中方法对象，Value 是方法对象的封装</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;Method, MapperMethod&gt; methodCache = <span class="keyword">new</span> ConcurrentHashMap&lt;Method, MapperMethod&gt;();</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">MapperProxyFactory</span><span class="params">(Class&lt;T&gt; mapperInterface)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.mapperInterface = mapperInterface;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Class&lt;T&gt; <span class="title">getMapperInterface</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> mapperInterface;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Map&lt;Method, MapperMethod&gt; <span class="title">getMethodCache</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> methodCache;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">  <span class="function"><span class="keyword">protected</span> T <span class="title">newInstance</span><span class="params">(MapperProxy&lt;T&gt; mapperProxy)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (T) Proxy.newProxyInstance(mapperInterface.getClassLoader(), <span class="keyword">new</span> Class[] &#123; mapperInterface &#125;, mapperProxy);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 通过 Sqlsession 获取 Mapper 接口</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> T <span class="title">newInstance</span><span class="params">(SqlSession sqlSession)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> MapperProxy&lt;T&gt; mapperProxy = <span class="keyword">new</span> MapperProxy&lt;T&gt;(sqlSession, mapperInterface, methodCache);</span><br><span class="line">    <span class="keyword">return</span> newInstance(mapperProxy);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Configuration</code>: mybatis 配置信息的根节点</p><pre><code>public Configuration() {    // 这里注册了很多类的别名，在需要的时候通过反射机制获取 类的实例    typeAliasRegistry.registerAlias(&quot;JDBC&quot;, JdbcTransactionFactory.class);    typeAliasRegistry.registerAlias(&quot;MANAGED&quot;, ManagedTransactionFactory.class);    typeAliasRegistry.registerAlias(&quot;JNDI&quot;, JndiDataSourceFactory.class);    typeAliasRegistry.registerAlias(&quot;POOLED&quot;, PooledDataSourceFactory.class);    typeAliasRegistry.registerAlias(&quot;UNPOOLED&quot;, UnpooledDataSourceFactory.class);    typeAliasRegistry.registerAlias(&quot;PERPETUAL&quot;, PerpetualCache.class);    typeAliasRegistry.registerAlias(&quot;FIFO&quot;, FifoCache.class);    typeAliasRegistry.registerAlias(&quot;LRU&quot;, LruCache.class);    typeAliasRegistry.registerAlias(&quot;SOFT&quot;, SoftCache.class);    typeAliasRegistry.registerAlias(&quot;WEAK&quot;, WeakCache.class);    typeAliasRegistry.registerAlias(&quot;DB_VENDOR&quot;, VendorDatabaseIdProvider.class);    typeAliasRegistry.registerAlias(&quot;XML&quot;, XMLLanguageDriver.class);    typeAliasRegistry.registerAlias(&quot;RAW&quot;, RawLanguageDriver.class);    typeAliasRegistry.registerAlias(&quot;SLF4J&quot;, Slf4jImpl.class);    typeAliasRegistry.registerAlias(&quot;COMMONS_LOGGING&quot;, JakartaCommonsLoggingImpl.class);    typeAliasRegistry.registerAlias(&quot;LOG4J&quot;, Log4jImpl.class);    typeAliasRegistry.registerAlias(&quot;LOG4J2&quot;, Log4j2Impl.class);    typeAliasRegistry.registerAlias(&quot;JDK_LOGGING&quot;, Jdk14LoggingImpl.class);    typeAliasRegistry.registerAlias(&quot;STDOUT_LOGGING&quot;, StdOutImpl.class);    typeAliasRegistry.registerAlias(&quot;NO_LOGGING&quot;, NoLoggingImpl.class);    typeAliasRegistry.registerAlias(&quot;CGLIB&quot;, CglibProxyFactory.class);    typeAliasRegistry.registerAlias(&quot;JAVASSIST&quot;, JavassistProxyFactory.class);    // 注册语言管理驱动，默认语言管理驱动为：`XMLLanguageDriver`    languageRegistry.setDefaultDriverClass(XMLLanguageDriver.class);    languageRegistry.register(RawLanguageDriver.class);  }</code></pre><p><code>ObjectFactory</code>:</p><p><code>Reflector</code></p><p><code>ObjectWrapper</code></p><p><code>TransactionFactory</code></p><p><code>TypeAliasRegistry</code></p><p><code>LanguageRegistry</code></p>]]></content>
      
      <categories>
          
          <category> MyBatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> MyBatis </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>线上应用故障排查</title>
      <link href="/2016/09/13/%E6%8A%80%E6%9C%AF/java/2016-09-13-CPU%E5%8D%A0%E7%94%A8%E8%BF%87%E9%AB%98%E5%A4%84%E7%90%86%E8%BF%87%E7%A8%8B/"/>
      <url>/2016/09/13/%E6%8A%80%E6%9C%AF/java/2016-09-13-CPU%E5%8D%A0%E7%94%A8%E8%BF%87%E9%AB%98%E5%A4%84%E7%90%86%E8%BF%87%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h4 id="CPU-100-处理流程"><a href="#CPU-100-处理流程" class="headerlink" title="CPU 100% 处理流程"></a>CPU 100% 处理流程</h4><p>当我们遇到 CPU 使用率过高的情况时(这里只考虑 <code>Linux/Solaris</code> 系统)<br>首先想到了 <code>top</code> 指令</p><pre><code>&gt; top</code></pre><p>先看看哪个进程使用的cpu 比较高,　当然这里只讲 JVM 使用 CPU 过高的情况;</p><p><img src="/assets/picture/top_cpu_fix.png" alt="图片" title="top 指令执行效果图"><br>这里的图片只是示例用，不存在cpu 使用率过高的问题</p><p>在查询到 vmid 后，查询虚拟机进程中哪个线程使用的 cpu 比较高</p><pre><code>&gt; ps -mp pid -o THREAD,tid,time</code></pre><p>确定了使用　cpu 过高的虚拟机线程 id 后，记录下　threadId</p><p>然后再使用　<code>jstack</code> 记录当前虚拟机线程信息快照</p><pre><code>$ jstack -l vmid　&gt; outofcpu.threaddump</code></pre><p> 这里已经获得了　<code>threadId</code> 和　当前的虚拟机线程信息快照信息</p><p> 我们可以考虑重启一下 tomcat 或者直接重启 JVM</p><p> 对于保存的　<code>threadId</code> 和　<code>outofcpu.threaddump</code><br> 在 threaddump 文件中查看　threadId 线程信息定位代码问题，达到修复目的</p><hr><h4 id="内存使用过高处理流程"><a href="#内存使用过高处理流程" class="headerlink" title="内存使用过高处理流程"></a>内存使用过高处理流程</h4><p>当我们遇到 <code>内存</code>  使用率过高的情况时(这里只考虑 <code>Linux/Solaris</code> 系统)<br><br>首先想到了还是 <code>top</code> 指令</p><p><img src="/assets/picture/top_mem.png" alt="图片" title="top 指令执行效果图"></p><p>我们看到这里的tomcat 占用内存大到了 60% 多， 记录下 vmid</p><p>下面我们尝试查看这个进程中具体线程的内存使用情况<br><img src="/assets/picture/ps_thread_mem_bug.png" alt="图片" title="ps 指令无法查询进程中具体线程的内存适用情况"><br>这里可以看出</p><h6 id="ps-指令无法查询进程中具体线程的内存适用情况"><a href="#ps-指令无法查询进程中具体线程的内存适用情况" class="headerlink" title="ps 指令无法查询进程中具体线程的内存适用情况"></a>ps 指令无法查询进程中具体线程的内存适用情况</h6><p><br><br>不过我们还有 java 提供的工具 jmap</p><pre><code>&gt; sudo jmap -F -histo 12788 &gt; test.dump</code></pre><p>这里使用 <code>jmap -histo</code> 指令去 统计 JVM 堆中的对象信息</p><pre><code>&gt; sudo jmap -F -dump:format=b,file=test.all.dump 12788</code></pre><p>这里使用 <code>jmap -dump</code> 指令去生成JVM 堆存储快照， 后面在用 jhat visualvm 等工具进行分析</p><p>在分析之前，我们可以考虑一下是否需要重启服务</p><hr><p>这里在介绍一下 ps 的具体使用<br><img src="/assets/picture/ps_help.png" alt="图片" title="ps 帮助信息"></p><p>-m: 显示当前 <code>process id</code> 进程下的线程的信息<br>-o: 用户自定义显示列</p>]]></content>
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JVM </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>JVM 性能监控和故障处理工具</title>
      <link href="/2016/09/12/%E6%8A%80%E6%9C%AF/java/2016-09-12-JVM%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E5%92%8C%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/"/>
      <url>/2016/09/12/%E6%8A%80%E6%9C%AF/java/2016-09-12-JVM%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E5%92%8C%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/</url>
      <content type="html"><![CDATA[<h3 id="jps-JVM-Process-Status-Tool"><a href="#jps-JVM-Process-Status-Tool" class="headerlink" title="jps (JVM Process Status Tool)"></a>jps (JVM Process Status Tool)</h3><h4 id="显示指定系统中的所有虚拟机进程"><a href="#显示指定系统中的所有虚拟机进程" class="headerlink" title="显示指定系统中的所有虚拟机进程"></a>显示指定系统中的所有虚拟机进程</h4><pre><code>&gt; jps [ options ] [ hostid ]</code></pre><p><img src="/assets/picture/jps_help.png" alt="图片" title="JPS 指令说明"></p><p>jps 选项 [ options ] 说明：<br><br>-q 只输出LVMID 省略主类的名称；<br><br>-m 输出虚拟机进程启东市传递给主类main函数的参数；<br><br>-l 输出主类的名称，如果进程执行的是jar包，输出jar 路径；<br><br>-v 输出虚拟机进程启动时的JVM 参数</p><h4 id="注意"><a href="#注意" class="headerlink" title="[ 注意 ]"></a>[ 注意 ]</h4><p>使用 jps 指令得到的输出结果可能是下面这样的</p><pre><code>pid -- process information unavailable</code></pre><p>JVM 会在本地文件系统中的 tmp 文件夹中新建 <code>hsperfdata_{username}/{pid}</code> 文件， 如果当前执行 jps 指令的用户没有属于自己的这个文件，就会出现这种提示</p><p>例如： 我们公司tomcat 的启动用户默认是 <code>tomcat</code>,  JVM 新建的文件是 <code>/tmp/hsperfdata_tomcat/pid</code>(这是在linux系统中)，这样导致了如下问题</p><h6 id="不管使用-root-用户权限还是-普通用户权限都不能执行-jps-指令"><a href="#不管使用-root-用户权限还是-普通用户权限都不能执行-jps-指令" class="headerlink" title="不管使用 root 用户权限还是 普通用户权限都不能执行 jps 指令"></a>不管使用 root 用户权限还是 普通用户权限都不能执行 jps 指令</h6><h5 id="上述问题解决方案"><a href="#上述问题解决方案" class="headerlink" title="上述问题解决方案"></a>上述问题解决方案</h5><pre><code>sudo -u tomcat jps pid</code></pre><hr><h3 id="jstat-JVM-Statistics-Monitoring-Tool"><a href="#jstat-JVM-Statistics-Monitoring-Tool" class="headerlink" title="jstat (JVM Statistics Monitoring Tool)"></a>jstat (JVM Statistics Monitoring Tool)</h3><pre><code>&gt; jstat [ option vmid [interval [s|ms] [count]]  ]</code></pre><p>参数  <code>interval</code>, <code>count</code> 代表查询的间隔时间和次数，如果省略这两个参数表示只查询一次<br>假设需要每 1s 查询一次进程 3234 的jvm gc信息，一共查询10次</p><pre><code>&gt; jstat -gc 3234 1s 10</code></pre><table><thead><tr><th style="text-align:left">选项</th><th>作用描述</th></tr></thead><tbody><tr><td style="text-align:left">-class</td><td>监视类装载、卸载数量、总空间以及类装载所耗费的时间</td></tr><tr><td style="text-align:left">-gc</td><td>监视 JVM 堆状况，包括 Eden区、两个survivor 区、老年代、永生代等的容量、已用空间、GC时间合计等信息</td></tr><tr><td style="text-align:left">-gccapacity</td><td>监视内容与 -gc 基本相同，但输出主要关注java 堆各个区域使用到的最大、最小空间</td></tr><tr><td style="text-align:left">-gcutil</td><td>监视内容与 -gc 基本相同，但输出主要关注已经使用空间占总空间的百分比</td></tr><tr><td style="text-align:left">-gccause</td><td>与 -gcutil 功能一样，但是会额外输出导致上一次 GC 产生的原因</td></tr><tr><td style="text-align:left">-gcnew</td><td>监视新生代 gc 状况</td></tr><tr><td style="text-align:left">-gcnewcapacity</td><td>监视内容与 -gcnew 基本相同，但输出主要关注新生代已经使用到的最大、最小空间</td></tr><tr><td style="text-align:left">-gcold</td><td>监视老年代 gc 状况</td></tr><tr><td style="text-align:left">-gcoldcapacity</td><td>监视内容与 -gcold 基本相同，但输出主要关注老年代已经使用到的最大、最小空间</td></tr><tr><td style="text-align:left">-gcpermcapacity</td><td>输出永久代已经使用到的最大、最小空间</td></tr><tr><td style="text-align:left">-compiler</td><td>输出JIT 编译器编译过的方法、耗时等信息</td></tr><tr><td style="text-align:left">-gccompilation</td><td>输出已经呗 JIT 编译的方法</td></tr></tbody></table><hr><h3 id="jinfo-Configuration-Info-for-java"><a href="#jinfo-Configuration-Info-for-java" class="headerlink" title="jinfo (Configuration Info for java)"></a>jinfo (Configuration Info for java)</h3><h4 id="实时查询和调整虚拟机各项参数"><a href="#实时查询和调整虚拟机各项参数" class="headerlink" title="实时查询和调整虚拟机各项参数"></a>实时查询和调整虚拟机各项参数</h4><pre><code>&gt; jinfo [ option ] pidliam@liamchen-ubuntu:~$ jinfo -helpUsage:    jinfo [option] &lt;pid&gt;        (to connect to running process)    jinfo [option] &lt;executable &lt;core&gt;        (to connect to a core file)    jinfo [option] [server_id@]&lt;remote server IP or hostname&gt;        (to connect to remote debug server)where &lt;option&gt; is one of:    -flag &lt;name&gt;         to print the value of the named VM flag    -flag [+|-]&lt;name&gt;    to enable or disable the named VM flag    -flag &lt;name&gt;=&lt;value&gt; to set the named VM flag to the given value    -flags               to print VM flags    -sysprops            to print Java system properties    &lt;no option&gt;          to print both of the above    -h | -help           to print this help message</code></pre><hr><h3 id="jmap-Memory-Map-for-Java"><a href="#jmap-Memory-Map-for-Java" class="headerlink" title="jmap (Memory Map for Java)"></a>jmap (Memory Map for Java)</h3><h4 id="生成对存储快照"><a href="#生成对存储快照" class="headerlink" title="生成对存储快照"></a>生成对存储快照</h4><pre><code>&gt; jmap [ option ] vmid</code></pre><table><thead><tr><th style="text-align:left">选项</th><th>作用描述</th></tr></thead><tbody><tr><td style="text-align:left">-dump</td><td>生成 JVM 堆存储快照。 格式为: dump:[live,]format=b,file=<filename>，其中live参数说明是否只dump 出存活的对象</filename></td></tr><tr><td style="text-align:left">-finalizeinfo</td><td>显示在F-Queue 中等待Finalizer线程执行 finalize 方法的对象，只在 linux/solaris 平台下有效</td></tr><tr><td style="text-align:left">-heap</td><td>显示 JVM 堆详细信息，如使用那种回收器、参数配置、分代情况等。只在 linux/solaris 平台下有效</td></tr><tr><td style="text-align:left">-histo</td><td>显示堆中对象统计信息，包括类、实例数量、合计数量</td></tr><tr><td style="text-align:left">-permstat</td><td>以ClassLoader为统计口径，显示永生代内存状态，只在 linux/solaris 平台下有效</td></tr><tr><td style="text-align:left">-F</td><td>当 JVM 进程对 -dump 指令选项没有响应时，可使用这个选项强制生成dump 快照，只在 linux/solaris 平台下有效</td></tr></tbody></table><pre><code>使用示例：&gt; jmap -dump:format=b,file=test.dump pid</code></pre><hr><h3 id="jhat-JVM-Heap-Analysis-Tool"><a href="#jhat-JVM-Heap-Analysis-Tool" class="headerlink" title="jhat (JVM Heap Analysis Tool)"></a>jhat (JVM Heap Analysis Tool)</h3><h4 id="与jmap搭配使用，-来分析-jmap-生成的-堆存储快照文件"><a href="#与jmap搭配使用，-来分析-jmap-生成的-堆存储快照文件" class="headerlink" title="与jmap搭配使用， 来分析 jmap 生成的 堆存储快照文件"></a>与jmap搭配使用， 来分析 jmap 生成的 堆存储快照文件</h4><pre><code>&gt; jhat test.dump</code></pre><p>当屏幕上出现 “Server is ready” 提示后，访问 <code>http://localhost:7000</code> 就能看到分析结果</p><h6 id="注意-分析工作比较消耗资源，可将dump-文件复制到其他机器上分析"><a href="#注意-分析工作比较消耗资源，可将dump-文件复制到其他机器上分析" class="headerlink" title="[ 注意 ] : 分析工作比较消耗资源，可将dump 文件复制到其他机器上分析"></a>[ 注意 ] : 分析工作比较消耗资源，可将dump 文件复制到其他机器上分析</h6><hr><h3 id="jstack-Stack-Trace-for-Java"><a href="#jstack-Stack-Trace-for-Java" class="headerlink" title="jstack (Stack Trace for Java)"></a>jstack (Stack Trace for Java)</h3><h4 id="生成JVM-当前时刻的线程快照"><a href="#生成JVM-当前时刻的线程快照" class="headerlink" title="生成JVM 当前时刻的线程快照"></a>生成JVM 当前时刻的线程快照</h4><pre><code>&gt; jstack [ option ] vmid</code></pre><table><thead><tr><th style="text-align:left">选项</th><th>作用描述</th></tr></thead><tbody><tr><td style="text-align:left">-l</td><td>除堆栈外，显示关于锁的附加信息</td></tr><tr><td style="text-align:left">-m</td><td>打印</td></tr><tr><td style="text-align:left">-F</td><td>当 JVM 进程对指令没有响应时，可使用这个选项强制生成 threaddump 快照，只在 linux/solaris 平台下有效</td></tr></tbody></table>]]></content>
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JVM </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mysql explain 介绍</title>
      <link href="/2016/09/08/%E6%8A%80%E6%9C%AF/mysql/2016-09-08-mysql%20explain%20%E8%AF%A6%E8%A7%A3/"/>
      <url>/2016/09/08/%E6%8A%80%E6%9C%AF/mysql/2016-09-08-mysql%20explain%20%E8%AF%A6%E8%A7%A3/</url>
      <content type="html"><![CDATA[<p>mysql 为我们提供了一个很好用的 sql 语句分析工具 <code>explain</code> , 它可以帮助我们选择更好的索引和写出更优化的查询语句。</p><p><code>explain</code> 会显示sql 语句如何使用索引</p><h6 id="注意：在-mysql-5-6-之前-explain-只能分析-select-语句，其他类型的语句只能先改写为-select-语句再分析；-但是-mysql-5-6-及以后，-explain-支持其他语句的解析！！！"><a href="#注意：在-mysql-5-6-之前-explain-只能分析-select-语句，其他类型的语句只能先改写为-select-语句再分析；-但是-mysql-5-6-及以后，-explain-支持其他语句的解析！！！" class="headerlink" title="注意：在 mysql 5.6 之前 explain 只能分析 select 语句，其他类型的语句只能先改写为 select 语句再分析； 但是 mysql 5.6 及以后， explain 支持其他语句的解析！！！"></a>注意：在 <code>mysql 5.6</code> 之前 <code>explain</code> 只能分析 <code>select</code> 语句，其他类型的语句只能先改写为 <code>select</code> 语句再分析； 但是 <code>mysql 5.6</code> 及以后， <code>explain</code> 支持其他语句的解析！！！</h6><p>先来个使用范例</p><pre><code>exlain select sql如：explain select * from grade_info where teacher_id = &apos;1&apos;;</code></pre><p>下面看看 <code>explain</code> 的执行结果：<br><img src="/assets/picture/mysql_index_a.png" alt="图片" title="使用索引第一列的情况"><br><code>explain</code> 的结果有这些列<br><br> <code>id</code>, <code>select_type</code>, <code>table</code>, <code>partitions</code>, <code>type</code>, <code>possible_keys</code>, <code>key</code>, <code>key_len</code>, <code>ref</code>, <code>rows</code>, <code>filtered</code>, <code>Extra</code></p><h4 id="id"><a href="#id" class="headerlink" title="id"></a>id</h4><p>sql 语句执行顺序号， 就是sql 语句的执行顺序<br><img src="/assets/picture/mysql_nested_sql_explain.png" alt="图片" title="mysql嵌套语句"><br>这里可以看到 id 的变化</p><h4 id="select-type"><a href="#select-type" class="headerlink" title="select_type"></a>select_type</h4>]]></content>
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Mysql 索引</title>
      <link href="/2016/09/07/%E6%8A%80%E6%9C%AF/mysql/2016-09-07-mysql%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E5%9B%9E%E9%A1%BE/"/>
      <url>/2016/09/07/%E6%8A%80%E6%9C%AF/mysql/2016-09-07-mysql%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E5%9B%9E%E9%A1%BE/</url>
      <content type="html"><![CDATA[<h2 id="Mysql-索引"><a href="#Mysql-索引" class="headerlink" title="Mysql 索引"></a>Mysql 索引</h2><h3 id="索引的分类"><a href="#索引的分类" class="headerlink" title="索引的分类"></a>索引的分类</h3><p>mysql 索引分为 <code>聚簇索引</code> 和 <code>非聚簇索引</code><br><br><code>聚簇索引</code>：数据的物理存储顺序和索引的顺序是一致的<br><br><code>非聚簇索引</code>：数据的物理存储顺序和索引的顺序不一致<br><br>很明显数据的物理存储顺序只有一种，所以 <code>聚簇索引</code> 只能有一个</p><h3 id="关于联合索引"><a href="#关于联合索引" class="headerlink" title="关于联合索引"></a>关于联合索引</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`grade_info`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'自增主键'</span>,</span><br><span class="line">  <span class="string">`grade`</span> <span class="keyword">double</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'成绩'</span>,</span><br><span class="line">  <span class="string">`teacher_id`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'教师id'</span>,</span><br><span class="line">  <span class="string">`class_id`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'课程id'</span>,</span><br><span class="line">  <span class="string">`student_id`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'学生id'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`grade_info_teacher_id_IDX`</span> (<span class="string">`teacher_id`</span>,<span class="string">`class_id`</span>,<span class="string">`student_id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">30</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4</span><br></pre></td></tr></table></figure><p>先创建一个表，这个表中有个联合索引 <code>grade_info_teacher_id_IDX</code></p><p>下面插入几条数据：</p><p><img src="/assets/picture/multiindex.png" alt="图片" title="grade_info 中的数据"></p><p>下面开始讨论下面几个问题:</p><pre><code>`grade_info_teacher_id_IDX` (teacher_id, class_id, student_id) 这个索引如果查询条件只有teacher_id，会用上索引么？&lt;br /&gt;如果查询条件中有teacher_id, student_id会用上索引么？&lt;br /&gt;如果查询条件中有class_id, student_id会用上索引么？&lt;br /&gt;如果查询条件中有teacher_id, class_id会用上索引么？&lt;br /&gt;</code></pre><p><img src="/assets/picture/mysql_index_a.png" alt="图片" title="使用索引第一列的情况"></p><p>很明显当查询条件中使用了联合索引的第一列的时候会用上索引</p><p><img src="/assets/picture/mysql_index_a_c.png" alt="图片" title="使用索引第一列和第三列的情况"></p><p>这里当查询条件使用联合索引的第一列和第三列的时候也会用上索引，<br>但是这里有个问题， 图中的查询条件只会查询出一条，但是现在问题出现了， 但<code>explain</code> 结果中的row 是 2， 这里得知 索引只用到了第一列</p><p><img src="/assets/picture/mysql_index_b_c.png" alt="图片" title="使用索引第二列、第三列的情况"><br>很明显，这种查询条件没用上索引</p><p><img src="/assets/picture/mysql_index_a_c.png" alt="图片" title="使用索引第一列、第二列的情况"><br>这里使用到了索引，而且索引的长度和 只使用第一列的时候相比更长； 可以确定这里使用了索引的前两列</p><h3 id="索引的限制"><a href="#索引的限制" class="headerlink" title="索引的限制"></a>索引的限制</h3><p>这里说的索引的限制将能解释上面联合索引的问题</p><h4 id="1-如果不是按照索引的最左列开始查询，则无法使用索引"><a href="#1-如果不是按照索引的最左列开始查询，则无法使用索引" class="headerlink" title="1. 如果不是按照索引的最左列开始查询，则无法使用索引"></a>1. 如果不是按照索引的最左列开始查询，则无法使用索引</h4><p>如果查询条件中有class_id, student_id会用上索引么？<br>这里就能回答这个问题，不会；</p><h4 id="2-不能跳过索引中的列"><a href="#2-不能跳过索引中的列" class="headerlink" title="2. 不能跳过索引中的列"></a>2. 不能跳过索引中的列</h4><p>如果查询条件中有teacher_id, student_id会用上索引么？<br>这里跳过了第二列，这个时候只使用索引的第一列</p><h4 id="3-如果查询中有某列的范围查询，则其右边的所有列的查询都不能使用索引优化查找"><a href="#3-如果查询中有某列的范围查询，则其右边的所有列的查询都不能使用索引优化查找" class="headerlink" title="3. 如果查询中有某列的范围查询，则其右边的所有列的查询都不能使用索引优化查找"></a>3. 如果查询中有某列的范围查询，则其右边的所有列的查询都不能使用索引优化查找</h4><p><img src="/assets/picture/mysql_index_a_b_c_range.png" alt="图片" title="索引全覆盖，但最左列是范围查询"><br>从 <code>explain</code> 中 row 是 3， 但是查询到结果只有一个，而只按照第一列范围查询结果是3，这个例子可以印证上述限制</p><h3 id="索引的选择"><a href="#索引的选择" class="headerlink" title="索引的选择"></a>索引的选择</h3><p>突然发现一个问题，mysql 是如何选择索引的？</p><p>下面看看这个表：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE IF EXISTS `school`;</span><br><span class="line">CREATE TABLE `school` (</span><br><span class="line">  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT &apos;主键&apos;,</span><br><span class="line">  `name` varchar(20) NOT NULL DEFAULT &apos;&apos; COMMENT &apos;学校名称&apos;,</span><br><span class="line">  `phone` varchar(20) NOT NULL DEFAULT &apos;&apos; COMMENT &apos;学校电话&apos;,</span><br><span class="line">  `addr` varchar(255) NOT NULL DEFAULT &apos;&apos; COMMENT &apos;学校地址&apos;,</span><br><span class="line">  `email` varchar(30) NOT NULL DEFAULT &apos;&apos;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  KEY `idx_name_phone_email` (`name`,`phone`,`email`),</span><br><span class="line">  KEY `idx_name_phone` (`name`,`phone`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COMMENT=&apos;学校&apos;</span><br></pre></td></tr></table></figure><p><code>idx_name_phone_email</code> 和 <code>idx_name_phone</code> 这两个索引，设置的 <em>极不合理</em> ，这里 <em>不推荐使用</em> ， 但是这种情况下，mysql 会选择哪个索引呢？</p><p>插入一条测试数据<br><img src="/assets/picture/school_long_idx.png" alt="图片"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">desc <span class="keyword">select</span> * <span class="keyword">from</span> school <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">'重庆邮电大学'</span> <span class="keyword">and</span> phone = <span class="string">'76822313'</span>\G</span><br></pre></td></tr></table></figure><p>执行一下上面这个 sql 语句，两个索引都可能被用到，会是哪一个呢？</p><p>这里我们能看到，使用的是 <code>idx_name_phone_email</code><br><img src="/assets/picture/school_long_idx2.png" alt="图片" title="使用索引 `idx_name_phone_email`"></p><p>这里做一个简单的猜想，为什么使用的是 <code>idx_name_phone_email</code>, 这和索引的声明顺序有关吗？</p><p>重新建表看看：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`school`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`school`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'主键'</span>,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'学校名称'</span>,</span><br><span class="line">  <span class="string">`phone`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'学校电话'</span>,</span><br><span class="line">  <span class="string">`addr`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'学校地址'</span>,</span><br><span class="line">  <span class="string">`email`</span> <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_name_phone`</span> (<span class="string">`name`</span>,<span class="string">`phone`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_name_phone_email`</span> (<span class="string">`name`</span>,<span class="string">`phone`</span>,<span class="string">`email`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">2</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COMMENT</span>=<span class="string">'学校'</span></span><br></pre></td></tr></table></figure><p>修改了索引定义顺序之后， 使用的索引也随之改变了</p><p><img src="/assets/picture/school_short_idx.png" alt="图片" title="使用索引 `idx_name_phone`"></p><p>好像，我们的猜想被证实了</p><h6 id="如果我们需要制定使用哪个索引呢？"><a href="#如果我们需要制定使用哪个索引呢？" class="headerlink" title="如果我们需要制定使用哪个索引呢？"></a>如果我们需要制定使用哪个索引呢？</h6><p><img src="/assets/picture/school_short_idx.png" alt="图片" title="使用 force index"></p><p><code>force index(idx_name)</code>: 使用这个关键字强制指定要用的索引即可</p><p>还有其他方式吗？</p><p>可以 <code>use index(idx_name)</code> 推荐使用的索引</p><p><img src="/assets/picture/school_use_idx.png" alt="图片" title="使用 use index"></p><h6 id="use-index-和-force-index-的区别"><a href="#use-index-和-force-index-的区别" class="headerlink" title="use index 和 force index 的区别"></a><code>use index</code> 和 <code>force index</code> 的区别</h6><pre><code>If you use USE INDEX then you RECOMMEND optimizer to use this index, but it can use a table scan if optimizer thinks it will be faster. If you use FORCE INDEX then you MAKE optimizer to use this index even if it thinks a table scan is more efficient. Optimizer will use a table scan only if there is no way to use index to find rows.</code></pre><p>也就是说， 使用 <code>USE INDEX</code> 时 sql 优化可能会进行全表扫描，如果全表扫描更快的话； 而使用 <code>FORCE INDEX</code> 时，只能是使用索引，除非查询条件没有命中索引</p><p>指定使用索引还有一个使用场景，就是解决之前说到的 <em>范围查询时，索引无效</em></p><p><img src="/assets/picture/school_force_idx_range_query.png" alt="图片" title="范围查询时强制使用索引"></p><p>除了指定要使用的索引，还能指定不使用哪些索引</p><p><img src="/assets/picture/school_ignore_idx.png" alt="图片" title="使用 ignore index"></p><p>排除掉不使用的索引，就能使用想要使用的索引</p>]]></content>
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>synchronized 几种使用方法比较</title>
      <link href="/2016/07/27/%E6%8A%80%E6%9C%AF/java/2016-07-27-synchronized%20%E5%87%A0%E7%A7%8D%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%E6%AF%94%E8%BE%83/"/>
      <url>/2016/07/27/%E6%8A%80%E6%9C%AF/java/2016-07-27-synchronized%20%E5%87%A0%E7%A7%8D%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%E6%AF%94%E8%BE%83/</url>
      <content type="html"><![CDATA[<h2 id="synchronized-几种使用方法比较"><a href="#synchronized-几种使用方法比较" class="headerlink" title="synchronized 几种使用方法比较"></a>synchronized 几种使用方法比较</h2><p><code>synchronized</code> 关键字在 Java 中出现的很早， Java 提供的实现原子性的内置锁机制，就是用这个关键字实现。<br><code>synchronized</code> 关键字可以修饰方法，也可以修饰一个代码块，实现一种互斥锁，这里就不做赘述。</p><p>下面讨论几个问题</p><h4 id="1-synchronized-关键字修饰-非静态方法，-锁定的是对象实例还是类？"><a href="#1-synchronized-关键字修饰-非静态方法，-锁定的是对象实例还是类？" class="headerlink" title="1. synchronized 关键字修饰 非静态方法， 锁定的是对象实例还是类？"></a>1. synchronized 关键字修饰 非静态方法， 锁定的是对象实例还是类？</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">syncInnerReferenceLock1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; COUNT; i++) &#123;</span><br><span class="line">        System.out.println(<span class="string">"syncInnerReferenceLock1: [count] -- "</span> + i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">syncInnerReferenceLock2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; COUNT; i++) &#123;</span><br><span class="line">        System.out.println(<span class="string">"syncInnerReferenceLock2: [count] -- "</span> + i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> SyncLockDemo syncLockDemo1 = <span class="keyword">new</span> SyncLockDemo();</span><br><span class="line"></span><br><span class="line">    Thread t1 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            syncLockDemo1.syncInnerReferenceLock1();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    Thread t2 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            syncLockDemo1.syncInnerReferenceLock2();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    t1.start();</span><br><span class="line">    t2.start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码中有两个用 <code>synchronized</code>  关键字修饰的非静态方法， 在两个线程中运行这两个方法， 结果如下</p><pre><code>    syncInnerReferenceLock2: [count] -- 0    syncInnerReferenceLock2: [count] -- 1    syncInnerReferenceLock2: [count] -- 2    syncInnerReferenceLock2: [count] -- 3    syncInnerReferenceLock2: [count] -- 4    syncInnerReferenceLock1: [count] -- 0    syncInnerReferenceLock1: [count] -- 1    syncInnerReferenceLock1: [count] -- 2    syncInnerReferenceLock1: [count] -- 3    syncInnerReferenceLock1: [count] -- 4    Process finished with exit code 0或    syncInnerReferenceLock1: [count] -- 0    syncInnerReferenceLock1: [count] -- 1    syncInnerReferenceLock1: [count] -- 2    syncInnerReferenceLock1: [count] -- 3    syncInnerReferenceLock1: [count] -- 4    syncInnerReferenceLock2: [count] -- 0    syncInnerReferenceLock2: [count] -- 1    syncInnerReferenceLock2: [count] -- 2    syncInnerReferenceLock2: [count] -- 3    syncInnerReferenceLock2: [count] -- 4    Process finished with exit code 0</code></pre><p>从结果可以看出，两个线程是串行执行的，我们可以猜测： 修饰非静态方法的 <code>synchronized</code> 关键字锁定的是这个类的对象实例，下面我们来验证这个想法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">syncInnerReferenceLock1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; COUNT; i++) &#123;</span><br><span class="line">      System.out.println(<span class="string">"syncInnerReferenceLock1: [count] -- "</span> + i);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">syncInnerReferenceLock2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; COUNT; i++) &#123;</span><br><span class="line">      System.out.println(<span class="string">"syncInnerReferenceLock2: [count] -- "</span> + i);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> SyncLockDemo syncLockDemo1 = <span class="keyword">new</span> SyncLockDemo();</span><br><span class="line">  <span class="keyword">final</span> SyncLockDemo syncLockDemo2 = <span class="keyword">new</span> SyncLockDemo();</span><br><span class="line"></span><br><span class="line">  Thread t1 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">          syncLockDemo1.syncInnerReferenceLock1();</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  Thread t2 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">          syncLockDemo2.syncInnerReferenceLock2();</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  t1.start();</span><br><span class="line">  t2.start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们创建两个对象实例， 在两个线程中分别执行两个被 <code>synchronized</code> 关键字修饰的方法， 结果如下：</p><pre><code>syncInnerReferenceLock2: [count] -- 0syncInnerReferenceLock1: [count] -- 0syncInnerReferenceLock2: [count] -- 1syncInnerReferenceLock1: [count] -- 1syncInnerReferenceLock1: [count] -- 2syncInnerReferenceLock1: [count] -- 3syncInnerReferenceLock1: [count] -- 4syncInnerReferenceLock2: [count] -- 2syncInnerReferenceLock2: [count] -- 3syncInnerReferenceLock2: [count] -- 4Process finished with exit code 0</code></pre><p>这里可以看到，连个线程是并行执行的，没有丝毫互斥的现象，从而论证了上面的猜测！</p><h4 id="2-synchronized-关键字修饰-静态方法，-锁定的是对象实例还是类？"><a href="#2-synchronized-关键字修饰-静态方法，-锁定的是对象实例还是类？" class="headerlink" title="2.  synchronized 关键字修饰 静态方法， 锁定的是对象实例还是类？"></a>2.  <code>synchronized</code> 关键字修饰 <code>静态方法</code>， 锁定的是对象实例还是类？</h4><p>看了第一个问题，我们能不能说， <code>synchronized</code> 关键字修饰 <code>静态方法</code>， 锁定的是类呢？ 让我们看看</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">syncLock1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; COUNT; i++) &#123;</span><br><span class="line">        System.out.println(<span class="string">"syncLock1: [count] -- "</span> + i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">syncLock2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; COUNT; i++) &#123;</span><br><span class="line">        System.out.println(<span class="string">"syncLock2: [count] -- "</span> + i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    Thread t1 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            syncLock1();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    Thread t2 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            syncLock2();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    t1.start();</span><br><span class="line">    t2.start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里把 <code>1</code> 中的两个方法修改成静态方法， 在两个线程中分别执行两个方法，结果如下：</p><pre><code>    syncLock1: [count] -- 0    syncLock1: [count] -- 1    syncLock1: [count] -- 2    syncLock1: [count] -- 3    syncLock1: [count] -- 4    syncLock2: [count] -- 0    syncLock2: [count] -- 1    syncLock2: [count] -- 2    syncLock2: [count] -- 3    syncLock2: [count] -- 4    Process finished with exit code 0或    syncLock2: [count] -- 0    syncLock2: [count] -- 1    syncLock2: [count] -- 2    syncLock2: [count] -- 3    syncLock2: [count] -- 4    syncLock1: [count] -- 0    syncLock1: [count] -- 1    syncLock1: [count] -- 2    syncLock1: [count] -- 3    syncLock1: [count] -- 4    Process finished with exit code 0</code></pre><p>可以从结果中看出，两个线程是串行执行，存在明显的互斥，<code>synchronized</code> 关键字修饰 <code>静态方法</code>， 锁定的确实是类</p><h4 id="3-synchronized-reference-和-synchronized-Clazz-class"><a href="#3-synchronized-reference-和-synchronized-Clazz-class" class="headerlink" title="3. synchronized(reference) {} 和 synchronized(Clazz.class) {}"></a>3. synchronized(reference) {} 和 synchronized(Clazz.class) {}</h4><p>synchorinizable 修饰类和对象的区别是什么呢？</p><p>在我看来， synchorinizable 修饰类和对象，可以抽象为 <code>类锁</code> 和 <code>对象锁</code></p><p>下面上代码</p><p>这是一个 <code>类锁</code> 的范例<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">syncClazzLock</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">synchronized</span> (SyncLockDemo.class) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; COUNT; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">"syncClazzLock: [count] -- "</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这是个 <code>对象锁</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">syncReferenceLock</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; COUNT; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">"syncReferenceLock: [count] -- "</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>调用上面的锁</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">final</span> SyncLockDemo syncLockDemo = <span class="keyword">new</span> SyncLockDemo();</span><br><span class="line"></span><br><span class="line">     Thread t1 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">             syncClazzLock();</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;);</span><br><span class="line"></span><br><span class="line">     Thread t3 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">             syncLockDemo.syncReferenceLock();</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;);</span><br><span class="line"></span><br><span class="line">     t1.start();</span><br><span class="line">     t3.start();</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>程序运行结果</p><pre><code>syncReferenceLock: [count] -- 0syncClazzLock: [count] -- 0syncReferenceLock: [count] -- 1syncClazzLock: [count] -- 1syncReferenceLock: [count] -- 2syncClazzLock: [count] -- 2syncReferenceLock: [count] -- 3syncReferenceLock: [count] -- 4syncClazzLock: [count] -- 3syncClazzLock: [count] -- 4Process finished with exit code 0</code></pre><p>从结果可以看出， 这两个线程的运行顺序是并行的，并不互斥。 因为 <code>syncClazzLock</code> 中 <code>synchronized</code> 关键字修饰的是类， 这个  <code>类锁</code> 作用于类的范围， 作用于类的静态方法、类的class 对象、类的静态代码块；而 <code>syncReferenceLock</code> 方法中 <code>synchronized</code> 关键字修饰的是对象， 这个 <code>对象锁</code> 最用于对象的范围，作用的对象示例的方法或一个对象实例上</p>]]></content>
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 并发 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Spring揭秘读书笔记 —— 如何干涉IOC容器</title>
      <link href="/2016/07/16/%E6%8A%80%E6%9C%AF/spring/2016-07-16-Spring%E6%8F%AD%E7%A7%98%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E5%A6%82%E4%BD%95%E5%B9%B2%E6%B6%89IOC%E5%AE%B9%E5%99%A8/"/>
      <url>/2016/07/16/%E6%8A%80%E6%9C%AF/spring/2016-07-16-Spring%E6%8F%AD%E7%A7%98%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E5%A6%82%E4%BD%95%E5%B9%B2%E6%B6%89IOC%E5%AE%B9%E5%99%A8/</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>Spring IOC 容器在加载 Bean 的时候，可以大致分为两个阶段</p><ol><li>容器启动阶段</li><li>Bean 实例化阶段</li></ol><h3 id="插手容器启动阶段"><a href="#插手容器启动阶段" class="headerlink" title="插手容器启动阶段"></a>插手容器启动阶段</h3><p>容器启动阶段简而言之就是将 通过注解或者在 xml 文件中配置信息，解析转化为 <code>BeanDefinition</code>， 再通过 <code>BeanDefinitionRegister</code> 注册到容器中<br>这个阶段主要是一些收集准备工作</p><p><code>Spring</code> 提供给我们插手这一阶段的方式是： 实现 <code>BeanFactoryPostProcessor</code></p>]]></content>
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> 《Spring揭秘》 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Spring揭秘读书笔记 —— IOC BeanFactory</title>
      <link href="/2016/07/15/%E6%8A%80%E6%9C%AF/spring/2016-07-15-Spring%E6%8F%AD%E7%A7%98%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94IOC%E4%B9%8BBeanFactory/"/>
      <url>/2016/07/15/%E6%8A%80%E6%9C%AF/spring/2016-07-15-Spring%E6%8F%AD%E7%A7%98%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94IOC%E4%B9%8BBeanFactory/</url>
      <content type="html"><![CDATA[<h3 id="BeanFactory"><a href="#BeanFactory" class="headerlink" title="BeanFactory"></a>BeanFactory</h3><p>Spring 的Ioc 容器除了是 Ioc Service Provider 还提供了其他的功能， 这边笔记将介绍 Ioc 容器的 Ioc 相关支持以及衍生的高级特性</p><p>Spring 中提供两种IOC 容器， <code>BeanFactory</code> 和  <code>ApplicationContext</code></p><h5 id="BeanFactory-1"><a href="#BeanFactory-1" class="headerlink" title="BeanFactory:"></a><code>BeanFactory</code>:</h5><p>基本类型的ICO 容器， 提供完整的IOC支持。 默认采用延迟初始化策略(lazy-load) 只有客户端对象需要访问容器中某个收管理的对象的时候， 才对该受管理的对象进行初始化以及依赖注入的操作。</p><h5 id="ApplicationContext"><a href="#ApplicationContext" class="headerlink" title="ApplicationContext"></a><code>ApplicationContext</code></h5><p>留待下章讲解</p><p>先看看 <code>BeanFactory</code> 的定义</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BeanFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Used to dereference a FactoryBean instance and distinguish it from beans created by the FactoryBean.</span></span><br><span class="line"><span class="comment">   * 这个前缀用于区分FactoryBean， 当想从BeanFactory 中获取一个FactoryBean 对象的时候，会返回这个工厂类</span></span><br><span class="line"><span class="comment">   * For example, if the bean named  myJndiObject is a FactoryBean, getting  myJndiObject will return the factory, not the instance returned by the factory.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String FACTORY_BEAN_PREFIX = <span class="string">"&amp;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">Object <span class="title">getBean</span><span class="params">(String name)</span> <span class="keyword">throws</span> BeansException</span>;</span><br><span class="line"></span><br><span class="line">&lt;T&gt; <span class="function">T <span class="title">getBean</span><span class="params">(String name, Class&lt;T&gt; requiredType)</span> <span class="keyword">throws</span> BeansException</span>;</span><br><span class="line"></span><br><span class="line">&lt;T&gt; <span class="function">T <span class="title">getBean</span><span class="params">(Class&lt;T&gt; requiredType)</span> <span class="keyword">throws</span> BeansException</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> name the name of the bean to retrieve</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args arguments to use when creating a bean instance using explicit arguments</span></span><br><span class="line"><span class="comment"> * (only applied when creating a new instance as opposed to retrieving an existing one)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.5</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">Object <span class="title">getBean</span><span class="params">(String name, Object... args)</span> <span class="keyword">throws</span> BeansException</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args arguments to use when creating a bean instance using explicit arguments</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 4.1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">&lt;T&gt; <span class="function">T <span class="title">getBean</span><span class="params">(Class&lt;T&gt; requiredType, Object... args)</span> <span class="keyword">throws</span> BeansException</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">containsBean</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">isSingleton</span><span class="params">(String name)</span> <span class="keyword">throws</span> NoSuchBeanDefinitionException</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">isPrototype</span><span class="params">(String name)</span> <span class="keyword">throws</span> NoSuchBeanDefinitionException</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">isTypeMatch</span><span class="params">(String name, ResolvableType typeToMatch)</span> <span class="keyword">throws</span> NoSuchBeanDefinitionException</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">isTypeMatch</span><span class="params">(String name, Class&lt;?&gt; typeToMatch)</span> <span class="keyword">throws</span> NoSuchBeanDefinitionException</span>;</span><br><span class="line"></span><br><span class="line">Class&lt;?&gt; getType(String name) <span class="keyword">throws</span> NoSuchBeanDefinitionException;</span><br><span class="line"></span><br><span class="line">String[] getAliases(String name);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/picture/beanDefinition.png" alt="" title="BeanDefinition 类图"></p><p>讲到了 BeanFactory 不得不提 BeanDefinitionRegister</p><p><code>Spring IOC</code> 中的 <code>BeanDefinition</code> 封装了一个被管理的Bean 的所有信息， 再通过 <code>BeanDefinitionRegister</code> 将 Bean 注册到 IOC 容器中去</p><p>本章章节比较易懂， 这里主要讲讲没这么提及的FactoryBean。</p><h5 id="FactoryBean"><a href="#FactoryBean" class="headerlink" title="FactoryBean :"></a><code>FactoryBean</code> :</h5><p><code>FactoryBean</code> 从命名上看跟  <code>BeanFactory</code> 很容易混淆。 <code>FactoryBean</code> 是 Spring 提供的一种可以扩展容器对象实例化逻辑的接口， 这个命名主语是Bean，定语是Factory； 也就是说它是 Spring 管理的一个普通的Bean， 只是它相对于生产对象来说，它是一个工厂。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.liam.learn.ioc.factorybean.DateWithFactoryBean"</span> <span class="attr">id</span>=<span class="string">"dateWithFactoryBean"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dateTimeFormatter"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"dateTimeFormatter"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dateTimeFormatter"</span> <span class="attr">class</span>=<span class="string">"org.springframework.format.datetime.standard.DateTimeFormatterFactoryBean"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>获取FactoryBean 的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    ClassPathXmlApplicationContext applicationContext = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"spring-config.xml"</span>);</span><br><span class="line">    DateTimeFormatterFactoryBean dateTimeFormatter = (DateTimeFormatterFactoryBean) applicationContext.getBean(<span class="string">"&amp;dateTimeFormatter"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>BeanFactory</code> 中的 <code>getObjectForBeanInstance</code> 方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> Object <span class="title">getObjectForBeanInstance</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">Object beanInstance, String name, String beanName, RootBeanDefinition mbd)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Don't let calling code try to dereference the factory if the bean isn't a factory.</span></span><br><span class="line">   <span class="comment">// 如果 bean 的名称以'&amp;'开头 并且 bean的类型不属于 FactoryBean 将抛出异常</span></span><br><span class="line"><span class="keyword">if</span> (BeanFactoryUtils.isFactoryDereference(name) &amp;&amp; !(beanInstance <span class="keyword">instanceof</span> FactoryBean)) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> BeanIsNotAFactoryException(transformedBeanName(name), beanInstance.getClass());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Now we have the bean instance, which may be a normal bean or a FactoryBean.</span></span><br><span class="line"><span class="comment">// If it's a FactoryBean, we use it to create a bean instance, unless the</span></span><br><span class="line"><span class="comment">// caller actually wants a reference to the factory.</span></span><br><span class="line">   <span class="comment">// 如果当前 Bean 的引用类型不是 FactoryBean 或者 bean 的名称以 '&amp;' 开头直接返回这个引用</span></span><br><span class="line"><span class="keyword">if</span> (!(beanInstance <span class="keyword">instanceof</span> FactoryBean) || BeanFactoryUtils.isFactoryDereference(name)) &#123;</span><br><span class="line"><span class="keyword">return</span> beanInstance;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Object object = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (mbd == <span class="keyword">null</span>) &#123;  <span class="comment">// 从缓存中获取FactoryBean 的引用</span></span><br><span class="line">object = getCachedObjectForFactoryBean(beanName);</span><br><span class="line">&#125;</span><br><span class="line">   <span class="comment">// 如果缓存中没有这个FactoryBean 的引用； 将新建引用，存到缓存中，并返回</span></span><br><span class="line"><span class="keyword">if</span> (object == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="comment">// Return bean instance from factory.</span></span><br><span class="line">FactoryBean&lt;?&gt; factory = (FactoryBean&lt;?&gt;) beanInstance;</span><br><span class="line"><span class="comment">// Caches object obtained from FactoryBean if it is a singleton.</span></span><br><span class="line"><span class="keyword">if</span> (mbd == <span class="keyword">null</span> &amp;&amp; containsBeanDefinition(beanName)) &#123;</span><br><span class="line">mbd = getMergedLocalBeanDefinition(beanName);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">boolean</span> synthetic = (mbd != <span class="keyword">null</span> &amp;&amp; mbd.isSynthetic());</span><br><span class="line">object = getObjectFromFactoryBean(factory, beanName, !synthetic);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> object;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> 《Spring揭秘》 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Spring揭秘读书笔记 —— IOC 基本概念</title>
      <link href="/2016/07/15/%E6%8A%80%E6%9C%AF/spring/2016-07-15-Spring%E6%8F%AD%E7%A7%98%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94IOC%20%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
      <url>/2016/07/15/%E6%8A%80%E6%9C%AF/spring/2016-07-15-Spring%E6%8F%AD%E7%A7%98%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94IOC%20%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>一直在使用Spring 这一开源项目， 但是在学习spring 的过程中一直没遇到让我心旷神怡的好书，看过 <code>《Spring技术内幕：深入解析Spring架构与设计原理（第2版）》</code>， 从源码角度讲解spring， 虽然也很不错， 但是略感枯燥。  另外就是开涛大神的 <code>跟我学Spring</code>(<a href="http://jinnianshilongnian.iteye.com/blog/1482071" target="_blank" rel="noopener">http://jinnianshilongnian.iteye.com/blog/1482071</a>) 和 <code>跟我学Spring MVC</code>(<a href="http://jinnianshilongnian.iteye.com/blog/1617451)" target="_blank" rel="noopener">http://jinnianshilongnian.iteye.com/blog/1617451)</a>, 这两个系列的博客，主要是从使用Spring 的角度出发，很适合初学者系列的学习Spring 的使用以及一些Spring 的原理。</p><h6 id="以上对两位大神的著作的评论仅属个人言论，欢迎大家指正"><a href="#以上对两位大神的著作的评论仅属个人言论，欢迎大家指正" class="headerlink" title="以上对两位大神的著作的评论仅属个人言论，欢迎大家指正"></a>以上对两位大神的著作的评论仅属个人言论，欢迎大家指正</h6><p>最近接触到一本比较 <code>古老</code> 的 Spring 学习书籍 ———— <code>《Spring揭秘》</code> , 这本书貌似现在已经停刊了，讲的 Spring 也是将的 <code>Spring 2.X</code> , 但是 Spring 的主要思想，在这本书中被作者用一种通俗易懂的语言表达的让人能一边看，一边笑着点头， 甚是舒畅。</p><hr><h2 id="IoC的基本概念读书笔记"><a href="#IoC的基本概念读书笔记" class="headerlink" title="IoC的基本概念读书笔记"></a>IoC的基本概念读书笔记</h2><h4 id="IoC-控制反转-————-我们的理念是：让别人为你服务"><a href="#IoC-控制反转-————-我们的理念是：让别人为你服务" class="headerlink" title="IoC [控制反转] ———— 我们的理念是：让别人为你服务"></a>IoC [控制反转] ———— 我们的理念是：让别人为你服务</h4><p>书中的比喻很形象<br><img src="/assets/picture/iocmetaphor.png" alt="" title="IoC形象比喻"></p><p>常见的 Ioc 实现方法</p><ol><li>构造方法注入</li><li>setter方法注入</li><li>接口注入</li></ol><p>三种方法中 <code>接口注入</code> 较为难理解<br>被注入的对象要想 Ioc Service Provider 为其注入依赖对象， 就要实现一个特定接口，特定的接口提供一个方法，用来为其注入一个依赖对象，这个特性接口就如同是上图比喻中的 “拿衣服的女朋友”</p><p>示例：<br><img src="/assets/picture/ioc.interfaceinsert.demo.png" alt=""><br>FxNewsProvider 希望能被注入依赖 IFXNewsListener, 使用接口注入时，实现 FXNewsListenerCallable 接口  FXNewListenerCallable 接口提供了 injectNewsListener 方法, 这个方法的参数的类型就是 IFXNewsListenr</p><p><code>接口注入</code>这种注入方式目前已经过时，不提倡使用</p><p><code>构造方法注入</code> 在对象构造完之后，就会立即进入就绪状态，可以马上使用。但是如果依赖的对象比较多，构造方法的参数列表会比较长，而且<code>构造方法注入</code>底层实现还是基于反射机制，而反射机制对于构造方法中相同类型的参数处理会有困难；而且构造方法不能被继承，不能设置默认值</p><p><code>setter方法注入</code> setter 方法参数单一，反射机制可以很好的支持，而且setter 方法能被继承，能够设置默认值</p>]]></content>
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> 《Spring揭秘》 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Jackson 中的 Features</title>
      <link href="/2016/07/10/%E6%8A%80%E6%9C%AF/java/2016-07-10-jackson%E4%B8%AD%E7%9A%84Feature/"/>
      <url>/2016/07/10/%E6%8A%80%E6%9C%AF/java/2016-07-10-jackson%E4%B8%AD%E7%9A%84Feature/</url>
      <content type="html"><![CDATA[<h2 id="Jackson-中的各种-Features"><a href="#Jackson-中的各种-Features" class="headerlink" title="Jackson 中的各种 Features"></a>Jackson 中的各种 Features</h2><p>先来看看 jackson 中的各种feature<br><img src="/assets/picture/jacksonFeature.png" alt="图片" title="Feature 类图"></p><p>首先是 序列化时候的Feature ——</p><h3 id="SerializaitonFeature"><a href="#SerializaitonFeature" class="headerlink" title="SerializaitonFeature"></a>SerializaitonFeature</h3><hr><h4 id="WRAP-ROOT-VALUE-false-序列化的json是否显示根节点"><a href="#WRAP-ROOT-VALUE-false-序列化的json是否显示根节点" class="headerlink" title="WRAP_ROOT_VALUE(false) : 序列化的json是否显示根节点"></a><code>WRAP_ROOT_VALUE(false)</code> : 序列化的json是否显示根节点</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testWrapRoot</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       SimpleBean simpleBean = <span class="keyword">new</span> SimpleBean();</span><br><span class="line">       simpleBean.setCode(<span class="number">1</span>);</span><br><span class="line">       simpleBean.setName(<span class="string">"TEST_WRAP_ROOT_VALUE"</span>);</span><br><span class="line">       simpleBean.setDesc(Lists.newArrayList(<span class="string">"test1"</span>, <span class="string">"test2"</span>, <span class="string">"test3"</span>));</span><br><span class="line"></span><br><span class="line">       ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"><span class="comment">//        objectMapper.enable(SerializationFeature.WRAP_ROOT_VALUE);</span></span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           String s = objectMapper.writeValueAsString(simpleBean);</span><br><span class="line">           System.out.println(s);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><pre><code>{&quot;name&quot;:&quot;TEST_WRAP_ROOT_VALUE&quot;,&quot;code&quot;:1,&quot;desc&quot;:[&quot;test1&quot;,&quot;test2&quot;,&quot;test3&quot;]}</code></pre><p>去掉注释的运行结果：</p><pre><code>{&quot;SimpleBean&quot;:{&quot;name&quot;:&quot;TEST_WRAP_ROOT_VALUE&quot;,&quot;code&quot;:1,&quot;desc&quot;:[&quot;test1&quot;,&quot;test2&quot;,&quot;test3&quot;]}}</code></pre><p>从结果可以看出 jackson 会把类名作为根节点展示</p><hr><h4 id="INDENT-OUTPUT-false-允许或禁止是否以缩进的方式展示json"><a href="#INDENT-OUTPUT-false-允许或禁止是否以缩进的方式展示json" class="headerlink" title="INDENT_OUTPUT(false): 允许或禁止是否以缩进的方式展示json"></a><code>INDENT_OUTPUT(false)</code>: 允许或禁止是否以缩进的方式展示json</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testIdentOutput</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SimpleBean simpleBean = <span class="keyword">new</span> SimpleBean();</span><br><span class="line">    simpleBean.setCode(<span class="number">1</span>);</span><br><span class="line">    simpleBean.setName(<span class="string">"TEST_WRAP_ROOT_VALUE"</span>);</span><br><span class="line">    simpleBean.setDesc(Lists.newArrayList(<span class="string">"test1"</span>, <span class="string">"test2"</span>, <span class="string">"test3"</span>));</span><br><span class="line"></span><br><span class="line">    ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">    objectMapper.enable(SerializationFeature.INDENT_OUTPUT);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        String s = objectMapper.writeValueAsString(simpleBean);</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出的结果：</p><pre><code>{    &quot;name&quot; : &quot;TEST_WRAP_ROOT_VALUE&quot;,    &quot;code&quot; : 1,    &quot;desc&quot; : [ &quot;test1&quot;, &quot;test2&quot;, &quot;test3&quot; ]}</code></pre><hr><h4 id="FAIL-ON-EMPTY-BEANS-true-当类的一个属性外部无法访问-如：没有getter-setter-的私有属性-，且没有annotation-标明需要序列化时，如果FAIL-ON-EMPTY-BEANS-是true-将会跑出异常，如果是false-则不会跑出异常"><a href="#FAIL-ON-EMPTY-BEANS-true-当类的一个属性外部无法访问-如：没有getter-setter-的私有属性-，且没有annotation-标明需要序列化时，如果FAIL-ON-EMPTY-BEANS-是true-将会跑出异常，如果是false-则不会跑出异常" class="headerlink" title="FAIL_ON_EMPTY_BEANS(true): 当类的一个属性外部无法访问(如：没有getter setter 的私有属性)，且没有annotation 标明需要序列化时，如果FAIL_ON_EMPTY_BEANS 是true 将会跑出异常，如果是false 则不会跑出异常"></a><code>FAIL_ON_EMPTY_BEANS</code>(true): 当类的一个属性外部无法访问(如：没有getter setter 的私有属性)，且没有annotation 标明需要序列化时，如果FAIL_ON_EMPTY_BEANS 是true 将会跑出异常，如果是false 则不会跑出异常</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testFailOnEmptyField</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        TestBean simpleBean = <span class="keyword">new</span> TestBean();</span><br><span class="line"></span><br><span class="line">        ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"><span class="comment">//        objectMapper.disable(SerializationFeature.FAIL_ON_EMPTY_BEANS);</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String s = objectMapper.writeValueAsString(simpleBean);</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">TestBean</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String name;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>代码运行结果</p><pre><code>com.fasterxml.jackson.databind.JsonMappingException: No serializer found for class com.liam.learning.Main$TestBean and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS)  at com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:275)  at com.fasterxml.jackson.databind.SerializerProvider.mappingException(SerializerProvider.java:1109)  at com.fasterxml.jackson.databind.SerializerProvider.reportMappingProblem(SerializerProvider.java:1134)  at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:69)  at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:32)  at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:292)  at com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue(ObjectMapper.java:3672)  at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:3048)  at com.liam.learning.Main.testFailOnEmptyField(Main.java:56)  at com.liam.learning.Main.main(Main.java:15)  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)  at java.lang.reflect.Method.invoke(Method.java:606)  at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)</code></pre><p>取消注释的运行结果：</p><pre><code>{}</code></pre><hr><h4 id="FAIL-ON-SELF-REFERENCES-true"><a href="#FAIL-ON-SELF-REFERENCES-true" class="headerlink" title="FAIL_ON_SELF_REFERENCES(true)"></a>FAIL_ON_SELF_REFERENCES(true)</h4><p>如果POJO 中有一个直接自我引用，在序列化的时候会抛出 <code>com.fasterxml.jackson.databind.JsonMappingException</code></p><hr><h4 id="WRAP-EXCEPTIONS-true"><a href="#WRAP-EXCEPTIONS-true" class="headerlink" title="WRAP_EXCEPTIONS(true)"></a>WRAP_EXCEPTIONS(true)</h4><p>如果序列化过程中，如果抛出 Exception 将会被包装，添加额外的上下文信息</p><hr><h4 id="FAIL-ON-UNWRAPPED-TYPE-IDENTIFIERS-true"><a href="#FAIL-ON-UNWRAPPED-TYPE-IDENTIFIERS-true" class="headerlink" title="FAIL_ON_UNWRAPPED_TYPE_IDENTIFIERS(true),"></a>FAIL_ON_UNWRAPPED_TYPE_IDENTIFIERS(true),</h4><h4 id="CLOSE-CLOSEABLE-false"><a href="#CLOSE-CLOSEABLE-false" class="headerlink" title="CLOSE_CLOSEABLE(false),"></a>CLOSE_CLOSEABLE(false),</h4><h4 id="FLUSH-AFTER-WRITE-VALUE-true"><a href="#FLUSH-AFTER-WRITE-VALUE-true" class="headerlink" title="FLUSH_AFTER_WRITE_VALUE(true),"></a>FLUSH_AFTER_WRITE_VALUE(true),</h4><h4 id="WRITE-DATES-AS-TIMESTAMPS-true"><a href="#WRITE-DATES-AS-TIMESTAMPS-true" class="headerlink" title="WRITE_DATES_AS_TIMESTAMPS(true),"></a>WRITE_DATES_AS_TIMESTAMPS(true),</h4><h4 id="WRITE-DATE-KEYS-AS-TIMESTAMPS-false"><a href="#WRITE-DATE-KEYS-AS-TIMESTAMPS-false" class="headerlink" title="WRITE_DATE_KEYS_AS_TIMESTAMPS(false),"></a>WRITE_DATE_KEYS_AS_TIMESTAMPS(false),</h4><h4 id="WRITE-DATES-WITH-ZONE-ID-false"><a href="#WRITE-DATES-WITH-ZONE-ID-false" class="headerlink" title="WRITE_DATES_WITH_ZONE_ID(false),"></a>WRITE_DATES_WITH_ZONE_ID(false),</h4><h4 id="WRITE-DURATIONS-AS-TIMESTAMPS-true"><a href="#WRITE-DURATIONS-AS-TIMESTAMPS-true" class="headerlink" title="WRITE_DURATIONS_AS_TIMESTAMPS(true),"></a>WRITE_DURATIONS_AS_TIMESTAMPS(true),</h4><hr><h4 id="WRITE-CHAR-ARRAYS-AS-JSON-ARRAYS-false-序列化json-的时候对于-char-为true-则解析成数组形式；-为false-则解析成一个字符串-String"><a href="#WRITE-CHAR-ARRAYS-AS-JSON-ARRAYS-false-序列化json-的时候对于-char-为true-则解析成数组形式；-为false-则解析成一个字符串-String" class="headerlink" title="WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS(false): 序列化json 的时候对于 char[] 为true 则解析成数组形式； 为false 则解析成一个字符串(String)"></a>WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS(false): 序列化json 的时候对于 <code>char[]</code> 为true 则解析成数组形式； 为false 则解析成一个字符串(String)</h4><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testWriteCharArraysAsJsonArrays</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       String t = <span class="string">"tester"</span>;</span><br><span class="line">       <span class="keyword">char</span>[] arr = t.toCharArray();</span><br><span class="line"></span><br><span class="line">       ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"><span class="comment">//        objectMapper.enable(SerializationFeature.WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS);</span></span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           String s = objectMapper.writeValueAsString(arr);</span><br><span class="line">           System.out.println(s);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>运行结果如下：</p><pre><code>&quot;tester&quot;</code></pre><p>去掉注释后，运行结果如下</p><pre><code>[&quot;t&quot;,&quot;e&quot;,&quot;s&quot;,&quot;t&quot;,&quot;e&quot;,&quot;r&quot;]</code></pre><hr><h4 id="WRITE-ENUMS-USING-TO-STRING-false-序列化时，-enable-用枚举的-enum-toString-表示枚举值-disable-用枚举的-enum-name-表示枚举值"><a href="#WRITE-ENUMS-USING-TO-STRING-false-序列化时，-enable-用枚举的-enum-toString-表示枚举值-disable-用枚举的-enum-name-表示枚举值" class="headerlink" title="WRITE_ENUMS_USING_TO_STRING(false): 序列化时， enable: 用枚举的 enum.toString() 表示枚举值 disable: 用枚举的 enum.name() 表示枚举值"></a>WRITE_ENUMS_USING_TO_STRING(false): 序列化时， enable: 用枚举的 enum.toString() 表示枚举值 disable: 用枚举的 enum.name() 表示枚举值</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testWriteEnumsUsingString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"><span class="comment">//        objectMapper.enable(SerializationFeature.WRITE_ENUMS_USING_TO_STRING);</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        String s = objectMapper.writeValueAsString(CHILD.BOY);</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">enum</span> CHILD &#123;</span><br><span class="line">    BOY, GIRL;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"+"</span> + <span class="keyword">this</span>.name() + <span class="string">"+"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码运行结果：</p><pre><code>&quot;BOY&quot;</code></pre><p>去掉注释后的代码运行结果：</p><pre><code>&quot;+BOY+&quot;</code></pre><hr><h4 id="WRITE-ENUMS-USING-INDEX-false-序列化时，用枚举的-enum-index-表示枚举值"><a href="#WRITE-ENUMS-USING-INDEX-false-序列化时，用枚举的-enum-index-表示枚举值" class="headerlink" title="WRITE_ENUMS_USING_INDEX(false): 序列化时，用枚举的 enum.index() 表示枚举值"></a>WRITE_ENUMS_USING_INDEX(false): 序列化时，用枚举的 enum.index() 表示枚举值</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testWriteEnumsUsingIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"><span class="comment">//        objectMapper.enable(SerializationFeature.WRITE_ENUMS_USING_INDEX);</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        String s = objectMapper.writeValueAsString(CHILD.BOY);</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">enum</span> CHILD &#123;</span><br><span class="line">    BOY, GIRL;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码运行结果：</p><pre><code>&quot;BOY&quot;</code></pre><p>取消注释后代码运行结果：</p><pre><code>0</code></pre><hr><h4 id="WRITE-NULL-MAP-VALUES-true-对于-Map-中的-null-值-是否序列化"><a href="#WRITE-NULL-MAP-VALUES-true-对于-Map-中的-null-值-是否序列化" class="headerlink" title="WRITE_NULL_MAP_VALUES(true): 对于 Map 中的 null 值 是否序列化"></a>WRITE_NULL_MAP_VALUES(true): 对于 Map 中的 null 值 是否序列化</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testWriteNullMapValues</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    HashMap&lt;String, Object&gt; extMap = Maps.newHashMap();</span><br><span class="line">    extMap.put(<span class="string">"test1"</span>, <span class="keyword">null</span>);</span><br><span class="line">    extMap.put(<span class="string">"test2"</span>, <span class="string">"not null"</span>);</span><br><span class="line"></span><br><span class="line">    ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"><span class="comment">//        objectMapper.disable(SerializationFeature.WRITE_NULL_MAP_VALUES);</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        String s = objectMapper.writeValueAsString(extMap);</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码运行结果：</p><pre><code>{&quot;test1&quot;:null,&quot;test2&quot;:&quot;not null&quot;}</code></pre><p>去除注释后的运行结果：</p><pre><code>{&quot;test2&quot;:&quot;not null&quot;}</code></pre><hr><h4 id="WRITE-EMPTY-JSON-ARRAYS-true-对于空的-Collection、-数组-为-true-则序列化，-为-false-则跳过，-默认为-true"><a href="#WRITE-EMPTY-JSON-ARRAYS-true-对于空的-Collection、-数组-为-true-则序列化，-为-false-则跳过，-默认为-true" class="headerlink" title="WRITE_EMPTY_JSON_ARRAYS(true): 对于空的 Collection、 数组 ; 为 true 则序列化， 为 false 则跳过， 默认为 true"></a>WRITE_EMPTY_JSON_ARRAYS(true): 对于空的 <code>Collection</code>、 <code>数组</code> ; 为 <code>true</code> 则序列化， 为 <code>false</code> 则跳过， 默认为 <code>true</code></h4><p>示例代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testWriteEmptyJsonArrays</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SimpleBean simpleBean = <span class="keyword">new</span> SimpleBean();</span><br><span class="line">    simpleBean.setCode(<span class="number">1</span>);</span><br><span class="line">    simpleBean.setName(<span class="string">"WRITE_EMPTY_JSON_ARRAYS"</span>);</span><br><span class="line">    simpleBean.setDesc(Collections.&lt;String&gt;emptyList());</span><br><span class="line"></span><br><span class="line">    ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"><span class="comment">//        objectMapper.disable(SerializationFeature.WRITE_EMPTY_JSON_ARRAYS);</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        String s = objectMapper.writeValueAsString(simpleBean);</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果如下：</p><pre><code>{&quot;name&quot;:&quot;WRITE_EMPTY_JSON_ARRAYS&quot;,&quot;code&quot;:1,&quot;desc&quot;:[],&quot;ext&quot;:null}</code></pre><p>取消注释后，运行结果如下：</p><pre><code>{&quot;name&quot;:&quot;WRITE_EMPTY_JSON_ARRAYS&quot;,&quot;code&quot;:1,&quot;ext&quot;:null}</code></pre><hr><h4 id="WRITE-SINGLE-ELEM-ARRAYS-UNWRAPPED-false-序列化json时，对于只有单个元素的数组，不用中括号-‘-’-括起来"><a href="#WRITE-SINGLE-ELEM-ARRAYS-UNWRAPPED-false-序列化json时，对于只有单个元素的数组，不用中括号-‘-’-括起来" class="headerlink" title="WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED(false): 序列化json时，对于只有单个元素的数组，不用中括号(‘[]’)括起来"></a>WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED(false): 序列化json时，对于只有单个元素的数组，不用中括号(‘[]’)括起来</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testWrietSingleElemArraysUnwrapped</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SimpleBean simpleBean = <span class="keyword">new</span> SimpleBean();</span><br><span class="line">    simpleBean.setCode(<span class="number">1</span>);</span><br><span class="line">    simpleBean.setName(<span class="string">"TEST_WRAP_ROOT_VALUE"</span>);</span><br><span class="line">    simpleBean.setDesc(Lists.newArrayList(<span class="string">"test1"</span>));</span><br><span class="line"></span><br><span class="line">    ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"><span class="comment">//        objectMapper.enable(SerializationFeature.WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED);</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        String s = objectMapper.writeValueAsString(simpleBean);</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码运行结果：</p><pre><code>{&quot;name&quot;:&quot;TEST_WRAP_ROOT_VALUE&quot;,&quot;code&quot;:1,&quot;desc&quot;:[&quot;test1&quot;]}</code></pre><p>去掉注释之后的，运行结果</p><pre><code>{&quot;name&quot;:&quot;TEST_WRAP_ROOT_VALUE&quot;,&quot;code&quot;:1,&quot;desc&quot;:&quot;test1&quot;}</code></pre><p>效果一目了然！</p><hr><h4 id="WRITE-BIGDECIMAL-AS-PLAIN-false-deprecated"><a href="#WRITE-BIGDECIMAL-AS-PLAIN-false-deprecated" class="headerlink" title="WRITE_BIGDECIMAL_AS_PLAIN(false): @deprecated"></a>WRITE_BIGDECIMAL_AS_PLAIN(false): <code>@deprecated</code></h4><p><code>@see</code></p><p><code>com.fasterxml.jackson.core.JsonGenerator.Feature#WRITE_BIGDECIMAL_AS_PLAIN</code></p><hr><h4 id="WRITE-DATE-TIMESTAMPS-AS-NANOSECONDS-true-序列化json的时候把时间类型值序列化成纳秒的形式"><a href="#WRITE-DATE-TIMESTAMPS-AS-NANOSECONDS-true-序列化json的时候把时间类型值序列化成纳秒的形式" class="headerlink" title="WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS(true): 序列化json的时候把时间类型值序列化成纳秒的形式"></a>WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS(true): 序列化json的时候把时间类型值序列化成纳秒的形式</h4><pre><code>`注意` 只有最新版本(`jdk8` 中的 `Date/Time` )的时间类型支持本特性, `jdk8` 之前的 `java.util.Date`  和`joda-time` 都不支持！</code></pre><hr><h4 id="ORDER-MAP-ENTRIES-BY-KEYS-false-序列化-Map-的时候，-为-true-则按照-Map-的-key-进行排序，否则不排序"><a href="#ORDER-MAP-ENTRIES-BY-KEYS-false-序列化-Map-的时候，-为-true-则按照-Map-的-key-进行排序，否则不排序" class="headerlink" title="ORDER_MAP_ENTRIES_BY_KEYS(false): 序列化 Map 的时候， 为 true 则按照 Map 的 key 进行排序，否则不排序"></a>ORDER_MAP_ENTRIES_BY_KEYS(false): 序列化 <code>Map</code> 的时候， 为 <code>true</code> 则按照 <code>Map</code> 的 <code>key</code> 进行排序，否则不排序</h4><p>示例代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testOrderMapEntriesByKeys</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"><span class="comment">//        objectMapper.enable(SerializationFeature.ORDER_MAP_ENTRIES_BY_KEYS);</span></span><br><span class="line">    Map&lt;String, String&gt; data = ImmutableMap.of(<span class="string">"1"</span>, <span class="string">"test1"</span>, <span class="string">"3"</span>, <span class="string">"test2"</span>, <span class="string">"2"</span>, <span class="string">"test3"</span>, <span class="string">"0"</span>, <span class="string">"test4"</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        String dateStr = objectMapper.writeValueAsString(data);</span><br><span class="line">        System.out.println(dateStr);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><pre><code>{&quot;1&quot;:&quot;test1&quot;,&quot;3&quot;:&quot;test2&quot;,&quot;2&quot;:&quot;test3&quot;,&quot;0&quot;:&quot;test4&quot;}</code></pre><p>取消注释的运行结果：</p><pre><code>{&quot;0&quot;:&quot;test4&quot;,&quot;1&quot;:&quot;test1&quot;,&quot;2&quot;:&quot;test3&quot;,&quot;3&quot;:&quot;test2&quot;}</code></pre><hr><h4 id="EAGER-SERIALIZER-FETCH-true-序列化是是否应当预先抓取必要的-JsonSerializer-，-绝大多数情况下不应该关闭此特性"><a href="#EAGER-SERIALIZER-FETCH-true-序列化是是否应当预先抓取必要的-JsonSerializer-，-绝大多数情况下不应该关闭此特性" class="headerlink" title="EAGER_SERIALIZER_FETCH(true): 序列化是是否应当预先抓取必要的 JsonSerializer ， 绝大多数情况下不应该关闭此特性"></a>EAGER_SERIALIZER_FETCH(true): 序列化是是否应当预先抓取必要的 <code>JsonSerializer</code> ， 绝大多数情况下不应该关闭此特性</h4><hr><h4 id="USE-EQUALITY-FOR-OBJECT-ID-false"><a href="#USE-EQUALITY-FOR-OBJECT-ID-false" class="headerlink" title="USE_EQUALITY_FOR_OBJECT_ID(false)"></a>USE_EQUALITY_FOR_OBJECT_ID(false)</h4><p>;</p><hr><p>接下来是 反序列化时候的Feature ——</p><h3 id="DeserializationFeature"><a href="#DeserializationFeature" class="headerlink" title="DeserializationFeature"></a>DeserializationFeature</h3><p>先来个最常用的：</p><h4 id="FAIL-ON-UNKNOWN-PROPERTIES-：-反序列化遇到未知的字段的时候是否失败，-默认是-true-会失败"><a href="#FAIL-ON-UNKNOWN-PROPERTIES-：-反序列化遇到未知的字段的时候是否失败，-默认是-true-会失败" class="headerlink" title="FAIL_ON_UNKNOWN_PROPERTIES ： 反序列化遇到未知的字段的时候是否失败， 默认是 true 会失败"></a><code>FAIL_ON_UNKNOWN_PROPERTIES</code> ： 反序列化遇到未知的字段的时候是否失败， 默认是 true 会失败</h4>]]></content>
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Json </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>MarkDown 基本语法</title>
      <link href="/2016/07/06/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/2016-07-06-markdown%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/"/>
      <url>/2016/07/06/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/2016-07-06-markdown%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>看到同事用 [git+github+markdown+jekyll] 搭建了一个<a href="http://littlepang.github.io/" target="_blank" rel="noopener"><em>个人博客</em></a>， 感觉很不错，果断 fork 他的分支，给自己来一个，下面简单记一些 [markdown]的语法，或者说占位符的用法</p><h1 id="MarkDown-基本语法"><a href="#MarkDown-基本语法" class="headerlink" title="MarkDown 基本语法"></a>MarkDown 基本语法</h1><hr><h3 id="标题："><a href="#标题：" class="headerlink" title="标题："></a>标题：</h3><h4 id="1-在文字标题之前加上-“-”-表示标题，-通过-“-”-的数量表示标题等，一个”-”表示一级，两个表示二级，最多六级"><a href="#1-在文字标题之前加上-“-”-表示标题，-通过-“-”-的数量表示标题等，一个”-”表示一级，两个表示二级，最多六级" class="headerlink" title="1. 在文字标题之前加上 “#” 表示标题， 通过 “#” 的数量表示标题等，一个”#”表示一级，两个表示二级，最多六级"></a>1. 在文字标题之前加上 “#” 表示标题， 通过 “#” 的数量表示标题等，一个”#”表示一级，两个表示二级，最多六级</h4><pre><code>例：# 用&quot;#&quot;表示标题   # 一级标题   ## 二级标题   ...   ####### 六级标题</code></pre><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p>…</p><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><hr><h4 id="2-在文字下方加上两个以上的-“-“-表示标题-等同于二级标题-“-”"><a href="#2-在文字下方加上两个以上的-“-“-表示标题-等同于二级标题-“-”" class="headerlink" title="2. 在文字下方加上两个以上的 “-“ 表示标题, 等同于二级标题 (“##”)"></a>2. 在文字下方加上两个以上的 “-“ 表示标题, 等同于二级标题 (“##”)</h4><pre><code>  例： 在文字下方加上两个以上 &quot;-&quot; 表示标题----------------------------------</code></pre><h2 id="两个以上-‘-‘-表示二级标题"><a href="#两个以上-‘-‘-表示二级标题" class="headerlink" title="两个以上 ‘-‘ 表示二级标题"></a>两个以上 ‘-‘ 表示二级标题</h2><h4 id="3-在文字下方加上两个以上的-“-”-表示标题，等同于一级标题-“-”"><a href="#3-在文字下方加上两个以上的-“-”-表示标题，等同于一级标题-“-”" class="headerlink" title="3. 在文字下方加上两个以上的 “=” 表示标题，等同于一级标题 (“#”)"></a>3. 在文字下方加上两个以上的 “=” 表示标题，等同于一级标题 (“#”)</h4><pre><code>    例：在文字下方加上 &quot;=&quot; 表示标题(两个以上&quot;=&quot;)=======================</code></pre><h1 id="两个以上-‘-’-表示一级标题"><a href="#两个以上-‘-’-表示一级标题" class="headerlink" title="两个以上 ‘=’ 表示一级标题"></a>两个以上 ‘=’ 表示一级标题</h1><h3 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体</h3><h4 id="1-在-文字-前后-加上-两个-‘-’-或-‘-’"><a href="#1-在-文字-前后-加上-两个-‘-’-或-‘-’" class="headerlink" title="1. 在 文字 前后 加上 两个 ‘_’ 或 ‘*’"></a>1. 在 <strong>文字</strong> 前后 <strong>加上</strong> 两个 ‘_’ 或 ‘*’</h4><pre><code>例：__n__  或 **n**</code></pre><p><strong>粗体</strong></p><h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h3><h4 id="1-在文字前后加上一个-‘-’-或-‘-’"><a href="#1-在文字前后加上一个-‘-’-或-‘-’" class="headerlink" title="1. 在文字前后加上一个 ‘_’ 或 ‘*’"></a>1. 在文字前后加上一个 ‘_’ 或 ‘*’</h4><pre><code>例： _斜体_ 或 *斜体*</code></pre><p>_斜体_</p><h3 id="粗斜体"><a href="#粗斜体" class="headerlink" title="粗斜体"></a>粗斜体</h3><h4 id="1-在文字前后加上三个-‘-’-或-‘-’"><a href="#1-在文字前后加上三个-‘-’-或-‘-’" class="headerlink" title="1. 在文字前后加上三个 ‘_’ 或 ‘*’"></a>1. 在文字前后加上三个 ‘_’ 或 ‘*’</h4><pre><code>例： ___斜粗体___ 或 ***斜粗体***</code></pre><p><strong><em>粗斜体</em></strong>  <strong><em>粗斜体</em></strong></p><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><h4 id="1-行首加上四个-Tab-或-四个空格-代码块自带滚动条效果"><a href="#1-行首加上四个-Tab-或-四个空格-代码块自带滚动条效果" class="headerlink" title="1. 行首加上四个 Tab 或 四个空格 (代码块自带滚动条效果)"></a>1. 行首加上四个 Tab 或 四个空格 (代码块自带滚动条效果)</h4><pre><code>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++--------------------------------------------------------------------------------------</code></pre><h3 id="区块引用"><a href="#区块引用" class="headerlink" title="区块引用"></a>区块引用</h3><h4 id="1-文字前面加上-“-gt-”"><a href="#1-文字前面加上-“-gt-”" class="headerlink" title="1. 文字前面加上 “&gt;”"></a>1. 文字前面加上 “&gt;”</h4><pre><code>例： &gt; 这个一个区块引用</code></pre><blockquote><p> 区块引用效果如下</p></blockquote><h4 id="2-区块引用可以嵌套使用"><a href="#2-区块引用可以嵌套使用" class="headerlink" title="2. 区块引用可以嵌套使用"></a>2. 区块引用可以嵌套使用</h4><pre><code>例：&gt; 这是外层&gt;&gt; 这是内层&gt;&gt;&gt; 这里更内层</code></pre><p>示例效果：</p><blockquote><p>这里外层</p><blockquote><p>这是内层</p><blockquote><p>这是更内层<br>这也是内层</p></blockquote></blockquote></blockquote><p>注意<br>如果 <code>&gt;</code> 和 <code>&gt;&gt;</code> 嵌套使用的话，从 <code>&gt;&gt;</code> 退到 <code>&gt;</code> 时，必须之间要加一个空格或者 <code>&gt;</code> 作为过渡，否则默认为下一行和上一行是同一级别的引用。如示例所示。<br>示例效果：</p><blockquote><p>这里外层</p><blockquote><p>这是内层</p><blockquote><p>这是更内层</p></blockquote><p>这也是内层</p></blockquote></blockquote><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><h4 id="1-三个以上”-“"><a href="#1-三个以上”-“" class="headerlink" title="1. 三个以上”-“"></a>1. 三个以上”-“</h4><pre><code>例： ----</code></pre><p>示例效果如下</p><hr><h4 id="2-三个以上”-”"><a href="#2-三个以上”-”" class="headerlink" title="2. 三个以上”*”"></a>2. 三个以上”*”</h4><pre><code>例： ***</code></pre><p>示例效果如下</p><hr><h3 id="代码块和语法高亮"><a href="#代码块和语法高亮" class="headerlink" title="代码块和语法高亮"></a>代码块和语法高亮</h3><h4 id="1-代码块使用方法如下："><a href="#1-代码块使用方法如下：" class="headerlink" title="1. 代码块使用方法如下："></a>1. 代码块使用方法如下：</h4><pre><code><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo(<span class="string">"this a js code Block"</span>);</span><br></pre></td></tr></table></figure></code></pre><p>代码块效果如下<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> tip = <span class="string">"this a js code block"</span>;</span><br><span class="line">echo(tip);</span><br></pre></td></tr></table></figure></p><h4 id="2-代码块语法高亮-在-“"><a href="#2-代码块语法高亮-在-“" class="headerlink" title="2. 代码块语法高亮 在 “"></a>2. 代码块语法高亮 在 “<figure class="highlight plain"><figcaption><span>后加上 language</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">```java</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">    System.out.println(&quot;hello markdown&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h4><h4 id="3-高亮部分文字"><a href="#3-高亮部分文字" class="headerlink" title="3. 高亮部分文字"></a>3. 高亮部分文字</h4><pre><code>`高亮部分`</code></pre><p><code>高亮效果示例</code></p><h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><h4 id="1-“-链接显示文字-url-“超链接标题”-“-url-和标题之间有空格"><a href="#1-“-链接显示文字-url-“超链接标题”-“-url-和标题之间有空格" class="headerlink" title="1. “[链接显示文字](url “超链接标题”)“ url 和标题之间有空格"></a>1. “[链接显示文字](url “超链接标题”)“ url 和标题之间有空格</h4><pre><code>例： [百度](http://www.baidu.com &quot;百度&quot;)</code></pre><p>示例效果:   <a href="http://www.baidu.com" title="百度" target="_blank" rel="noopener">百度</a></p><h4 id="2-指向本地文件的链接"><a href="#2-指向本地文件的链接" class="headerlink" title="2. 指向本地文件的链接"></a>2. 指向本地文件的链接</h4><pre><code>例: [icon.png](/assets/picture/headPicture.png)</code></pre><p><a href="/assets/picture/headPicture.png">icon.png</a></p><h3 id="图片引用"><a href="#图片引用" class="headerlink" title="图片引用"></a>图片引用</h3><h4 id="1-图片引用使用方法如下"><a href="#1-图片引用使用方法如下" class="headerlink" title="1.  图片引用使用方法如下"></a>1.  图片引用使用方法如下</h4><pre><code>例： ![图片](图片路径 &quot;图片标题&quot;)</code></pre><p><img src="/assets/picture/headPicture.png" alt="图片" title="图片标题"></p><h3 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h3><h4 id="1-在需要转义的字符前面加上’-’"><a href="#1-在需要转义的字符前面加上’-’" class="headerlink" title="1. 在需要转义的字符前面加上’\’"></a>1. 在需要转义的字符前面加上’\’</h4><pre><code>例： 这是用来 _演示_ 的 **文本**    这是用来 \_演示\_ 的 \**文本\**</code></pre><p>这是用来 _演示_ 的 <strong>文本</strong></p><p>这是用来 _演示_ 的 **文本**</p><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><h4 id="1-在文字前后加上两个-‘-’"><a href="#1-在文字前后加上两个-‘-’" class="headerlink" title="1. 在文字前后加上两个 ‘~’"></a>1. 在文字前后加上两个 ‘~’</h4><pre><code>例： ~~删除线~~</code></pre><p>示例效果<br><del>删除线</del></p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><h4 id="1-使用-来分隔不同的单元格，使用-来分隔表头和其他行："><a href="#1-使用-来分隔不同的单元格，使用-来分隔表头和其他行：" class="headerlink" title="1. 使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行："></a>1. 使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行：</h4><pre><code>例：| name | age || ---- | --- || zero | 24  || liam | 23  |</code></pre><p>示例效果：</p><table><thead><tr><th>name</th><th>age</th></tr></thead><tbody><tr><td>zero</td><td>24</td></tr><tr><td>liam</td><td>23</td></tr></tbody></table><h4 id="2-表格对其-在表头和其他行的分隔符中加上-‘-’"><a href="#2-表格对其-在表头和其他行的分隔符中加上-‘-’" class="headerlink" title="2. 表格对其, 在表头和其他行的分隔符中加上 ‘:’"></a>2. 表格对其, 在表头和其他行的分隔符中加上 ‘:’</h4><h5 id="‘-—‘-左对齐"><a href="#‘-—‘-左对齐" class="headerlink" title="‘:—‘ 左对齐"></a>‘:—‘ 左对齐</h5><h5 id="‘-–-’-居中"><a href="#‘-–-’-居中" class="headerlink" title="‘:–:’ 居中"></a>‘:–:’ 居中</h5><h5 id="‘—-’-右对齐"><a href="#‘—-’-右对齐" class="headerlink" title="‘—:’ 右对齐"></a>‘—:’ 右对齐</h5><pre><code>例：| left | center | right || :--- | :----: | ----: ||左    |中     |右     |</code></pre><p>示例效果:</p><table><thead><tr><th style="text-align:left">left</th><th style="text-align:center">center</th><th style="text-align:right">right</th></tr></thead><tbody><tr><td style="text-align:left">左</td><td style="text-align:center">中</td><td style="text-align:right">右</td></tr></tbody></table><h3 id="上标和下标"><a href="#上标和下标" class="headerlink" title="上标和下标"></a>上标和下标</h3><h4 id="1-上标-使用html标签-lt-sup-gt"><a href="#1-上标-使用html标签-lt-sup-gt" class="headerlink" title="1. 上标 使用html标签 &lt;sup&gt;"></a>1. 上标 使用html标签 <code>&lt;sup&gt;</code></h4><pre><code>例： 来个上标 &lt;sup&gt;[1]&lt;/sup&gt;</code></pre><p>示例效果:</p><p>来个上标<sup>[1]</sup></p><h4 id="2-下标-使用html-标签-lt-sub-gt"><a href="#2-下标-使用html-标签-lt-sub-gt" class="headerlink" title="2. 下标  使用html 标签 &lt;sub&gt;"></a>2. 下标  使用html 标签 <code>&lt;sub&gt;</code></h4><pre><code>例: 来个下标 &lt;sub&gt;[2]&lt;/sub&gt;</code></pre><p>示例效果:</p><p>来个下标<sub>[2]</sub></p>]]></content>
      
      <categories>
          
          <category> GitHub Pages </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MarkDown </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
